
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00001daa  00001e1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001daa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00001e34  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001e90  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  00001ecc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000140d  00000000  00000000  00001f94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a63  00000000  00000000  000033a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009f0  00000000  00000000  00003e04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001b8  00000000  00000000  000047f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000526  00000000  00000000  000049ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b84  00000000  00000000  00004ed2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00005a56  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 01 01 	jmp	0x202	; 0x202 <__ctors_end>
       4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
       8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
       c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      24:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      28:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      34:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      38:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      50:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      54:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
      68:	41 01       	movw	r8, r2
      6a:	52 01       	movw	r10, r4
      6c:	63 01       	movw	r12, r6
      6e:	74 01       	movw	r14, r8
      70:	85 01       	movw	r16, r10
      72:	96 01       	movw	r18, r12
      74:	a7 01       	movw	r20, r14
      76:	b8 01       	movw	r22, r16
      78:	c9 01       	movw	r24, r18
      7a:	da 01       	movw	r26, r20
      7c:	eb 01       	movw	r28, r22
      7e:	07 63       	ori	r16, 0x37	; 55
      80:	42 36       	cpi	r20, 0x62	; 98
      82:	b7 9b       	sbis	0x16, 7	; 22
      84:	d8 a7       	std	Y+40, r29	; 0x28
      86:	1a 39       	cpi	r17, 0x9A	; 154
      88:	68 56       	subi	r22, 0x68	; 104
      8a:	18 ae       	std	Y+56, r1	; 0x38
      8c:	ba ab       	std	Y+50, r27	; 0x32
      8e:	55 8c       	ldd	r5, Z+29	; 0x1d
      90:	1d 3c       	cpi	r17, 0xCD	; 205
      92:	b7 cc       	rjmp	.-1682   	; 0xfffffa02 <__eeprom_end+0xff7efa02>
      94:	57 63       	ori	r21, 0x37	; 55
      96:	bd 6d       	ori	r27, 0xDD	; 221
      98:	ed fd       	.word	0xfded	; ????
      9a:	75 3e       	cpi	r23, 0xE5	; 229
      9c:	f6 17       	cp	r31, r22
      9e:	72 31       	cpi	r23, 0x12	; 18
      a0:	bf 00       	.word	0x00bf	; ????
      a2:	00 00       	nop
      a4:	80 3f       	cpi	r24, 0xF0	; 240
      a6:	08 00       	.word	0x0008	; ????
      a8:	00 00       	nop
      aa:	be 92       	st	-X, r11
      ac:	24 49       	sbci	r18, 0x94	; 148
      ae:	12 3e       	cpi	r17, 0xE2	; 226
      b0:	ab aa       	std	Y+51, r10	; 0x33
      b2:	aa 2a       	or	r10, r26
      b4:	be cd       	rjmp	.-1156   	; 0xfffffc32 <__eeprom_end+0xff7efc32>
      b6:	cc cc       	rjmp	.-1640   	; 0xfffffa50 <__eeprom_end+0xff7efa50>
      b8:	4c 3e       	cpi	r20, 0xEC	; 236
      ba:	00 00       	nop
      bc:	00 80       	ld	r0, Z
      be:	be ab       	std	Y+54, r27	; 0x36
      c0:	aa aa       	std	Y+50, r10	; 0x32
      c2:	aa 3e       	cpi	r26, 0xEA	; 234
      c4:	00 00       	nop
      c6:	00 00       	nop
      c8:	bf 00       	.word	0x00bf	; ????
      ca:	00 00       	nop
      cc:	80 3f       	cpi	r24, 0xF0	; 240
      ce:	00 00       	nop
      d0:	00 00       	nop
      d2:	00 08       	sbc	r0, r0
      d4:	41 78       	andi	r20, 0x81	; 129
      d6:	d3 bb       	out	0x13, r29	; 19
      d8:	43 87       	std	Z+11, r20	; 0x0b
      da:	d1 13       	cpse	r29, r17
      dc:	3d 19       	sub	r19, r13
      de:	0e 3c       	cpi	r16, 0xCE	; 206
      e0:	c3 bd       	out	0x23, r28	; 35
      e2:	42 82       	std	Z+2, r4	; 0x02
      e4:	ad 2b       	or	r26, r29
      e6:	3e 68       	ori	r19, 0x8E	; 142
      e8:	ec 82       	std	Y+4, r14	; 0x04
      ea:	76 be       	out	0x36, r7	; 54
      ec:	d9 8f       	std	Y+25, r29	; 0x19
      ee:	e1 a9       	ldd	r30, Z+49	; 0x31
      f0:	3e 4c       	sbci	r19, 0xCE	; 206
      f2:	80 ef       	ldi	r24, 0xF0	; 240
      f4:	ff be       	out	0x3f, r15	; 63
      f6:	01 c4       	rjmp	.+2050   	; 0x8fa <readBMP180+0x4a2>
      f8:	ff 7f       	andi	r31, 0xFF	; 255
      fa:	3f 00       	.word	0x003f	; ????
      fc:	00 00       	nop
	...

00000100 <__trampolines_end>:
     100:	6e 61       	ori	r22, 0x1E	; 30
     102:	6e 00       	.word	0x006e	; ????

00000104 <__c.2332>:
     104:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     114:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     124:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     134:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     144:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     154:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     164:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     174:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     184:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     194:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1a4:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1b4:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1c4:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1d4:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1e4:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1f4:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000202 <__ctors_end>:
     202:	11 24       	eor	r1, r1
     204:	1f be       	out	0x3f, r1	; 63
     206:	cf ef       	ldi	r28, 0xFF	; 255
     208:	d8 e0       	ldi	r29, 0x08	; 8
     20a:	de bf       	out	0x3e, r29	; 62
     20c:	cd bf       	out	0x3d, r28	; 61

0000020e <__do_copy_data>:
     20e:	11 e0       	ldi	r17, 0x01	; 1
     210:	a0 e0       	ldi	r26, 0x00	; 0
     212:	b1 e0       	ldi	r27, 0x01	; 1
     214:	ea ea       	ldi	r30, 0xAA	; 170
     216:	fd e1       	ldi	r31, 0x1D	; 29
     218:	02 c0       	rjmp	.+4      	; 0x21e <__do_copy_data+0x10>
     21a:	05 90       	lpm	r0, Z+
     21c:	0d 92       	st	X+, r0
     21e:	a6 31       	cpi	r26, 0x16	; 22
     220:	b1 07       	cpc	r27, r17
     222:	d9 f7       	brne	.-10     	; 0x21a <__do_copy_data+0xc>
     224:	0e 94 04 05 	call	0xa08	; 0xa08 <main>
     228:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <_exit>

0000022c <__bad_interrupt>:
     22c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000230 <initBMP180>:
 *
 * Created: 11/23/2020 11:07:51 AM
 *  Author: mizo
 */ 
#include "BMP180.h"
uint8_t initBMP180(BMP180 *bmp180){
     230:	cf 92       	push	r12
     232:	df 92       	push	r13
     234:	ff 92       	push	r15
     236:	0f 93       	push	r16
     238:	1f 93       	push	r17
     23a:	cf 93       	push	r28
     23c:	df 93       	push	r29
     23e:	6c 01       	movw	r12, r24
     240:	01 e0       	ldi	r16, 0x01	; 1
     242:	10 e0       	ldi	r17, 0x00	; 0
     244:	0f 2e       	mov	r0, r31
     246:	fa ea       	ldi	r31, 0xAA	; 170
     248:	ff 2e       	mov	r15, r31
     24a:	f0 2d       	mov	r31, r0
     24c:	04 c0       	rjmp	.+8      	; 0x256 <initBMP180+0x26>
     24e:	f3 94       	inc	r15
     250:	f3 94       	inc	r15
     252:	0f 5f       	subi	r16, 0xFF	; 255
     254:	1f 4f       	sbci	r17, 0xFF	; 255
     256:	e8 01       	movw	r28, r16
     258:	21 97       	sbiw	r28, 0x01	; 1
	for (int i = 0; i < 11; i++){
		//start communication with BMP180
		startI2C(BMP180_ADDR_w);
     25a:	8e ee       	ldi	r24, 0xEE	; 238
     25c:	0e 94 bd 04 	call	0x97a	; 0x97a <startI2C>
		//send target register (for coof)
		writeI2C((170 + (2 * i)));
     260:	8f 2d       	mov	r24, r15
     262:	0e 94 e5 04 	call	0x9ca	; 0x9ca <writeI2C>
		//send stop signal
		stopI2C();
     266:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>
		
		//start communication with BMP180
		startI2C(BMP180_ADDR_r);
     26a:	8f ee       	ldi	r24, 0xEF	; 239
     26c:	0e 94 bd 04 	call	0x97a	; 0x97a <startI2C>
		//read into coof
		switch(i){
     270:	cb 30       	cpi	r28, 0x0B	; 11
     272:	d1 05       	cpc	r29, r1
     274:	08 f0       	brcs	.+2      	; 0x278 <initBMP180+0x48>
     276:	c8 c0       	rjmp	.+400    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     278:	fe 01       	movw	r30, r28
     27a:	ec 5c       	subi	r30, 0xCC	; 204
     27c:	ff 4f       	sbci	r31, 0xFF	; 255
     27e:	0c 94 ca 0c 	jmp	0x1994	; 0x1994 <__tablejump2__>
			case 0:
				(*bmp180).coof.ac1 = (readI2C(ACK) << 8) + readI2C(NACK);
     282:	81 e0       	ldi	r24, 0x01	; 1
     284:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     288:	c8 2f       	mov	r28, r24
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     290:	2c 2f       	mov	r18, r28
     292:	30 e0       	ldi	r19, 0x00	; 0
     294:	32 2f       	mov	r19, r18
     296:	22 27       	eor	r18, r18
     298:	28 0f       	add	r18, r24
     29a:	31 1d       	adc	r19, r1
     29c:	f6 01       	movw	r30, r12
     29e:	31 83       	std	Z+1, r19	; 0x01
     2a0:	20 83       	st	Z, r18
				break;
     2a2:	bf c0       	rjmp	.+382    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 1:
				(*bmp180).coof.ac2 = (readI2C(ACK) << 8) + readI2C(NACK);
     2a4:	81 e0       	ldi	r24, 0x01	; 1
     2a6:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     2aa:	c8 2f       	mov	r28, r24
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     2b2:	2c 2f       	mov	r18, r28
     2b4:	30 e0       	ldi	r19, 0x00	; 0
     2b6:	32 2f       	mov	r19, r18
     2b8:	22 27       	eor	r18, r18
     2ba:	28 0f       	add	r18, r24
     2bc:	31 1d       	adc	r19, r1
     2be:	f6 01       	movw	r30, r12
     2c0:	33 83       	std	Z+3, r19	; 0x03
     2c2:	22 83       	std	Z+2, r18	; 0x02
				break;
     2c4:	ae c0       	rjmp	.+348    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 2:
				(*bmp180).coof.ac3 = (readI2C(ACK) << 8) + readI2C(NACK);
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     2cc:	c8 2f       	mov	r28, r24
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     2d4:	2c 2f       	mov	r18, r28
     2d6:	30 e0       	ldi	r19, 0x00	; 0
     2d8:	32 2f       	mov	r19, r18
     2da:	22 27       	eor	r18, r18
     2dc:	28 0f       	add	r18, r24
     2de:	31 1d       	adc	r19, r1
     2e0:	f6 01       	movw	r30, r12
     2e2:	35 83       	std	Z+5, r19	; 0x05
     2e4:	24 83       	std	Z+4, r18	; 0x04
				break;
     2e6:	9d c0       	rjmp	.+314    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 3:
				(*bmp180).coof.ac4 = (readI2C(ACK) << 8) + readI2C(NACK);
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     2ee:	c8 2f       	mov	r28, r24
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     2f6:	2c 2f       	mov	r18, r28
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	32 2f       	mov	r19, r18
     2fc:	22 27       	eor	r18, r18
     2fe:	28 0f       	add	r18, r24
     300:	31 1d       	adc	r19, r1
     302:	f6 01       	movw	r30, r12
     304:	37 83       	std	Z+7, r19	; 0x07
     306:	26 83       	std	Z+6, r18	; 0x06
				break;
     308:	8c c0       	rjmp	.+280    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 4:
				(*bmp180).coof.ac5 = (readI2C(ACK) << 8) + readI2C(NACK);
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     310:	c8 2f       	mov	r28, r24
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     318:	2c 2f       	mov	r18, r28
     31a:	30 e0       	ldi	r19, 0x00	; 0
     31c:	32 2f       	mov	r19, r18
     31e:	22 27       	eor	r18, r18
     320:	28 0f       	add	r18, r24
     322:	31 1d       	adc	r19, r1
     324:	f6 01       	movw	r30, r12
     326:	31 87       	std	Z+9, r19	; 0x09
     328:	20 87       	std	Z+8, r18	; 0x08
				break;
     32a:	7b c0       	rjmp	.+246    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 5:
				(*bmp180).coof.ac6 = (readI2C(ACK) << 8) + readI2C(NACK);
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     332:	c8 2f       	mov	r28, r24
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     33a:	2c 2f       	mov	r18, r28
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	32 2f       	mov	r19, r18
     340:	22 27       	eor	r18, r18
     342:	28 0f       	add	r18, r24
     344:	31 1d       	adc	r19, r1
     346:	f6 01       	movw	r30, r12
     348:	33 87       	std	Z+11, r19	; 0x0b
     34a:	22 87       	std	Z+10, r18	; 0x0a
				break;
     34c:	6a c0       	rjmp	.+212    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 6:
				(*bmp180).coof.b1 = (readI2C(ACK) << 8) + readI2C(NACK);
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     354:	c8 2f       	mov	r28, r24
     356:	80 e0       	ldi	r24, 0x00	; 0
     358:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     35c:	2c 2f       	mov	r18, r28
     35e:	30 e0       	ldi	r19, 0x00	; 0
     360:	32 2f       	mov	r19, r18
     362:	22 27       	eor	r18, r18
     364:	28 0f       	add	r18, r24
     366:	31 1d       	adc	r19, r1
     368:	f6 01       	movw	r30, r12
     36a:	35 87       	std	Z+13, r19	; 0x0d
     36c:	24 87       	std	Z+12, r18	; 0x0c
				break;
     36e:	59 c0       	rjmp	.+178    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 7:
				(*bmp180).coof.b2 = (readI2C(ACK) << 8) + readI2C(NACK);
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     376:	c8 2f       	mov	r28, r24
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     37e:	2c 2f       	mov	r18, r28
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	32 2f       	mov	r19, r18
     384:	22 27       	eor	r18, r18
     386:	28 0f       	add	r18, r24
     388:	31 1d       	adc	r19, r1
     38a:	f6 01       	movw	r30, r12
     38c:	37 87       	std	Z+15, r19	; 0x0f
     38e:	26 87       	std	Z+14, r18	; 0x0e
				break;
     390:	48 c0       	rjmp	.+144    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 8:
				(*bmp180).coof.mb = (readI2C(ACK) << 8) + readI2C(NACK);
     392:	81 e0       	ldi	r24, 0x01	; 1
     394:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     398:	c8 2f       	mov	r28, r24
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     3a0:	2c 2f       	mov	r18, r28
     3a2:	30 e0       	ldi	r19, 0x00	; 0
     3a4:	32 2f       	mov	r19, r18
     3a6:	22 27       	eor	r18, r18
     3a8:	28 0f       	add	r18, r24
     3aa:	31 1d       	adc	r19, r1
     3ac:	f6 01       	movw	r30, r12
     3ae:	31 8b       	std	Z+17, r19	; 0x11
     3b0:	20 8b       	std	Z+16, r18	; 0x10
				break;
     3b2:	37 c0       	rjmp	.+110    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 9:
				(*bmp180).coof.mc = (readI2C(ACK) << 8) + readI2C(NACK);
     3b4:	81 e0       	ldi	r24, 0x01	; 1
     3b6:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     3ba:	c8 2f       	mov	r28, r24
     3bc:	80 e0       	ldi	r24, 0x00	; 0
     3be:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     3c2:	2c 2f       	mov	r18, r28
     3c4:	30 e0       	ldi	r19, 0x00	; 0
     3c6:	32 2f       	mov	r19, r18
     3c8:	22 27       	eor	r18, r18
     3ca:	28 0f       	add	r18, r24
     3cc:	31 1d       	adc	r19, r1
     3ce:	f6 01       	movw	r30, r12
     3d0:	33 8b       	std	Z+19, r19	; 0x13
     3d2:	22 8b       	std	Z+18, r18	; 0x12
				break;
     3d4:	26 c0       	rjmp	.+76     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			case 10:
				(*bmp180).coof.md = (readI2C(ACK) << 8) + readI2C(NACK);
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     3dc:	c8 2f       	mov	r28, r24
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     3e4:	2c 2f       	mov	r18, r28
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	32 2f       	mov	r19, r18
     3ea:	22 27       	eor	r18, r18
     3ec:	28 0f       	add	r18, r24
     3ee:	31 1d       	adc	r19, r1
     3f0:	f6 01       	movw	r30, r12
     3f2:	35 8b       	std	Z+21, r19	; 0x15
     3f4:	24 8b       	std	Z+20, r18	; 0x14
				break;
		}
		//send stop signal
		stopI2C();
     3f6:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3fa:	83 ed       	ldi	r24, 0xD3	; 211
     3fc:	90 e3       	ldi	r25, 0x30	; 48
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	f1 f7       	brne	.-4      	; 0x3fe <initBMP180+0x1ce>
     402:	00 c0       	rjmp	.+0      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     404:	00 00       	nop
     406:	16 c0       	rjmp	.+44     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     408:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>
     40c:	e3 ed       	ldi	r30, 0xD3	; 211
     40e:	f0 e3       	ldi	r31, 0x30	; 48
     410:	31 97       	sbiw	r30, 0x01	; 1
     412:	f1 f7       	brne	.-4      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     414:	00 c0       	rjmp	.+0      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     416:	00 00       	nop
 * Created: 11/23/2020 11:07:51 AM
 *  Author: mizo
 */ 
#include "BMP180.h"
uint8_t initBMP180(BMP180 *bmp180){
	for (int i = 0; i < 11; i++){
     418:	0b 30       	cpi	r16, 0x0B	; 11
     41a:	11 05       	cpc	r17, r1
     41c:	0c f4       	brge	.+2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     41e:	17 cf       	rjmp	.-466    	; 0x24e <initBMP180+0x1e>
     420:	09 c0       	rjmp	.+18     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
			case 10:
				(*bmp180).coof.md = (readI2C(ACK) << 8) + readI2C(NACK);
				break;
		}
		//send stop signal
		stopI2C();
     422:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>
     426:	e3 ed       	ldi	r30, 0xD3	; 211
     428:	f0 e3       	ldi	r31, 0x30	; 48
     42a:	31 97       	sbiw	r30, 0x01	; 1
     42c:	f1 f7       	brne	.-4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     42e:	00 c0       	rjmp	.+0      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     430:	00 00       	nop
     432:	0d cf       	rjmp	.-486    	; 0x24e <initBMP180+0x1e>
     434:	ff e5       	ldi	r31, 0x5F	; 95
     436:	2a ee       	ldi	r18, 0xEA	; 234
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	f1 50       	subi	r31, 0x01	; 1
     43c:	20 40       	sbci	r18, 0x00	; 0
     43e:	80 40       	sbci	r24, 0x00	; 0
     440:	e1 f7       	brne	.-8      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     442:	00 c0       	rjmp	.+0      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     444:	00 00       	nop
	}
	//delay 300ms
	_delay_ms(300);
	//init successful
	return INIT_COMPLETE;
}
     446:	88 e1       	ldi	r24, 0x18	; 24
     448:	df 91       	pop	r29
     44a:	cf 91       	pop	r28
     44c:	1f 91       	pop	r17
     44e:	0f 91       	pop	r16
     450:	ff 90       	pop	r15
     452:	df 90       	pop	r13
     454:	cf 90       	pop	r12
     456:	08 95       	ret

00000458 <readBMP180>:
uint8_t readBMP180(BMP180 *bmp180){
     458:	4f 92       	push	r4
     45a:	5f 92       	push	r5
     45c:	6f 92       	push	r6
     45e:	7f 92       	push	r7
     460:	8f 92       	push	r8
     462:	9f 92       	push	r9
     464:	af 92       	push	r10
     466:	bf 92       	push	r11
     468:	cf 92       	push	r12
     46a:	df 92       	push	r13
     46c:	ef 92       	push	r14
     46e:	ff 92       	push	r15
     470:	cf 93       	push	r28
     472:	df 93       	push	r29
     474:	cd b7       	in	r28, 0x3d	; 61
     476:	de b7       	in	r29, 0x3e	; 62
     478:	62 97       	sbiw	r28, 0x12	; 18
     47a:	0f b6       	in	r0, 0x3f	; 63
     47c:	f8 94       	cli
     47e:	de bf       	out	0x3e, r29	; 62
     480:	0f be       	out	0x3f, r0	; 63
     482:	cd bf       	out	0x3d, r28	; 61
     484:	9a 8b       	std	Y+18, r25	; 0x12
     486:	89 8b       	std	Y+17, r24	; 0x11
	//temporary data var
	uint8_t data[3];
	//start communicating with BMP180
	startI2C(BMP180_ADDR_w);
     488:	8e ee       	ldi	r24, 0xEE	; 238
     48a:	0e 94 bd 04 	call	0x97a	; 0x97a <startI2C>
	//select measurement control register
	writeI2C(BMP180_REG_CONTROL);     
     48e:	84 ef       	ldi	r24, 0xF4	; 244
     490:	0e 94 e5 04 	call	0x9ca	; 0x9ca <writeI2C>
	//enable temperature measurement
	writeI2C(BMP180_COMMAND_TEMPERATURE); 
     494:	8e e2       	ldi	r24, 0x2E	; 46
     496:	0e 94 e5 04 	call	0x9ca	; 0x9ca <writeI2C>
	//send stop signal                
	stopI2C();
     49a:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>
     49e:	87 ea       	ldi	r24, 0xA7	; 167
     4a0:	91 e6       	ldi	r25, 0x61	; 97
     4a2:	01 97       	sbiw	r24, 0x01	; 1
     4a4:	f1 f7       	brne	.-4      	; 0x4a2 <readBMP180+0x4a>
     4a6:	00 c0       	rjmp	.+0      	; 0x4a8 <readBMP180+0x50>
     4a8:	00 00       	nop
	//delay 100ms
	_delay_ms(100);

	//start communication with MBP180
	startI2C(BMP180_ADDR_w);
     4aa:	8e ee       	ldi	r24, 0xEE	; 238
     4ac:	0e 94 bd 04 	call	0x97a	; 0x97a <startI2C>
	//select data register
	writeI2C(BMP180_REG_RESULT); 
     4b0:	86 ef       	ldi	r24, 0xF6	; 246
     4b2:	0e 94 e5 04 	call	0x9ca	; 0x9ca <writeI2C>
	//send stop signal
	stopI2C();
     4b6:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>

	//start communication with BMP180
	startI2C(BMP180_ADDR_r);
     4ba:	8f ee       	ldi	r24, 0xEF	; 239
     4bc:	0e 94 bd 04 	call	0x97a	; 0x97a <startI2C>
	//start reading temprature
	int32_t temp = ((readI2C(ACK) <<8) + readI2C(NACK));
     4c0:	81 e0       	ldi	r24, 0x01	; 1
     4c2:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     4c6:	f8 2e       	mov	r15, r24
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     4ce:	e8 2e       	mov	r14, r24
	//send stop signal
	stopI2C();
     4d0:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>

	//start communication with BMP180
	startI2C(BMP180_ADDR_w);
     4d4:	8e ee       	ldi	r24, 0xEE	; 238
     4d6:	0e 94 bd 04 	call	0x97a	; 0x97a <startI2C>
	//select measurement control register
	writeI2C(BMP180_REG_CONTROL); 
     4da:	84 ef       	ldi	r24, 0xF4	; 244
     4dc:	0e 94 e5 04 	call	0x9ca	; 0x9ca <writeI2C>
	//enable pressure measurement, OSS = 1
	writeI2C(BMP180_COMMAND_PRESSURE+(OSS<<6));
     4e0:	84 e3       	ldi	r24, 0x34	; 52
     4e2:	0e 94 e5 04 	call	0x9ca	; 0x9ca <writeI2C>
	//send stop signal
	stopI2C();
     4e6:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>
     4ea:	a7 ea       	ldi	r26, 0xA7	; 167
     4ec:	b1 e6       	ldi	r27, 0x61	; 97
     4ee:	11 97       	sbiw	r26, 0x01	; 1
     4f0:	f1 f7       	brne	.-4      	; 0x4ee <readBMP180+0x96>
     4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <readBMP180+0x9c>
     4f4:	00 00       	nop
	//delay 100ms
	_delay_ms(100);
	//start communication with BMP180
	startI2C(BMP180_ADDR_w);
     4f6:	8e ee       	ldi	r24, 0xEE	; 238
     4f8:	0e 94 bd 04 	call	0x97a	; 0x97a <startI2C>
	//select data register
	writeI2C(BMP180_REG_RESULT); 
     4fc:	86 ef       	ldi	r24, 0xF6	; 246
     4fe:	0e 94 e5 04 	call	0x9ca	; 0x9ca <writeI2C>
	//send stop signal
	stopI2C();
     502:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>
	//request 3 bytes of data
	//start communication with BMP180
	startI2C(BMP180_ADDR_r);
     506:	8f ee       	ldi	r24, 0xEF	; 239
     508:	0e 94 bd 04 	call	0x97a	; 0x97a <startI2C>
	//read pressure
	int32_t pres = readI2C(ACK);
     50c:	81 e0       	ldi	r24, 0x01	; 1
     50e:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
	pres = (pres<<8) + readI2C(ACK);
     512:	88 2e       	mov	r8, r24
     514:	91 2c       	mov	r9, r1
     516:	a1 2c       	mov	r10, r1
     518:	b1 2c       	mov	r11, r1
     51a:	ba 2c       	mov	r11, r10
     51c:	a9 2c       	mov	r10, r9
     51e:	98 2c       	mov	r9, r8
     520:	88 24       	eor	r8, r8
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
	pres = (pres<<8) + readI2C(NACK);
     528:	88 0e       	add	r8, r24
     52a:	91 1c       	adc	r9, r1
     52c:	a1 1c       	adc	r10, r1
     52e:	b1 1c       	adc	r11, r1
     530:	ba 2c       	mov	r11, r10
     532:	a9 2c       	mov	r10, r9
     534:	98 2c       	mov	r9, r8
     536:	88 24       	eor	r8, r8
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	0e 94 f5 04 	call	0x9ea	; 0x9ea <readI2C>
     53e:	88 0e       	add	r8, r24
     540:	91 1c       	adc	r9, r1
     542:	a1 1c       	adc	r10, r1
     544:	b1 1c       	adc	r11, r1
	pres = pres >>(8-OSS); 
	//send stop signal
	stopI2C();
     546:	0e 94 db 04 	call	0x9b6	; 0x9b6 <stopI2C>

	// Convert the data
	

	// Calibration for Temperature
	int32_t X1 = (temp - (*bmp180).coof.ac6) * (*bmp180).coof.ac5 / pow(2,15);
     54a:	2f 2d       	mov	r18, r15
     54c:	30 e0       	ldi	r19, 0x00	; 0
     54e:	32 2f       	mov	r19, r18
     550:	22 27       	eor	r18, r18
     552:	2e 0d       	add	r18, r14
     554:	31 1d       	adc	r19, r1
     556:	a9 01       	movw	r20, r18
     558:	33 0f       	add	r19, r19
     55a:	66 0b       	sbc	r22, r22
     55c:	77 0b       	sbc	r23, r23
     55e:	e9 89       	ldd	r30, Y+17	; 0x11
     560:	fa 89       	ldd	r31, Y+18	; 0x12
     562:	82 85       	ldd	r24, Z+10	; 0x0a
     564:	93 85       	ldd	r25, Z+11	; 0x0b
     566:	9a 01       	movw	r18, r20
     568:	ab 01       	movw	r20, r22
     56a:	28 1b       	sub	r18, r24
     56c:	39 0b       	sbc	r19, r25
     56e:	41 09       	sbc	r20, r1
     570:	51 09       	sbc	r21, r1
     572:	a0 85       	ldd	r26, Z+8	; 0x08
     574:	b1 85       	ldd	r27, Z+9	; 0x09
     576:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__muluhisi3>
     57a:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	30 e0       	ldi	r19, 0x00	; 0
     582:	40 e0       	ldi	r20, 0x00	; 0
     584:	58 e3       	ldi	r21, 0x38	; 56
     586:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     58a:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     58e:	6b 01       	movw	r12, r22
     590:	7c 01       	movw	r14, r24
	int32_t X2 = ((*bmp180).coof.mc * pow(2,11)) / (X1 + (*bmp180).coof.md);
	int32_t B5 = X1 + X2;
     592:	a9 89       	ldd	r26, Y+17	; 0x11
     594:	ba 89       	ldd	r27, Y+18	; 0x12
     596:	52 96       	adiw	r26, 0x12	; 18
     598:	6d 91       	ld	r22, X+
     59a:	7c 91       	ld	r23, X
     59c:	53 97       	sbiw	r26, 0x13	; 19
     59e:	07 2e       	mov	r0, r23
     5a0:	00 0c       	add	r0, r0
     5a2:	88 0b       	sbc	r24, r24
     5a4:	99 0b       	sbc	r25, r25
     5a6:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	30 e0       	ldi	r19, 0x00	; 0
     5ae:	40 e0       	ldi	r20, 0x00	; 0
     5b0:	55 e4       	ldi	r21, 0x45	; 69
     5b2:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     5b6:	2b 01       	movw	r4, r22
     5b8:	3c 01       	movw	r6, r24
     5ba:	e9 89       	ldd	r30, Y+17	; 0x11
     5bc:	fa 89       	ldd	r31, Y+18	; 0x12
     5be:	64 89       	ldd	r22, Z+20	; 0x14
     5c0:	75 89       	ldd	r23, Z+21	; 0x15
     5c2:	cb 01       	movw	r24, r22
     5c4:	77 0f       	add	r23, r23
     5c6:	aa 0b       	sbc	r26, r26
     5c8:	bb 0b       	sbc	r27, r27
     5ca:	bc 01       	movw	r22, r24
     5cc:	cd 01       	movw	r24, r26
     5ce:	6c 0d       	add	r22, r12
     5d0:	7d 1d       	adc	r23, r13
     5d2:	8e 1d       	adc	r24, r14
     5d4:	9f 1d       	adc	r25, r15
     5d6:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     5da:	9b 01       	movw	r18, r22
     5dc:	ac 01       	movw	r20, r24
     5de:	c3 01       	movw	r24, r6
     5e0:	b2 01       	movw	r22, r4
     5e2:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <__divsf3>
     5e6:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     5ea:	c6 0e       	add	r12, r22
     5ec:	d7 1e       	adc	r13, r23
     5ee:	e8 1e       	adc	r14, r24
     5f0:	f9 1e       	adc	r15, r25
	float cTmp = ((B5 + 8.0) / pow(2,4)) / 10.0;
     5f2:	c7 01       	movw	r24, r14
     5f4:	b6 01       	movw	r22, r12
     5f6:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	40 e0       	ldi	r20, 0x00	; 0
     600:	51 e4       	ldi	r21, 0x41	; 65
     602:	0e 94 87 05 	call	0xb0e	; 0xb0e <__addsf3>
     606:	20 e0       	ldi	r18, 0x00	; 0
     608:	30 e0       	ldi	r19, 0x00	; 0
     60a:	40 e8       	ldi	r20, 0x80	; 128
     60c:	5d e3       	ldi	r21, 0x3D	; 61
     60e:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     612:	20 e0       	ldi	r18, 0x00	; 0
     614:	30 e0       	ldi	r19, 0x00	; 0
     616:	40 e2       	ldi	r20, 0x20	; 32
     618:	51 e4       	ldi	r21, 0x41	; 65
     61a:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <__divsf3>
     61e:	69 83       	std	Y+1, r22	; 0x01
     620:	7a 83       	std	Y+2, r23	; 0x02
     622:	8b 83       	std	Y+3, r24	; 0x03
     624:	9c 83       	std	Y+4, r25	; 0x04
	float fTmp = cTmp * 1.8 + 32;
     626:	26 e6       	ldi	r18, 0x66	; 102
     628:	36 e6       	ldi	r19, 0x66	; 102
     62a:	46 ee       	ldi	r20, 0xE6	; 230
     62c:	5f e3       	ldi	r21, 0x3F	; 63
     62e:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     632:	20 e0       	ldi	r18, 0x00	; 0
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	40 e0       	ldi	r20, 0x00	; 0
     638:	52 e4       	ldi	r21, 0x42	; 66
     63a:	0e 94 87 05 	call	0xb0e	; 0xb0e <__addsf3>
     63e:	69 87       	std	Y+9, r22	; 0x09
     640:	7a 87       	std	Y+10, r23	; 0x0a
     642:	8b 87       	std	Y+11, r24	; 0x0b
     644:	9c 87       	std	Y+12, r25	; 0x0c

	// Calibration for Pressure
	int32_t B6 = B5 - 4000;
     646:	26 01       	movw	r4, r12
     648:	37 01       	movw	r6, r14
     64a:	f0 ea       	ldi	r31, 0xA0	; 160
     64c:	4f 1a       	sub	r4, r31
     64e:	ff e0       	ldi	r31, 0x0F	; 15
     650:	5f 0a       	sbc	r5, r31
     652:	61 08       	sbc	r6, r1
     654:	71 08       	sbc	r7, r1
	X1 = ((*bmp180).coof.b2 * (B6 * B6 / pow(2,12))) / pow(2,11);
     656:	a3 01       	movw	r20, r6
     658:	92 01       	movw	r18, r4
     65a:	c3 01       	movw	r24, r6
     65c:	b2 01       	movw	r22, r4
     65e:	0e 94 98 0c 	call	0x1930	; 0x1930 <__mulsi3>
     662:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     666:	20 e0       	ldi	r18, 0x00	; 0
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	40 e8       	ldi	r20, 0x80	; 128
     66c:	59 e3       	ldi	r21, 0x39	; 57
     66e:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     672:	6d 83       	std	Y+5, r22	; 0x05
     674:	7e 83       	std	Y+6, r23	; 0x06
     676:	8f 83       	std	Y+7, r24	; 0x07
     678:	98 87       	std	Y+8, r25	; 0x08
	int32_t X3 = X1 + X2;
	int32_t B3 = ((((*bmp180).coof.ac1 * 4 + X3) <<OSS) + 2) / 4;
	X1 = (*bmp180).coof.ac3 * B6 / pow(2,13);
	X2 = ((*bmp180).coof.b1 * (B6 * B6 / pow(2,12))) / pow(2,16);
	X3 = ((X1 + X2) + 2) / pow(2,2);
	uint32_t B4 = (*bmp180).coof.ac4 * (uint32_t)(X3 + 32768) / pow(2,15);
     67a:	e9 89       	ldd	r30, Y+17	; 0x11
     67c:	fa 89       	ldd	r31, Y+18	; 0x12
     67e:	a4 81       	ldd	r26, Z+4	; 0x04
     680:	b5 81       	ldd	r27, Z+5	; 0x05
     682:	a3 01       	movw	r20, r6
     684:	92 01       	movw	r18, r4
     686:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__mulshisi3>
     68a:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     68e:	20 e0       	ldi	r18, 0x00	; 0
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	40 e0       	ldi	r20, 0x00	; 0
     694:	59 e3       	ldi	r21, 0x39	; 57
     696:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     69a:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     69e:	6b 01       	movw	r12, r22
     6a0:	7c 01       	movw	r14, r24
     6a2:	a9 89       	ldd	r26, Y+17	; 0x11
     6a4:	ba 89       	ldd	r27, Y+18	; 0x12
     6a6:	1c 96       	adiw	r26, 0x0c	; 12
     6a8:	6d 91       	ld	r22, X+
     6aa:	7c 91       	ld	r23, X
     6ac:	1d 97       	sbiw	r26, 0x0d	; 13
     6ae:	07 2e       	mov	r0, r23
     6b0:	00 0c       	add	r0, r0
     6b2:	88 0b       	sbc	r24, r24
     6b4:	99 0b       	sbc	r25, r25
     6b6:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     6ba:	2d 81       	ldd	r18, Y+5	; 0x05
     6bc:	3e 81       	ldd	r19, Y+6	; 0x06
     6be:	4f 81       	ldd	r20, Y+7	; 0x07
     6c0:	58 85       	ldd	r21, Y+8	; 0x08
     6c2:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     6c6:	20 e0       	ldi	r18, 0x00	; 0
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	40 e8       	ldi	r20, 0x80	; 128
     6cc:	57 e3       	ldi	r21, 0x37	; 55
     6ce:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     6d2:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     6d6:	dc 01       	movw	r26, r24
     6d8:	cb 01       	movw	r24, r22
     6da:	8c 0d       	add	r24, r12
     6dc:	9d 1d       	adc	r25, r13
     6de:	ae 1d       	adc	r26, r14
     6e0:	bf 1d       	adc	r27, r15
     6e2:	bc 01       	movw	r22, r24
     6e4:	cd 01       	movw	r24, r26
     6e6:	6e 5f       	subi	r22, 0xFE	; 254
     6e8:	7f 4f       	sbci	r23, 0xFF	; 255
     6ea:	8f 4f       	sbci	r24, 0xFF	; 255
     6ec:	9f 4f       	sbci	r25, 0xFF	; 255
     6ee:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     6f2:	20 e0       	ldi	r18, 0x00	; 0
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	40 e8       	ldi	r20, 0x80	; 128
     6f8:	5e e3       	ldi	r21, 0x3E	; 62
     6fa:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     6fe:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     702:	9b 01       	movw	r18, r22
     704:	ac 01       	movw	r20, r24
     706:	30 58       	subi	r19, 0x80	; 128
     708:	4f 4f       	sbci	r20, 0xFF	; 255
     70a:	5f 4f       	sbci	r21, 0xFF	; 255
     70c:	e9 89       	ldd	r30, Y+17	; 0x11
     70e:	fa 89       	ldd	r31, Y+18	; 0x12
     710:	a6 81       	ldd	r26, Z+6	; 0x06
     712:	b7 81       	ldd	r27, Z+7	; 0x07
     714:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__muluhisi3>
     718:	0e 94 9b 06 	call	0xd36	; 0xd36 <__floatunsisf>
     71c:	20 e0       	ldi	r18, 0x00	; 0
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	40 e0       	ldi	r20, 0x00	; 0
     722:	58 e3       	ldi	r21, 0x38	; 56
     724:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     728:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     72c:	6d 87       	std	Y+13, r22	; 0x0d
     72e:	7e 87       	std	Y+14, r23	; 0x0e
     730:	8f 87       	std	Y+15, r24	; 0x0f
     732:	98 8b       	std	Y+16, r25	; 0x10
	uint32_t B7 = ((uint32_t)pres - B3) * (50000>>OSS);
     734:	ff 24       	eor	r15, r15
     736:	b7 fc       	sbrc	r11, 7
     738:	fa 94       	dec	r15
     73a:	eb 2c       	mov	r14, r11
     73c:	da 2c       	mov	r13, r10
     73e:	c9 2c       	mov	r12, r9
     740:	a9 89       	ldd	r26, Y+17	; 0x11
     742:	ba 89       	ldd	r27, Y+18	; 0x12
     744:	1e 96       	adiw	r26, 0x0e	; 14
     746:	6d 91       	ld	r22, X+
     748:	7c 91       	ld	r23, X
     74a:	1f 97       	sbiw	r26, 0x0f	; 15
     74c:	07 2e       	mov	r0, r23
     74e:	00 0c       	add	r0, r0
     750:	88 0b       	sbc	r24, r24
     752:	99 0b       	sbc	r25, r25
     754:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     758:	2d 81       	ldd	r18, Y+5	; 0x05
     75a:	3e 81       	ldd	r19, Y+6	; 0x06
     75c:	4f 81       	ldd	r20, Y+7	; 0x07
     75e:	58 85       	ldd	r21, Y+8	; 0x08
     760:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     764:	20 e0       	ldi	r18, 0x00	; 0
     766:	30 e0       	ldi	r19, 0x00	; 0
     768:	40 e0       	ldi	r20, 0x00	; 0
     76a:	5a e3       	ldi	r21, 0x3A	; 58
     76c:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     770:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     774:	4b 01       	movw	r8, r22
     776:	5c 01       	movw	r10, r24
     778:	e9 89       	ldd	r30, Y+17	; 0x11
     77a:	fa 89       	ldd	r31, Y+18	; 0x12
     77c:	a2 81       	ldd	r26, Z+2	; 0x02
     77e:	b3 81       	ldd	r27, Z+3	; 0x03
     780:	a3 01       	movw	r20, r6
     782:	92 01       	movw	r18, r4
     784:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__mulshisi3>
     788:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	40 e0       	ldi	r20, 0x00	; 0
     792:	5a e3       	ldi	r21, 0x3A	; 58
     794:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     798:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     79c:	86 0e       	add	r8, r22
     79e:	97 1e       	adc	r9, r23
     7a0:	a8 1e       	adc	r10, r24
     7a2:	b9 1e       	adc	r11, r25
     7a4:	a9 89       	ldd	r26, Y+17	; 0x11
     7a6:	ba 89       	ldd	r27, Y+18	; 0x12
     7a8:	8d 91       	ld	r24, X+
     7aa:	9c 91       	ld	r25, X
     7ac:	88 0f       	add	r24, r24
     7ae:	99 1f       	adc	r25, r25
     7b0:	88 0f       	add	r24, r24
     7b2:	99 1f       	adc	r25, r25
     7b4:	09 2e       	mov	r0, r25
     7b6:	00 0c       	add	r0, r0
     7b8:	aa 0b       	sbc	r26, r26
     7ba:	bb 0b       	sbc	r27, r27
     7bc:	88 0e       	add	r8, r24
     7be:	99 1e       	adc	r9, r25
     7c0:	aa 1e       	adc	r10, r26
     7c2:	bb 1e       	adc	r11, r27
     7c4:	b2 e0       	ldi	r27, 0x02	; 2
     7c6:	8b 0e       	add	r8, r27
     7c8:	91 1c       	adc	r9, r1
     7ca:	a1 1c       	adc	r10, r1
     7cc:	b1 1c       	adc	r11, r1
     7ce:	d5 01       	movw	r26, r10
     7d0:	c4 01       	movw	r24, r8
     7d2:	bb 20       	and	r11, r11
     7d4:	1c f4       	brge	.+6      	; 0x7dc <readBMP180+0x384>
     7d6:	03 96       	adiw	r24, 0x03	; 3
     7d8:	a1 1d       	adc	r26, r1
     7da:	b1 1d       	adc	r27, r1
     7dc:	b5 95       	asr	r27
     7de:	a7 95       	ror	r26
     7e0:	97 95       	ror	r25
     7e2:	87 95       	ror	r24
     7e4:	b5 95       	asr	r27
     7e6:	a7 95       	ror	r26
     7e8:	97 95       	ror	r25
     7ea:	87 95       	ror	r24
     7ec:	a7 01       	movw	r20, r14
     7ee:	96 01       	movw	r18, r12
     7f0:	28 1b       	sub	r18, r24
     7f2:	39 0b       	sbc	r19, r25
     7f4:	4a 0b       	sbc	r20, r26
     7f6:	5b 0b       	sbc	r21, r27
     7f8:	a0 e5       	ldi	r26, 0x50	; 80
     7fa:	b3 ec       	ldi	r27, 0xC3	; 195
     7fc:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__muluhisi3>
	int32_t pressure ;
	if (B7 < 0x80000000)
     800:	99 23       	and	r25, r25
     802:	6c f0       	brlt	.+26     	; 0x81e <readBMP180+0x3c6>
	{
		pressure = (B7 * 2) / B4;
     804:	66 0f       	add	r22, r22
     806:	77 1f       	adc	r23, r23
     808:	88 1f       	adc	r24, r24
     80a:	99 1f       	adc	r25, r25
     80c:	2d 85       	ldd	r18, Y+13	; 0x0d
     80e:	3e 85       	ldd	r19, Y+14	; 0x0e
     810:	4f 85       	ldd	r20, Y+15	; 0x0f
     812:	58 89       	ldd	r21, Y+16	; 0x10
     814:	0e 94 a8 0c 	call	0x1950	; 0x1950 <__udivmodsi4>
     818:	69 01       	movw	r12, r18
     81a:	7a 01       	movw	r14, r20
     81c:	0c c0       	rjmp	.+24     	; 0x836 <readBMP180+0x3de>
	}
	else
	{
		pressure = (B7 / B4) * 2;
     81e:	2d 85       	ldd	r18, Y+13	; 0x0d
     820:	3e 85       	ldd	r19, Y+14	; 0x0e
     822:	4f 85       	ldd	r20, Y+15	; 0x0f
     824:	58 89       	ldd	r21, Y+16	; 0x10
     826:	0e 94 a8 0c 	call	0x1950	; 0x1950 <__udivmodsi4>
     82a:	69 01       	movw	r12, r18
     82c:	7a 01       	movw	r14, r20
     82e:	cc 0c       	add	r12, r12
     830:	dd 1c       	adc	r13, r13
     832:	ee 1c       	adc	r14, r14
     834:	ff 1c       	adc	r15, r15
	}
	X1 = (pressure / pow(2,8)) * (pressure / pow(2,8));
     836:	c7 01       	movw	r24, r14
     838:	b6 01       	movw	r22, r12
     83a:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     83e:	4b 01       	movw	r8, r22
     840:	5c 01       	movw	r10, r24
     842:	20 e0       	ldi	r18, 0x00	; 0
     844:	30 e0       	ldi	r19, 0x00	; 0
     846:	40 e8       	ldi	r20, 0x80	; 128
     848:	5b e3       	ldi	r21, 0x3B	; 59
     84a:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
	X1 = (X1 * 3038) / pow(2,16);
     84e:	9b 01       	movw	r18, r22
     850:	ac 01       	movw	r20, r24
     852:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     856:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     85a:	9b 01       	movw	r18, r22
     85c:	ac 01       	movw	r20, r24
     85e:	ae ed       	ldi	r26, 0xDE	; 222
     860:	bb e0       	ldi	r27, 0x0B	; 11
     862:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__muluhisi3>
     866:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     86a:	20 e0       	ldi	r18, 0x00	; 0
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	40 e8       	ldi	r20, 0x80	; 128
     870:	57 e3       	ldi	r21, 0x37	; 55
     872:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     876:	2b 01       	movw	r4, r22
     878:	3c 01       	movw	r6, r24
	X2 = ((-7357) * pressure) / pow(2,16);
	pressure = (pressure + (X1 + X2 + 3791) / pow(2,4)) ;
     87a:	a3 e4       	ldi	r26, 0x43	; 67
     87c:	b3 ee       	ldi	r27, 0xE3	; 227
     87e:	a7 01       	movw	r20, r14
     880:	96 01       	movw	r18, r12
     882:	0e 94 de 0c 	call	0x19bc	; 0x19bc <__mulohisi3>
     886:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	40 e8       	ldi	r20, 0x80	; 128
     890:	57 e3       	ldi	r21, 0x37	; 55
     892:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     896:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     89a:	6b 01       	movw	r12, r22
     89c:	7c 01       	movw	r14, r24
     89e:	c3 01       	movw	r24, r6
     8a0:	b2 01       	movw	r22, r4
     8a2:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     8a6:	dc 01       	movw	r26, r24
     8a8:	cb 01       	movw	r24, r22
     8aa:	8c 0d       	add	r24, r12
     8ac:	9d 1d       	adc	r25, r13
     8ae:	ae 1d       	adc	r26, r14
     8b0:	bf 1d       	adc	r27, r15
     8b2:	bc 01       	movw	r22, r24
     8b4:	cd 01       	movw	r24, r26
     8b6:	61 53       	subi	r22, 0x31	; 49
     8b8:	71 4f       	sbci	r23, 0xF1	; 241
     8ba:	8f 4f       	sbci	r24, 0xFF	; 255
     8bc:	9f 4f       	sbci	r25, 0xFF	; 255
     8be:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     8c2:	20 e0       	ldi	r18, 0x00	; 0
     8c4:	30 e0       	ldi	r19, 0x00	; 0
     8c6:	40 e8       	ldi	r20, 0x80	; 128
     8c8:	5d e3       	ldi	r21, 0x3D	; 61
     8ca:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     8ce:	a5 01       	movw	r20, r10
     8d0:	94 01       	movw	r18, r8
     8d2:	0e 94 87 05 	call	0xb0e	; 0xb0e <__addsf3>
     8d6:	0e 94 65 06 	call	0xcca	; 0xcca <__fixsfsi>
     8da:	6b 01       	movw	r12, r22
     8dc:	7c 01       	movw	r14, r24

	// Calculate Altitude
	float height = 44330 * (1 - pow((pressure / 1013.25), 0.1903));
     8de:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e5       	ldi	r19, 0x50	; 80
     8e6:	4d e7       	ldi	r20, 0x7D	; 125
     8e8:	54 e4       	ldi	r21, 0x44	; 68
     8ea:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <__divsf3>
     8ee:	21 e0       	ldi	r18, 0x01	; 1
     8f0:	3e ed       	ldi	r19, 0xDE	; 222
     8f2:	42 e4       	ldi	r20, 0x42	; 66
     8f4:	5e e3       	ldi	r21, 0x3E	; 62
     8f6:	0e 94 96 07 	call	0xf2c	; 0xf2c <pow>
     8fa:	9b 01       	movw	r18, r22
     8fc:	ac 01       	movw	r20, r24
	(*bmp180).ctemp=cTmp;
     8fe:	89 81       	ldd	r24, Y+1	; 0x01
     900:	9a 81       	ldd	r25, Y+2	; 0x02
     902:	ab 81       	ldd	r26, Y+3	; 0x03
     904:	bc 81       	ldd	r27, Y+4	; 0x04
     906:	e9 89       	ldd	r30, Y+17	; 0x11
     908:	fa 89       	ldd	r31, Y+18	; 0x12
     90a:	86 8b       	std	Z+22, r24	; 0x16
     90c:	97 8b       	std	Z+23, r25	; 0x17
     90e:	a0 8f       	std	Z+24, r26	; 0x18
     910:	b1 8f       	std	Z+25, r27	; 0x19
	(*bmp180).ftemp=fTmp;
     912:	89 85       	ldd	r24, Y+9	; 0x09
     914:	9a 85       	ldd	r25, Y+10	; 0x0a
     916:	ab 85       	ldd	r26, Y+11	; 0x0b
     918:	bc 85       	ldd	r27, Y+12	; 0x0c
     91a:	82 8f       	std	Z+26, r24	; 0x1a
     91c:	93 8f       	std	Z+27, r25	; 0x1b
     91e:	a4 8f       	std	Z+28, r26	; 0x1c
     920:	b5 8f       	std	Z+29, r27	; 0x1d
	(*bmp180).pressure=pressure;
     922:	c6 8e       	std	Z+30, r12	; 0x1e
     924:	d7 8e       	std	Z+31, r13	; 0x1f
     926:	e0 a2       	std	Z+32, r14	; 0x20
     928:	f1 a2       	std	Z+33, r15	; 0x21
	(*bmp180).altitude=height;
     92a:	60 e0       	ldi	r22, 0x00	; 0
     92c:	70 e0       	ldi	r23, 0x00	; 0
     92e:	80 e8       	ldi	r24, 0x80	; 128
     930:	9f e3       	ldi	r25, 0x3F	; 63
     932:	0e 94 86 05 	call	0xb0c	; 0xb0c <__subsf3>
     936:	20 e0       	ldi	r18, 0x00	; 0
     938:	3a e2       	ldi	r19, 0x2A	; 42
     93a:	4d e2       	ldi	r20, 0x2D	; 45
     93c:	57 e4       	ldi	r21, 0x47	; 71
     93e:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     942:	e9 89       	ldd	r30, Y+17	; 0x11
     944:	fa 89       	ldd	r31, Y+18	; 0x12
     946:	62 a3       	std	Z+34, r22	; 0x22
     948:	73 a3       	std	Z+35, r23	; 0x23
     94a:	84 a3       	std	Z+36, r24	; 0x24
     94c:	95 a3       	std	Z+37, r25	; 0x25
	return READ_SUCCESSFUL;
}
     94e:	89 e1       	ldi	r24, 0x19	; 25
     950:	62 96       	adiw	r28, 0x12	; 18
     952:	0f b6       	in	r0, 0x3f	; 63
     954:	f8 94       	cli
     956:	de bf       	out	0x3e, r29	; 62
     958:	0f be       	out	0x3f, r0	; 63
     95a:	cd bf       	out	0x3d, r28	; 61
     95c:	df 91       	pop	r29
     95e:	cf 91       	pop	r28
     960:	ff 90       	pop	r15
     962:	ef 90       	pop	r14
     964:	df 90       	pop	r13
     966:	cf 90       	pop	r12
     968:	bf 90       	pop	r11
     96a:	af 90       	pop	r10
     96c:	9f 90       	pop	r9
     96e:	8f 90       	pop	r8
     970:	7f 90       	pop	r7
     972:	6f 90       	pop	r6
     974:	5f 90       	pop	r5
     976:	4f 90       	pop	r4
     978:	08 95       	ret

0000097a <startI2C>:
	/*
		TWEN : enables two-wire
		TWSTA : starts two-wire
		TWINT : clears the two-wire interrupt flag
	*/
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);
     97a:	94 ea       	ldi	r25, 0xA4	; 164
     97c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	// wait till TWI finishes the operation
	while (!(TWCR & (1<<TWINT)));
     980:	ec eb       	ldi	r30, 0xBC	; 188
     982:	f0 e0       	ldi	r31, 0x00	; 0
     984:	90 81       	ld	r25, Z
     986:	99 23       	and	r25, r25
     988:	ec f7       	brge	.-6      	; 0x984 <startI2C+0xa>
	// check for error 
	if (TWSR & 0xF8 != 0x08) return START_FAILED;
     98a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     98e:	90 fd       	sbrc	r25, 0
     990:	10 c0       	rjmp	.+32     	; 0x9b2 <startI2C+0x38>
	// if no error write slave address
	TWDR = slave_address;
     992:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	// enable TWI and clear TWINT
	TWCR = (1<<TWEN)|(1<<TWINT);
     996:	84 e8       	ldi	r24, 0x84	; 132
     998:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	// wait till TWI finishes the operation
	while (!(TWCR & (1<<TWINT)));
     99c:	ec eb       	ldi	r30, 0xBC	; 188
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	80 81       	ld	r24, Z
     9a2:	88 23       	and	r24, r24
     9a4:	ec f7       	brge	.-6      	; 0x9a0 <startI2C+0x26>
	// check for results
	return TWSR & 0xF8 == 0x18?TWSR & 0xF8:TWSR & 0xF8 == 0x20? NACK_RECIEVED : SLA_W_FAILED;
     9a6:	e9 eb       	ldi	r30, 0xB9	; 185
     9a8:	f0 e0       	ldi	r31, 0x00	; 0
     9aa:	80 81       	ld	r24, Z
     9ac:	80 81       	ld	r24, Z
     9ae:	89 e1       	ldi	r24, 0x19	; 25
     9b0:	08 95       	ret
	*/
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);
	// wait till TWI finishes the operation
	while (!(TWCR & (1<<TWINT)));
	// check for error 
	if (TWSR & 0xF8 != 0x08) return START_FAILED;
     9b2:	8a e2       	ldi	r24, 0x2A	; 42
	while (!(TWCR & (1<<TWINT)));
	// check for results
	return TWSR & 0xF8 == 0x18?TWSR & 0xF8:TWSR & 0xF8 == 0x20? NACK_RECIEVED : SLA_W_FAILED;
	
	
}
     9b4:	08 95       	ret

000009b6 <stopI2C>:

uint8_t stopI2C(){
	// enable two-wire, send stop and clear TWINT
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);					
     9b6:	84 e9       	ldi	r24, 0x94	; 148
     9b8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(TWCR & (1<<TWSTO));								
     9bc:	ec eb       	ldi	r30, 0xBC	; 188
     9be:	f0 e0       	ldi	r31, 0x00	; 0
     9c0:	80 81       	ld	r24, Z
     9c2:	84 fd       	sbrc	r24, 4
     9c4:	fd cf       	rjmp	.-6      	; 0x9c0 <stopI2C+0xa>
	return TWI_STOPPED;
}
     9c6:	8a e1       	ldi	r24, 0x1A	; 26
     9c8:	08 95       	ret

000009ca <writeI2C>:

uint8_t writeI2C(uint8_t data){
	// write data to two-wire data register
	TWDR = data;
     9ca:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	// enable TWI and clear TWINT
	TWCR = (1<<TWEN)|(1<<TWINT);
     9ce:	84 e8       	ldi	r24, 0x84	; 132
     9d0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	// wait till TWINT finishes the operation
	while (!(TWCR & (1<<TWINT)));
     9d4:	ec eb       	ldi	r30, 0xBC	; 188
     9d6:	f0 e0       	ldi	r31, 0x00	; 0
     9d8:	80 81       	ld	r24, Z
     9da:	88 23       	and	r24, r24
     9dc:	ec f7       	brge	.-6      	; 0x9d8 <writeI2C+0xe>
	// check for errors
	return TWSR & 0xF8 == 0x18?TWSR & 0xF8:TWSR & 0xF8 == 0x20? NACK_RECIEVED : TRANSMITTION_FAILED;
     9de:	e9 eb       	ldi	r30, 0xB9	; 185
     9e0:	f0 e0       	ldi	r31, 0x00	; 0
     9e2:	80 81       	ld	r24, Z
     9e4:	80 81       	ld	r24, Z

};
     9e6:	8b e1       	ldi	r24, 0x1B	; 27
     9e8:	08 95       	ret

000009ea <readI2C>:

uint8_t readI2C(uint8_t ack){
	// enable two-wire, send acknowledge and clear TWINT
	TWCR=(1<<TWEN)|(1<<TWINT)|(ack<<TWEA);
     9ea:	20 e4       	ldi	r18, 0x40	; 64
     9ec:	82 9f       	mul	r24, r18
     9ee:	c0 01       	movw	r24, r0
     9f0:	11 24       	eor	r1, r1
     9f2:	84 68       	ori	r24, 0x84	; 132
     9f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	// wait till TWI finishes the operation
	while (!(TWCR & (1<<TWINT)));
     9f8:	ec eb       	ldi	r30, 0xBC	; 188
     9fa:	f0 e0       	ldi	r31, 0x00	; 0
     9fc:	80 81       	ld	r24, Z
     9fe:	88 23       	and	r24, r24
     a00:	ec f7       	brge	.-6      	; 0x9fc <readI2C+0x12>
	// return the read data
	return TWDR;
     a02:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
};
     a06:	08 95       	ret

00000a08 <main>:
#include <util/delay.h>
#include <stdlib.h>
#include <stdio.h>
#include "I2C/Devices/BMP180/BMP180.h"
int main(void)
{
     a08:	cf 93       	push	r28
     a0a:	df 93       	push	r29
     a0c:	cd b7       	in	r28, 0x3d	; 61
     a0e:	de b7       	in	r29, 0x3e	; 62
     a10:	ea 97       	sbiw	r28, 0x3a	; 58
     a12:	0f b6       	in	r0, 0x3f	; 63
     a14:	f8 94       	cli
     a16:	de bf       	out	0x3e, r29	; 62
     a18:	0f be       	out	0x3f, r0	; 63
     a1a:	cd bf       	out	0x3d, r28	; 61
	initUART();
     a1c:	0e 94 58 05 	call	0xab0	; 0xab0 <initUART>
	BMP180 bmp180;
	char buffer[20], float_[10];
	initBMP180(&bmp180);
     a20:	ce 01       	movw	r24, r28
     a22:	01 96       	adiw	r24, 0x01	; 1
     a24:	0e 94 18 01 	call	0x230	; 0x230 <initBMP180>
    /* Replace with your application code */
    while (1) 
    {	
		_delay_ms(1000);
		readBMP180(&bmp180);
		sprintf(buffer,"T = %fC\n\r",bmp180.ctemp);
     a28:	0f 2e       	mov	r0, r31
     a2a:	f0 e0       	ldi	r31, 0x00	; 0
     a2c:	cf 2e       	mov	r12, r31
     a2e:	f1 e0       	ldi	r31, 0x01	; 1
     a30:	df 2e       	mov	r13, r31
     a32:	f0 2d       	mov	r31, r0
     a34:	8e 01       	movw	r16, r28
     a36:	09 5d       	subi	r16, 0xD9	; 217
     a38:	1f 4f       	sbci	r17, 0xFF	; 255
		sendStringUART(buffer);
		sprintf(buffer,"P = %luPa\n\r",bmp180.pressure);
     a3a:	0f 2e       	mov	r0, r31
     a3c:	fa e0       	ldi	r31, 0x0A	; 10
     a3e:	ef 2e       	mov	r14, r31
     a40:	f1 e0       	ldi	r31, 0x01	; 1
     a42:	ff 2e       	mov	r15, r31
     a44:	f0 2d       	mov	r31, r0
     a46:	2f ef       	ldi	r18, 0xFF	; 255
     a48:	83 ed       	ldi	r24, 0xD3	; 211
     a4a:	90 e3       	ldi	r25, 0x30	; 48
     a4c:	21 50       	subi	r18, 0x01	; 1
     a4e:	80 40       	sbci	r24, 0x00	; 0
     a50:	90 40       	sbci	r25, 0x00	; 0
     a52:	e1 f7       	brne	.-8      	; 0xa4c <main+0x44>
     a54:	00 c0       	rjmp	.+0      	; 0xa56 <main+0x4e>
     a56:	00 00       	nop
	initBMP180(&bmp180);
    /* Replace with your application code */
    while (1) 
    {	
		_delay_ms(1000);
		readBMP180(&bmp180);
     a58:	ce 01       	movw	r24, r28
     a5a:	01 96       	adiw	r24, 0x01	; 1
     a5c:	0e 94 2c 02 	call	0x458	; 0x458 <readBMP180>
		sprintf(buffer,"T = %fC\n\r",bmp180.ctemp);
     a60:	8a 8d       	ldd	r24, Y+26	; 0x1a
     a62:	8f 93       	push	r24
     a64:	89 8d       	ldd	r24, Y+25	; 0x19
     a66:	8f 93       	push	r24
     a68:	88 8d       	ldd	r24, Y+24	; 0x18
     a6a:	8f 93       	push	r24
     a6c:	8f 89       	ldd	r24, Y+23	; 0x17
     a6e:	8f 93       	push	r24
     a70:	df 92       	push	r13
     a72:	cf 92       	push	r12
     a74:	1f 93       	push	r17
     a76:	0f 93       	push	r16
     a78:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <sprintf>
		sendStringUART(buffer);
     a7c:	c8 01       	movw	r24, r16
     a7e:	0e 94 68 05 	call	0xad0	; 0xad0 <sendStringUART>
		sprintf(buffer,"P = %luPa\n\r",bmp180.pressure);
     a82:	8a a1       	ldd	r24, Y+34	; 0x22
     a84:	8f 93       	push	r24
     a86:	89 a1       	ldd	r24, Y+33	; 0x21
     a88:	8f 93       	push	r24
     a8a:	88 a1       	ldd	r24, Y+32	; 0x20
     a8c:	8f 93       	push	r24
     a8e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a90:	8f 93       	push	r24
     a92:	ff 92       	push	r15
     a94:	ef 92       	push	r14
     a96:	1f 93       	push	r17
     a98:	0f 93       	push	r16
     a9a:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <sprintf>
		sendStringUART(buffer);
     a9e:	c8 01       	movw	r24, r16
     aa0:	0e 94 68 05 	call	0xad0	; 0xad0 <sendStringUART>
     aa4:	0f b6       	in	r0, 0x3f	; 63
     aa6:	f8 94       	cli
     aa8:	de bf       	out	0x3e, r29	; 62
     aaa:	0f be       	out	0x3f, r0	; 63
     aac:	cd bf       	out	0x3d, r28	; 61
     aae:	cb cf       	rjmp	.-106    	; 0xa46 <main+0x3e>

00000ab0 <initUART>:
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
}
uint8_t sendByteUART(uint8_t data ){
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}
     ab0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     ab4:	87 e6       	ldi	r24, 0x67	; 103
     ab6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     aba:	e2 ec       	ldi	r30, 0xC2	; 194
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	80 81       	ld	r24, Z
     ac0:	86 60       	ori	r24, 0x06	; 6
     ac2:	80 83       	st	Z, r24
     ac4:	e1 ec       	ldi	r30, 0xC1	; 193
     ac6:	f0 e0       	ldi	r31, 0x00	; 0
     ac8:	80 81       	ld	r24, Z
     aca:	88 69       	ori	r24, 0x98	; 152
     acc:	80 83       	st	Z, r24
     ace:	08 95       	ret

00000ad0 <sendStringUART>:
uint8_t sendStringUART(char *StringPtr){
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
	while(*StringPtr != '\0')
     ad4:	fc 01       	movw	r30, r24
     ad6:	20 81       	ld	r18, Z
     ad8:	22 23       	and	r18, r18
     ada:	69 f0       	breq	.+26     	; 0xaf6 <sendStringUART+0x26>
     adc:	dc 01       	movw	r26, r24
     ade:	11 96       	adiw	r26, 0x01	; 1
	{
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) );
     ae0:	e0 ec       	ldi	r30, 0xC0	; 192
     ae2:	f0 e0       	ldi	r31, 0x00	; 0
		/* Put data into buffer, sends the data */
		UDR0 = *StringPtr;
     ae4:	c6 ec       	ldi	r28, 0xC6	; 198
     ae6:	d0 e0       	ldi	r29, 0x00	; 0
}
uint8_t sendStringUART(char *StringPtr){
	while(*StringPtr != '\0')
	{
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) );
     ae8:	90 81       	ld	r25, Z
     aea:	95 ff       	sbrs	r25, 5
     aec:	fd cf       	rjmp	.-6      	; 0xae8 <sendStringUART+0x18>
		/* Put data into buffer, sends the data */
		UDR0 = *StringPtr;
     aee:	28 83       	st	Y, r18
uint8_t sendByteUART(uint8_t data ){
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}
uint8_t sendStringUART(char *StringPtr){
	while(*StringPtr != '\0')
     af0:	2d 91       	ld	r18, X+
     af2:	21 11       	cpse	r18, r1
     af4:	f9 cf       	rjmp	.-14     	; 0xae8 <sendStringUART+0x18>
		while ( !( UCSR0A & (1<<UDRE0)) );
		/* Put data into buffer, sends the data */
		UDR0 = *StringPtr;
		StringPtr++;
	}
	while ( !( UCSR0A & (1<<UDRE0)) );
     af6:	e0 ec       	ldi	r30, 0xC0	; 192
     af8:	f0 e0       	ldi	r31, 0x00	; 0
     afa:	80 81       	ld	r24, Z
     afc:	85 ff       	sbrs	r24, 5
     afe:	fd cf       	rjmp	.-6      	; 0xafa <sendStringUART+0x2a>
	UDR0 = *StringPtr;
     b00:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return STRING_SENT;
}
     b04:	8b e2       	ldi	r24, 0x2B	; 43
     b06:	df 91       	pop	r29
     b08:	cf 91       	pop	r28
     b0a:	08 95       	ret

00000b0c <__subsf3>:
     b0c:	50 58       	subi	r21, 0x80	; 128

00000b0e <__addsf3>:
     b0e:	bb 27       	eor	r27, r27
     b10:	aa 27       	eor	r26, r26
     b12:	0e 94 9e 05 	call	0xb3c	; 0xb3c <__addsf3x>
     b16:	0c 94 ef 06 	jmp	0xdde	; 0xdde <__fp_round>
     b1a:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__fp_pscA>
     b1e:	38 f0       	brcs	.+14     	; 0xb2e <__addsf3+0x20>
     b20:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__fp_pscB>
     b24:	20 f0       	brcs	.+8      	; 0xb2e <__addsf3+0x20>
     b26:	39 f4       	brne	.+14     	; 0xb36 <__addsf3+0x28>
     b28:	9f 3f       	cpi	r25, 0xFF	; 255
     b2a:	19 f4       	brne	.+6      	; 0xb32 <__addsf3+0x24>
     b2c:	26 f4       	brtc	.+8      	; 0xb36 <__addsf3+0x28>
     b2e:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__fp_nan>
     b32:	0e f4       	brtc	.+2      	; 0xb36 <__addsf3+0x28>
     b34:	e0 95       	com	r30
     b36:	e7 fb       	bst	r30, 7
     b38:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_inf>

00000b3c <__addsf3x>:
     b3c:	e9 2f       	mov	r30, r25
     b3e:	0e 94 00 07 	call	0xe00	; 0xe00 <__fp_split3>
     b42:	58 f3       	brcs	.-42     	; 0xb1a <__addsf3+0xc>
     b44:	ba 17       	cp	r27, r26
     b46:	62 07       	cpc	r22, r18
     b48:	73 07       	cpc	r23, r19
     b4a:	84 07       	cpc	r24, r20
     b4c:	95 07       	cpc	r25, r21
     b4e:	20 f0       	brcs	.+8      	; 0xb58 <__addsf3x+0x1c>
     b50:	79 f4       	brne	.+30     	; 0xb70 <__addsf3x+0x34>
     b52:	a6 f5       	brtc	.+104    	; 0xbbc <__addsf3x+0x80>
     b54:	0c 94 22 07 	jmp	0xe44	; 0xe44 <__fp_zero>
     b58:	0e f4       	brtc	.+2      	; 0xb5c <__addsf3x+0x20>
     b5a:	e0 95       	com	r30
     b5c:	0b 2e       	mov	r0, r27
     b5e:	ba 2f       	mov	r27, r26
     b60:	a0 2d       	mov	r26, r0
     b62:	0b 01       	movw	r0, r22
     b64:	b9 01       	movw	r22, r18
     b66:	90 01       	movw	r18, r0
     b68:	0c 01       	movw	r0, r24
     b6a:	ca 01       	movw	r24, r20
     b6c:	a0 01       	movw	r20, r0
     b6e:	11 24       	eor	r1, r1
     b70:	ff 27       	eor	r31, r31
     b72:	59 1b       	sub	r21, r25
     b74:	99 f0       	breq	.+38     	; 0xb9c <__addsf3x+0x60>
     b76:	59 3f       	cpi	r21, 0xF9	; 249
     b78:	50 f4       	brcc	.+20     	; 0xb8e <__addsf3x+0x52>
     b7a:	50 3e       	cpi	r21, 0xE0	; 224
     b7c:	68 f1       	brcs	.+90     	; 0xbd8 <__addsf3x+0x9c>
     b7e:	1a 16       	cp	r1, r26
     b80:	f0 40       	sbci	r31, 0x00	; 0
     b82:	a2 2f       	mov	r26, r18
     b84:	23 2f       	mov	r18, r19
     b86:	34 2f       	mov	r19, r20
     b88:	44 27       	eor	r20, r20
     b8a:	58 5f       	subi	r21, 0xF8	; 248
     b8c:	f3 cf       	rjmp	.-26     	; 0xb74 <__addsf3x+0x38>
     b8e:	46 95       	lsr	r20
     b90:	37 95       	ror	r19
     b92:	27 95       	ror	r18
     b94:	a7 95       	ror	r26
     b96:	f0 40       	sbci	r31, 0x00	; 0
     b98:	53 95       	inc	r21
     b9a:	c9 f7       	brne	.-14     	; 0xb8e <__addsf3x+0x52>
     b9c:	7e f4       	brtc	.+30     	; 0xbbc <__addsf3x+0x80>
     b9e:	1f 16       	cp	r1, r31
     ba0:	ba 0b       	sbc	r27, r26
     ba2:	62 0b       	sbc	r22, r18
     ba4:	73 0b       	sbc	r23, r19
     ba6:	84 0b       	sbc	r24, r20
     ba8:	ba f0       	brmi	.+46     	; 0xbd8 <__addsf3x+0x9c>
     baa:	91 50       	subi	r25, 0x01	; 1
     bac:	a1 f0       	breq	.+40     	; 0xbd6 <__addsf3x+0x9a>
     bae:	ff 0f       	add	r31, r31
     bb0:	bb 1f       	adc	r27, r27
     bb2:	66 1f       	adc	r22, r22
     bb4:	77 1f       	adc	r23, r23
     bb6:	88 1f       	adc	r24, r24
     bb8:	c2 f7       	brpl	.-16     	; 0xbaa <__addsf3x+0x6e>
     bba:	0e c0       	rjmp	.+28     	; 0xbd8 <__addsf3x+0x9c>
     bbc:	ba 0f       	add	r27, r26
     bbe:	62 1f       	adc	r22, r18
     bc0:	73 1f       	adc	r23, r19
     bc2:	84 1f       	adc	r24, r20
     bc4:	48 f4       	brcc	.+18     	; 0xbd8 <__addsf3x+0x9c>
     bc6:	87 95       	ror	r24
     bc8:	77 95       	ror	r23
     bca:	67 95       	ror	r22
     bcc:	b7 95       	ror	r27
     bce:	f7 95       	ror	r31
     bd0:	9e 3f       	cpi	r25, 0xFE	; 254
     bd2:	08 f0       	brcs	.+2      	; 0xbd6 <__addsf3x+0x9a>
     bd4:	b0 cf       	rjmp	.-160    	; 0xb36 <__addsf3+0x28>
     bd6:	93 95       	inc	r25
     bd8:	88 0f       	add	r24, r24
     bda:	08 f0       	brcs	.+2      	; 0xbde <__addsf3x+0xa2>
     bdc:	99 27       	eor	r25, r25
     bde:	ee 0f       	add	r30, r30
     be0:	97 95       	ror	r25
     be2:	87 95       	ror	r24
     be4:	08 95       	ret

00000be6 <__divsf3>:
     be6:	0e 94 07 06 	call	0xc0e	; 0xc0e <__divsf3x>
     bea:	0c 94 ef 06 	jmp	0xdde	; 0xdde <__fp_round>
     bee:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__fp_pscB>
     bf2:	58 f0       	brcs	.+22     	; 0xc0a <__divsf3+0x24>
     bf4:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__fp_pscA>
     bf8:	40 f0       	brcs	.+16     	; 0xc0a <__divsf3+0x24>
     bfa:	29 f4       	brne	.+10     	; 0xc06 <__divsf3+0x20>
     bfc:	5f 3f       	cpi	r21, 0xFF	; 255
     bfe:	29 f0       	breq	.+10     	; 0xc0a <__divsf3+0x24>
     c00:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_inf>
     c04:	51 11       	cpse	r21, r1
     c06:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_szero>
     c0a:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__fp_nan>

00000c0e <__divsf3x>:
     c0e:	0e 94 00 07 	call	0xe00	; 0xe00 <__fp_split3>
     c12:	68 f3       	brcs	.-38     	; 0xbee <__divsf3+0x8>

00000c14 <__divsf3_pse>:
     c14:	99 23       	and	r25, r25
     c16:	b1 f3       	breq	.-20     	; 0xc04 <__divsf3+0x1e>
     c18:	55 23       	and	r21, r21
     c1a:	91 f3       	breq	.-28     	; 0xc00 <__divsf3+0x1a>
     c1c:	95 1b       	sub	r25, r21
     c1e:	55 0b       	sbc	r21, r21
     c20:	bb 27       	eor	r27, r27
     c22:	aa 27       	eor	r26, r26
     c24:	62 17       	cp	r22, r18
     c26:	73 07       	cpc	r23, r19
     c28:	84 07       	cpc	r24, r20
     c2a:	38 f0       	brcs	.+14     	; 0xc3a <__divsf3_pse+0x26>
     c2c:	9f 5f       	subi	r25, 0xFF	; 255
     c2e:	5f 4f       	sbci	r21, 0xFF	; 255
     c30:	22 0f       	add	r18, r18
     c32:	33 1f       	adc	r19, r19
     c34:	44 1f       	adc	r20, r20
     c36:	aa 1f       	adc	r26, r26
     c38:	a9 f3       	breq	.-22     	; 0xc24 <__divsf3_pse+0x10>
     c3a:	35 d0       	rcall	.+106    	; 0xca6 <__divsf3_pse+0x92>
     c3c:	0e 2e       	mov	r0, r30
     c3e:	3a f0       	brmi	.+14     	; 0xc4e <__divsf3_pse+0x3a>
     c40:	e0 e8       	ldi	r30, 0x80	; 128
     c42:	32 d0       	rcall	.+100    	; 0xca8 <__divsf3_pse+0x94>
     c44:	91 50       	subi	r25, 0x01	; 1
     c46:	50 40       	sbci	r21, 0x00	; 0
     c48:	e6 95       	lsr	r30
     c4a:	00 1c       	adc	r0, r0
     c4c:	ca f7       	brpl	.-14     	; 0xc40 <__divsf3_pse+0x2c>
     c4e:	2b d0       	rcall	.+86     	; 0xca6 <__divsf3_pse+0x92>
     c50:	fe 2f       	mov	r31, r30
     c52:	29 d0       	rcall	.+82     	; 0xca6 <__divsf3_pse+0x92>
     c54:	66 0f       	add	r22, r22
     c56:	77 1f       	adc	r23, r23
     c58:	88 1f       	adc	r24, r24
     c5a:	bb 1f       	adc	r27, r27
     c5c:	26 17       	cp	r18, r22
     c5e:	37 07       	cpc	r19, r23
     c60:	48 07       	cpc	r20, r24
     c62:	ab 07       	cpc	r26, r27
     c64:	b0 e8       	ldi	r27, 0x80	; 128
     c66:	09 f0       	breq	.+2      	; 0xc6a <__divsf3_pse+0x56>
     c68:	bb 0b       	sbc	r27, r27
     c6a:	80 2d       	mov	r24, r0
     c6c:	bf 01       	movw	r22, r30
     c6e:	ff 27       	eor	r31, r31
     c70:	93 58       	subi	r25, 0x83	; 131
     c72:	5f 4f       	sbci	r21, 0xFF	; 255
     c74:	3a f0       	brmi	.+14     	; 0xc84 <__divsf3_pse+0x70>
     c76:	9e 3f       	cpi	r25, 0xFE	; 254
     c78:	51 05       	cpc	r21, r1
     c7a:	78 f0       	brcs	.+30     	; 0xc9a <__divsf3_pse+0x86>
     c7c:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_inf>
     c80:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_szero>
     c84:	5f 3f       	cpi	r21, 0xFF	; 255
     c86:	e4 f3       	brlt	.-8      	; 0xc80 <__divsf3_pse+0x6c>
     c88:	98 3e       	cpi	r25, 0xE8	; 232
     c8a:	d4 f3       	brlt	.-12     	; 0xc80 <__divsf3_pse+0x6c>
     c8c:	86 95       	lsr	r24
     c8e:	77 95       	ror	r23
     c90:	67 95       	ror	r22
     c92:	b7 95       	ror	r27
     c94:	f7 95       	ror	r31
     c96:	9f 5f       	subi	r25, 0xFF	; 255
     c98:	c9 f7       	brne	.-14     	; 0xc8c <__divsf3_pse+0x78>
     c9a:	88 0f       	add	r24, r24
     c9c:	91 1d       	adc	r25, r1
     c9e:	96 95       	lsr	r25
     ca0:	87 95       	ror	r24
     ca2:	97 f9       	bld	r25, 7
     ca4:	08 95       	ret
     ca6:	e1 e0       	ldi	r30, 0x01	; 1
     ca8:	66 0f       	add	r22, r22
     caa:	77 1f       	adc	r23, r23
     cac:	88 1f       	adc	r24, r24
     cae:	bb 1f       	adc	r27, r27
     cb0:	62 17       	cp	r22, r18
     cb2:	73 07       	cpc	r23, r19
     cb4:	84 07       	cpc	r24, r20
     cb6:	ba 07       	cpc	r27, r26
     cb8:	20 f0       	brcs	.+8      	; 0xcc2 <__divsf3_pse+0xae>
     cba:	62 1b       	sub	r22, r18
     cbc:	73 0b       	sbc	r23, r19
     cbe:	84 0b       	sbc	r24, r20
     cc0:	ba 0b       	sbc	r27, r26
     cc2:	ee 1f       	adc	r30, r30
     cc4:	88 f7       	brcc	.-30     	; 0xca8 <__divsf3_pse+0x94>
     cc6:	e0 95       	com	r30
     cc8:	08 95       	ret

00000cca <__fixsfsi>:
     cca:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__fixunssfsi>
     cce:	68 94       	set
     cd0:	b1 11       	cpse	r27, r1
     cd2:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_szero>
     cd6:	08 95       	ret

00000cd8 <__fixunssfsi>:
     cd8:	0e 94 08 07 	call	0xe10	; 0xe10 <__fp_splitA>
     cdc:	88 f0       	brcs	.+34     	; 0xd00 <__fixunssfsi+0x28>
     cde:	9f 57       	subi	r25, 0x7F	; 127
     ce0:	98 f0       	brcs	.+38     	; 0xd08 <__fixunssfsi+0x30>
     ce2:	b9 2f       	mov	r27, r25
     ce4:	99 27       	eor	r25, r25
     ce6:	b7 51       	subi	r27, 0x17	; 23
     ce8:	b0 f0       	brcs	.+44     	; 0xd16 <__fixunssfsi+0x3e>
     cea:	e1 f0       	breq	.+56     	; 0xd24 <__fixunssfsi+0x4c>
     cec:	66 0f       	add	r22, r22
     cee:	77 1f       	adc	r23, r23
     cf0:	88 1f       	adc	r24, r24
     cf2:	99 1f       	adc	r25, r25
     cf4:	1a f0       	brmi	.+6      	; 0xcfc <__fixunssfsi+0x24>
     cf6:	ba 95       	dec	r27
     cf8:	c9 f7       	brne	.-14     	; 0xcec <__fixunssfsi+0x14>
     cfa:	14 c0       	rjmp	.+40     	; 0xd24 <__fixunssfsi+0x4c>
     cfc:	b1 30       	cpi	r27, 0x01	; 1
     cfe:	91 f0       	breq	.+36     	; 0xd24 <__fixunssfsi+0x4c>
     d00:	0e 94 22 07 	call	0xe44	; 0xe44 <__fp_zero>
     d04:	b1 e0       	ldi	r27, 0x01	; 1
     d06:	08 95       	ret
     d08:	0c 94 22 07 	jmp	0xe44	; 0xe44 <__fp_zero>
     d0c:	67 2f       	mov	r22, r23
     d0e:	78 2f       	mov	r23, r24
     d10:	88 27       	eor	r24, r24
     d12:	b8 5f       	subi	r27, 0xF8	; 248
     d14:	39 f0       	breq	.+14     	; 0xd24 <__fixunssfsi+0x4c>
     d16:	b9 3f       	cpi	r27, 0xF9	; 249
     d18:	cc f3       	brlt	.-14     	; 0xd0c <__fixunssfsi+0x34>
     d1a:	86 95       	lsr	r24
     d1c:	77 95       	ror	r23
     d1e:	67 95       	ror	r22
     d20:	b3 95       	inc	r27
     d22:	d9 f7       	brne	.-10     	; 0xd1a <__fixunssfsi+0x42>
     d24:	3e f4       	brtc	.+14     	; 0xd34 <__fixunssfsi+0x5c>
     d26:	90 95       	com	r25
     d28:	80 95       	com	r24
     d2a:	70 95       	com	r23
     d2c:	61 95       	neg	r22
     d2e:	7f 4f       	sbci	r23, 0xFF	; 255
     d30:	8f 4f       	sbci	r24, 0xFF	; 255
     d32:	9f 4f       	sbci	r25, 0xFF	; 255
     d34:	08 95       	ret

00000d36 <__floatunsisf>:
     d36:	e8 94       	clt
     d38:	09 c0       	rjmp	.+18     	; 0xd4c <__floatsisf+0x12>

00000d3a <__floatsisf>:
     d3a:	97 fb       	bst	r25, 7
     d3c:	3e f4       	brtc	.+14     	; 0xd4c <__floatsisf+0x12>
     d3e:	90 95       	com	r25
     d40:	80 95       	com	r24
     d42:	70 95       	com	r23
     d44:	61 95       	neg	r22
     d46:	7f 4f       	sbci	r23, 0xFF	; 255
     d48:	8f 4f       	sbci	r24, 0xFF	; 255
     d4a:	9f 4f       	sbci	r25, 0xFF	; 255
     d4c:	99 23       	and	r25, r25
     d4e:	a9 f0       	breq	.+42     	; 0xd7a <__floatsisf+0x40>
     d50:	f9 2f       	mov	r31, r25
     d52:	96 e9       	ldi	r25, 0x96	; 150
     d54:	bb 27       	eor	r27, r27
     d56:	93 95       	inc	r25
     d58:	f6 95       	lsr	r31
     d5a:	87 95       	ror	r24
     d5c:	77 95       	ror	r23
     d5e:	67 95       	ror	r22
     d60:	b7 95       	ror	r27
     d62:	f1 11       	cpse	r31, r1
     d64:	f8 cf       	rjmp	.-16     	; 0xd56 <__floatsisf+0x1c>
     d66:	fa f4       	brpl	.+62     	; 0xda6 <__floatsisf+0x6c>
     d68:	bb 0f       	add	r27, r27
     d6a:	11 f4       	brne	.+4      	; 0xd70 <__floatsisf+0x36>
     d6c:	60 ff       	sbrs	r22, 0
     d6e:	1b c0       	rjmp	.+54     	; 0xda6 <__floatsisf+0x6c>
     d70:	6f 5f       	subi	r22, 0xFF	; 255
     d72:	7f 4f       	sbci	r23, 0xFF	; 255
     d74:	8f 4f       	sbci	r24, 0xFF	; 255
     d76:	9f 4f       	sbci	r25, 0xFF	; 255
     d78:	16 c0       	rjmp	.+44     	; 0xda6 <__floatsisf+0x6c>
     d7a:	88 23       	and	r24, r24
     d7c:	11 f0       	breq	.+4      	; 0xd82 <__floatsisf+0x48>
     d7e:	96 e9       	ldi	r25, 0x96	; 150
     d80:	11 c0       	rjmp	.+34     	; 0xda4 <__floatsisf+0x6a>
     d82:	77 23       	and	r23, r23
     d84:	21 f0       	breq	.+8      	; 0xd8e <__floatsisf+0x54>
     d86:	9e e8       	ldi	r25, 0x8E	; 142
     d88:	87 2f       	mov	r24, r23
     d8a:	76 2f       	mov	r23, r22
     d8c:	05 c0       	rjmp	.+10     	; 0xd98 <__floatsisf+0x5e>
     d8e:	66 23       	and	r22, r22
     d90:	71 f0       	breq	.+28     	; 0xdae <__floatsisf+0x74>
     d92:	96 e8       	ldi	r25, 0x86	; 134
     d94:	86 2f       	mov	r24, r22
     d96:	70 e0       	ldi	r23, 0x00	; 0
     d98:	60 e0       	ldi	r22, 0x00	; 0
     d9a:	2a f0       	brmi	.+10     	; 0xda6 <__floatsisf+0x6c>
     d9c:	9a 95       	dec	r25
     d9e:	66 0f       	add	r22, r22
     da0:	77 1f       	adc	r23, r23
     da2:	88 1f       	adc	r24, r24
     da4:	da f7       	brpl	.-10     	; 0xd9c <__floatsisf+0x62>
     da6:	88 0f       	add	r24, r24
     da8:	96 95       	lsr	r25
     daa:	87 95       	ror	r24
     dac:	97 f9       	bld	r25, 7
     dae:	08 95       	ret

00000db0 <__fp_inf>:
     db0:	97 f9       	bld	r25, 7
     db2:	9f 67       	ori	r25, 0x7F	; 127
     db4:	80 e8       	ldi	r24, 0x80	; 128
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	60 e0       	ldi	r22, 0x00	; 0
     dba:	08 95       	ret

00000dbc <__fp_nan>:
     dbc:	9f ef       	ldi	r25, 0xFF	; 255
     dbe:	80 ec       	ldi	r24, 0xC0	; 192
     dc0:	08 95       	ret

00000dc2 <__fp_pscA>:
     dc2:	00 24       	eor	r0, r0
     dc4:	0a 94       	dec	r0
     dc6:	16 16       	cp	r1, r22
     dc8:	17 06       	cpc	r1, r23
     dca:	18 06       	cpc	r1, r24
     dcc:	09 06       	cpc	r0, r25
     dce:	08 95       	ret

00000dd0 <__fp_pscB>:
     dd0:	00 24       	eor	r0, r0
     dd2:	0a 94       	dec	r0
     dd4:	12 16       	cp	r1, r18
     dd6:	13 06       	cpc	r1, r19
     dd8:	14 06       	cpc	r1, r20
     dda:	05 06       	cpc	r0, r21
     ddc:	08 95       	ret

00000dde <__fp_round>:
     dde:	09 2e       	mov	r0, r25
     de0:	03 94       	inc	r0
     de2:	00 0c       	add	r0, r0
     de4:	11 f4       	brne	.+4      	; 0xdea <__fp_round+0xc>
     de6:	88 23       	and	r24, r24
     de8:	52 f0       	brmi	.+20     	; 0xdfe <__fp_round+0x20>
     dea:	bb 0f       	add	r27, r27
     dec:	40 f4       	brcc	.+16     	; 0xdfe <__fp_round+0x20>
     dee:	bf 2b       	or	r27, r31
     df0:	11 f4       	brne	.+4      	; 0xdf6 <__fp_round+0x18>
     df2:	60 ff       	sbrs	r22, 0
     df4:	04 c0       	rjmp	.+8      	; 0xdfe <__fp_round+0x20>
     df6:	6f 5f       	subi	r22, 0xFF	; 255
     df8:	7f 4f       	sbci	r23, 0xFF	; 255
     dfa:	8f 4f       	sbci	r24, 0xFF	; 255
     dfc:	9f 4f       	sbci	r25, 0xFF	; 255
     dfe:	08 95       	ret

00000e00 <__fp_split3>:
     e00:	57 fd       	sbrc	r21, 7
     e02:	90 58       	subi	r25, 0x80	; 128
     e04:	44 0f       	add	r20, r20
     e06:	55 1f       	adc	r21, r21
     e08:	59 f0       	breq	.+22     	; 0xe20 <__fp_splitA+0x10>
     e0a:	5f 3f       	cpi	r21, 0xFF	; 255
     e0c:	71 f0       	breq	.+28     	; 0xe2a <__fp_splitA+0x1a>
     e0e:	47 95       	ror	r20

00000e10 <__fp_splitA>:
     e10:	88 0f       	add	r24, r24
     e12:	97 fb       	bst	r25, 7
     e14:	99 1f       	adc	r25, r25
     e16:	61 f0       	breq	.+24     	; 0xe30 <__fp_splitA+0x20>
     e18:	9f 3f       	cpi	r25, 0xFF	; 255
     e1a:	79 f0       	breq	.+30     	; 0xe3a <__fp_splitA+0x2a>
     e1c:	87 95       	ror	r24
     e1e:	08 95       	ret
     e20:	12 16       	cp	r1, r18
     e22:	13 06       	cpc	r1, r19
     e24:	14 06       	cpc	r1, r20
     e26:	55 1f       	adc	r21, r21
     e28:	f2 cf       	rjmp	.-28     	; 0xe0e <__fp_split3+0xe>
     e2a:	46 95       	lsr	r20
     e2c:	f1 df       	rcall	.-30     	; 0xe10 <__fp_splitA>
     e2e:	08 c0       	rjmp	.+16     	; 0xe40 <__fp_splitA+0x30>
     e30:	16 16       	cp	r1, r22
     e32:	17 06       	cpc	r1, r23
     e34:	18 06       	cpc	r1, r24
     e36:	99 1f       	adc	r25, r25
     e38:	f1 cf       	rjmp	.-30     	; 0xe1c <__fp_splitA+0xc>
     e3a:	86 95       	lsr	r24
     e3c:	71 05       	cpc	r23, r1
     e3e:	61 05       	cpc	r22, r1
     e40:	08 94       	sec
     e42:	08 95       	ret

00000e44 <__fp_zero>:
     e44:	e8 94       	clt

00000e46 <__fp_szero>:
     e46:	bb 27       	eor	r27, r27
     e48:	66 27       	eor	r22, r22
     e4a:	77 27       	eor	r23, r23
     e4c:	cb 01       	movw	r24, r22
     e4e:	97 f9       	bld	r25, 7
     e50:	08 95       	ret

00000e52 <__mulsf3>:
     e52:	0e 94 3c 07 	call	0xe78	; 0xe78 <__mulsf3x>
     e56:	0c 94 ef 06 	jmp	0xdde	; 0xdde <__fp_round>
     e5a:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__fp_pscA>
     e5e:	38 f0       	brcs	.+14     	; 0xe6e <__mulsf3+0x1c>
     e60:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__fp_pscB>
     e64:	20 f0       	brcs	.+8      	; 0xe6e <__mulsf3+0x1c>
     e66:	95 23       	and	r25, r21
     e68:	11 f0       	breq	.+4      	; 0xe6e <__mulsf3+0x1c>
     e6a:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_inf>
     e6e:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__fp_nan>
     e72:	11 24       	eor	r1, r1
     e74:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_szero>

00000e78 <__mulsf3x>:
     e78:	0e 94 00 07 	call	0xe00	; 0xe00 <__fp_split3>
     e7c:	70 f3       	brcs	.-36     	; 0xe5a <__mulsf3+0x8>

00000e7e <__mulsf3_pse>:
     e7e:	95 9f       	mul	r25, r21
     e80:	c1 f3       	breq	.-16     	; 0xe72 <__mulsf3+0x20>
     e82:	95 0f       	add	r25, r21
     e84:	50 e0       	ldi	r21, 0x00	; 0
     e86:	55 1f       	adc	r21, r21
     e88:	62 9f       	mul	r22, r18
     e8a:	f0 01       	movw	r30, r0
     e8c:	72 9f       	mul	r23, r18
     e8e:	bb 27       	eor	r27, r27
     e90:	f0 0d       	add	r31, r0
     e92:	b1 1d       	adc	r27, r1
     e94:	63 9f       	mul	r22, r19
     e96:	aa 27       	eor	r26, r26
     e98:	f0 0d       	add	r31, r0
     e9a:	b1 1d       	adc	r27, r1
     e9c:	aa 1f       	adc	r26, r26
     e9e:	64 9f       	mul	r22, r20
     ea0:	66 27       	eor	r22, r22
     ea2:	b0 0d       	add	r27, r0
     ea4:	a1 1d       	adc	r26, r1
     ea6:	66 1f       	adc	r22, r22
     ea8:	82 9f       	mul	r24, r18
     eaa:	22 27       	eor	r18, r18
     eac:	b0 0d       	add	r27, r0
     eae:	a1 1d       	adc	r26, r1
     eb0:	62 1f       	adc	r22, r18
     eb2:	73 9f       	mul	r23, r19
     eb4:	b0 0d       	add	r27, r0
     eb6:	a1 1d       	adc	r26, r1
     eb8:	62 1f       	adc	r22, r18
     eba:	83 9f       	mul	r24, r19
     ebc:	a0 0d       	add	r26, r0
     ebe:	61 1d       	adc	r22, r1
     ec0:	22 1f       	adc	r18, r18
     ec2:	74 9f       	mul	r23, r20
     ec4:	33 27       	eor	r19, r19
     ec6:	a0 0d       	add	r26, r0
     ec8:	61 1d       	adc	r22, r1
     eca:	23 1f       	adc	r18, r19
     ecc:	84 9f       	mul	r24, r20
     ece:	60 0d       	add	r22, r0
     ed0:	21 1d       	adc	r18, r1
     ed2:	82 2f       	mov	r24, r18
     ed4:	76 2f       	mov	r23, r22
     ed6:	6a 2f       	mov	r22, r26
     ed8:	11 24       	eor	r1, r1
     eda:	9f 57       	subi	r25, 0x7F	; 127
     edc:	50 40       	sbci	r21, 0x00	; 0
     ede:	9a f0       	brmi	.+38     	; 0xf06 <__mulsf3_pse+0x88>
     ee0:	f1 f0       	breq	.+60     	; 0xf1e <__mulsf3_pse+0xa0>
     ee2:	88 23       	and	r24, r24
     ee4:	4a f0       	brmi	.+18     	; 0xef8 <__mulsf3_pse+0x7a>
     ee6:	ee 0f       	add	r30, r30
     ee8:	ff 1f       	adc	r31, r31
     eea:	bb 1f       	adc	r27, r27
     eec:	66 1f       	adc	r22, r22
     eee:	77 1f       	adc	r23, r23
     ef0:	88 1f       	adc	r24, r24
     ef2:	91 50       	subi	r25, 0x01	; 1
     ef4:	50 40       	sbci	r21, 0x00	; 0
     ef6:	a9 f7       	brne	.-22     	; 0xee2 <__mulsf3_pse+0x64>
     ef8:	9e 3f       	cpi	r25, 0xFE	; 254
     efa:	51 05       	cpc	r21, r1
     efc:	80 f0       	brcs	.+32     	; 0xf1e <__mulsf3_pse+0xa0>
     efe:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_inf>
     f02:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_szero>
     f06:	5f 3f       	cpi	r21, 0xFF	; 255
     f08:	e4 f3       	brlt	.-8      	; 0xf02 <__mulsf3_pse+0x84>
     f0a:	98 3e       	cpi	r25, 0xE8	; 232
     f0c:	d4 f3       	brlt	.-12     	; 0xf02 <__mulsf3_pse+0x84>
     f0e:	86 95       	lsr	r24
     f10:	77 95       	ror	r23
     f12:	67 95       	ror	r22
     f14:	b7 95       	ror	r27
     f16:	f7 95       	ror	r31
     f18:	e7 95       	ror	r30
     f1a:	9f 5f       	subi	r25, 0xFF	; 255
     f1c:	c1 f7       	brne	.-16     	; 0xf0e <__mulsf3_pse+0x90>
     f1e:	fe 2b       	or	r31, r30
     f20:	88 0f       	add	r24, r24
     f22:	91 1d       	adc	r25, r1
     f24:	96 95       	lsr	r25
     f26:	87 95       	ror	r24
     f28:	97 f9       	bld	r25, 7
     f2a:	08 95       	ret

00000f2c <pow>:
     f2c:	fa 01       	movw	r30, r20
     f2e:	ee 0f       	add	r30, r30
     f30:	ff 1f       	adc	r31, r31
     f32:	30 96       	adiw	r30, 0x00	; 0
     f34:	21 05       	cpc	r18, r1
     f36:	31 05       	cpc	r19, r1
     f38:	a1 f1       	breq	.+104    	; 0xfa2 <pow+0x76>
     f3a:	61 15       	cp	r22, r1
     f3c:	71 05       	cpc	r23, r1
     f3e:	61 f4       	brne	.+24     	; 0xf58 <pow+0x2c>
     f40:	80 38       	cpi	r24, 0x80	; 128
     f42:	bf e3       	ldi	r27, 0x3F	; 63
     f44:	9b 07       	cpc	r25, r27
     f46:	49 f1       	breq	.+82     	; 0xf9a <pow+0x6e>
     f48:	68 94       	set
     f4a:	90 38       	cpi	r25, 0x80	; 128
     f4c:	81 05       	cpc	r24, r1
     f4e:	61 f0       	breq	.+24     	; 0xf68 <pow+0x3c>
     f50:	80 38       	cpi	r24, 0x80	; 128
     f52:	bf ef       	ldi	r27, 0xFF	; 255
     f54:	9b 07       	cpc	r25, r27
     f56:	41 f0       	breq	.+16     	; 0xf68 <pow+0x3c>
     f58:	99 23       	and	r25, r25
     f5a:	4a f5       	brpl	.+82     	; 0xfae <pow+0x82>
     f5c:	ff 3f       	cpi	r31, 0xFF	; 255
     f5e:	e1 05       	cpc	r30, r1
     f60:	31 05       	cpc	r19, r1
     f62:	21 05       	cpc	r18, r1
     f64:	19 f1       	breq	.+70     	; 0xfac <pow+0x80>
     f66:	e8 94       	clt
     f68:	08 94       	sec
     f6a:	e7 95       	ror	r30
     f6c:	d9 01       	movw	r26, r18
     f6e:	aa 23       	and	r26, r26
     f70:	29 f4       	brne	.+10     	; 0xf7c <pow+0x50>
     f72:	ab 2f       	mov	r26, r27
     f74:	be 2f       	mov	r27, r30
     f76:	f8 5f       	subi	r31, 0xF8	; 248
     f78:	d0 f3       	brcs	.-12     	; 0xf6e <pow+0x42>
     f7a:	10 c0       	rjmp	.+32     	; 0xf9c <pow+0x70>
     f7c:	ff 5f       	subi	r31, 0xFF	; 255
     f7e:	70 f4       	brcc	.+28     	; 0xf9c <pow+0x70>
     f80:	a6 95       	lsr	r26
     f82:	e0 f7       	brcc	.-8      	; 0xf7c <pow+0x50>
     f84:	f7 39       	cpi	r31, 0x97	; 151
     f86:	50 f0       	brcs	.+20     	; 0xf9c <pow+0x70>
     f88:	19 f0       	breq	.+6      	; 0xf90 <pow+0x64>
     f8a:	ff 3a       	cpi	r31, 0xAF	; 175
     f8c:	38 f4       	brcc	.+14     	; 0xf9c <pow+0x70>
     f8e:	9f 77       	andi	r25, 0x7F	; 127
     f90:	9f 93       	push	r25
     f92:	0d d0       	rcall	.+26     	; 0xfae <pow+0x82>
     f94:	0f 90       	pop	r0
     f96:	07 fc       	sbrc	r0, 7
     f98:	90 58       	subi	r25, 0x80	; 128
     f9a:	08 95       	ret
     f9c:	46 f0       	brts	.+16     	; 0xfae <pow+0x82>
     f9e:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__fp_nan>
     fa2:	60 e0       	ldi	r22, 0x00	; 0
     fa4:	70 e0       	ldi	r23, 0x00	; 0
     fa6:	80 e8       	ldi	r24, 0x80	; 128
     fa8:	9f e3       	ldi	r25, 0x3F	; 63
     faa:	08 95       	ret
     fac:	4f e7       	ldi	r20, 0x7F	; 127
     fae:	9f 77       	andi	r25, 0x7F	; 127
     fb0:	5f 93       	push	r21
     fb2:	4f 93       	push	r20
     fb4:	3f 93       	push	r19
     fb6:	2f 93       	push	r18
     fb8:	0e 94 91 08 	call	0x1122	; 0x1122 <log>
     fbc:	2f 91       	pop	r18
     fbe:	3f 91       	pop	r19
     fc0:	4f 91       	pop	r20
     fc2:	5f 91       	pop	r21
     fc4:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3>
     fc8:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <exp>
     fcc:	29 f4       	brne	.+10     	; 0xfd8 <pow+0xac>
     fce:	16 f0       	brts	.+4      	; 0xfd4 <pow+0xa8>
     fd0:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_inf>
     fd4:	0c 94 22 07 	jmp	0xe44	; 0xe44 <__fp_zero>
     fd8:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__fp_nan>

00000fdc <exp>:
     fdc:	0e 94 08 07 	call	0xe10	; 0xe10 <__fp_splitA>
     fe0:	a8 f3       	brcs	.-22     	; 0xfcc <pow+0xa0>
     fe2:	96 38       	cpi	r25, 0x86	; 134
     fe4:	a0 f7       	brcc	.-24     	; 0xfce <pow+0xa2>
     fe6:	07 f8       	bld	r0, 7
     fe8:	0f 92       	push	r0
     fea:	e8 94       	clt
     fec:	2b e3       	ldi	r18, 0x3B	; 59
     fee:	3a ea       	ldi	r19, 0xAA	; 170
     ff0:	48 eb       	ldi	r20, 0xB8	; 184
     ff2:	5f e7       	ldi	r21, 0x7F	; 127
     ff4:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__mulsf3_pse>
     ff8:	0f 92       	push	r0
     ffa:	0f 92       	push	r0
     ffc:	0f 92       	push	r0
     ffe:	4d b7       	in	r20, 0x3d	; 61
    1000:	5e b7       	in	r21, 0x3e	; 62
    1002:	0f 92       	push	r0
    1004:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <modf>
    1008:	ee e7       	ldi	r30, 0x7E	; 126
    100a:	f0 e0       	ldi	r31, 0x00	; 0
    100c:	0e 94 20 08 	call	0x1040	; 0x1040 <__fp_powser>
    1010:	4f 91       	pop	r20
    1012:	5f 91       	pop	r21
    1014:	ef 91       	pop	r30
    1016:	ff 91       	pop	r31
    1018:	e5 95       	asr	r30
    101a:	ee 1f       	adc	r30, r30
    101c:	ff 1f       	adc	r31, r31
    101e:	49 f0       	breq	.+18     	; 0x1032 <exp+0x56>
    1020:	fe 57       	subi	r31, 0x7E	; 126
    1022:	e0 68       	ori	r30, 0x80	; 128
    1024:	44 27       	eor	r20, r20
    1026:	ee 0f       	add	r30, r30
    1028:	44 1f       	adc	r20, r20
    102a:	fa 95       	dec	r31
    102c:	e1 f7       	brne	.-8      	; 0x1026 <exp+0x4a>
    102e:	41 95       	neg	r20
    1030:	55 0b       	sbc	r21, r21
    1032:	0e 94 53 08 	call	0x10a6	; 0x10a6 <ldexp>
    1036:	0f 90       	pop	r0
    1038:	07 fe       	sbrs	r0, 7
    103a:	0c 94 47 08 	jmp	0x108e	; 0x108e <inverse>
    103e:	08 95       	ret

00001040 <__fp_powser>:
    1040:	df 93       	push	r29
    1042:	cf 93       	push	r28
    1044:	1f 93       	push	r17
    1046:	0f 93       	push	r16
    1048:	ff 92       	push	r15
    104a:	ef 92       	push	r14
    104c:	df 92       	push	r13
    104e:	7b 01       	movw	r14, r22
    1050:	8c 01       	movw	r16, r24
    1052:	68 94       	set
    1054:	06 c0       	rjmp	.+12     	; 0x1062 <__fp_powser+0x22>
    1056:	da 2e       	mov	r13, r26
    1058:	ef 01       	movw	r28, r30
    105a:	0e 94 3c 07 	call	0xe78	; 0xe78 <__mulsf3x>
    105e:	fe 01       	movw	r30, r28
    1060:	e8 94       	clt
    1062:	a5 91       	lpm	r26, Z+
    1064:	25 91       	lpm	r18, Z+
    1066:	35 91       	lpm	r19, Z+
    1068:	45 91       	lpm	r20, Z+
    106a:	55 91       	lpm	r21, Z+
    106c:	a6 f3       	brts	.-24     	; 0x1056 <__fp_powser+0x16>
    106e:	ef 01       	movw	r28, r30
    1070:	0e 94 9e 05 	call	0xb3c	; 0xb3c <__addsf3x>
    1074:	fe 01       	movw	r30, r28
    1076:	97 01       	movw	r18, r14
    1078:	a8 01       	movw	r20, r16
    107a:	da 94       	dec	r13
    107c:	69 f7       	brne	.-38     	; 0x1058 <__fp_powser+0x18>
    107e:	df 90       	pop	r13
    1080:	ef 90       	pop	r14
    1082:	ff 90       	pop	r15
    1084:	0f 91       	pop	r16
    1086:	1f 91       	pop	r17
    1088:	cf 91       	pop	r28
    108a:	df 91       	pop	r29
    108c:	08 95       	ret

0000108e <inverse>:
    108e:	9b 01       	movw	r18, r22
    1090:	ac 01       	movw	r20, r24
    1092:	60 e0       	ldi	r22, 0x00	; 0
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	80 e8       	ldi	r24, 0x80	; 128
    1098:	9f e3       	ldi	r25, 0x3F	; 63
    109a:	0c 94 f3 05 	jmp	0xbe6	; 0xbe6 <__divsf3>
    109e:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_inf>
    10a2:	0c 94 0d 09 	jmp	0x121a	; 0x121a <__fp_mpack>

000010a6 <ldexp>:
    10a6:	0e 94 08 07 	call	0xe10	; 0xe10 <__fp_splitA>
    10aa:	d8 f3       	brcs	.-10     	; 0x10a2 <inverse+0x14>
    10ac:	99 23       	and	r25, r25
    10ae:	c9 f3       	breq	.-14     	; 0x10a2 <inverse+0x14>
    10b0:	94 0f       	add	r25, r20
    10b2:	51 1d       	adc	r21, r1
    10b4:	a3 f3       	brvs	.-24     	; 0x109e <inverse+0x10>
    10b6:	91 50       	subi	r25, 0x01	; 1
    10b8:	50 40       	sbci	r21, 0x00	; 0
    10ba:	94 f0       	brlt	.+36     	; 0x10e0 <ldexp+0x3a>
    10bc:	59 f0       	breq	.+22     	; 0x10d4 <ldexp+0x2e>
    10be:	88 23       	and	r24, r24
    10c0:	32 f0       	brmi	.+12     	; 0x10ce <ldexp+0x28>
    10c2:	66 0f       	add	r22, r22
    10c4:	77 1f       	adc	r23, r23
    10c6:	88 1f       	adc	r24, r24
    10c8:	91 50       	subi	r25, 0x01	; 1
    10ca:	50 40       	sbci	r21, 0x00	; 0
    10cc:	c1 f7       	brne	.-16     	; 0x10be <ldexp+0x18>
    10ce:	9e 3f       	cpi	r25, 0xFE	; 254
    10d0:	51 05       	cpc	r21, r1
    10d2:	2c f7       	brge	.-54     	; 0x109e <inverse+0x10>
    10d4:	88 0f       	add	r24, r24
    10d6:	91 1d       	adc	r25, r1
    10d8:	96 95       	lsr	r25
    10da:	87 95       	ror	r24
    10dc:	97 f9       	bld	r25, 7
    10de:	08 95       	ret
    10e0:	5f 3f       	cpi	r21, 0xFF	; 255
    10e2:	ac f0       	brlt	.+42     	; 0x110e <ldexp+0x68>
    10e4:	98 3e       	cpi	r25, 0xE8	; 232
    10e6:	9c f0       	brlt	.+38     	; 0x110e <ldexp+0x68>
    10e8:	bb 27       	eor	r27, r27
    10ea:	86 95       	lsr	r24
    10ec:	77 95       	ror	r23
    10ee:	67 95       	ror	r22
    10f0:	b7 95       	ror	r27
    10f2:	08 f4       	brcc	.+2      	; 0x10f6 <ldexp+0x50>
    10f4:	b1 60       	ori	r27, 0x01	; 1
    10f6:	93 95       	inc	r25
    10f8:	c1 f7       	brne	.-16     	; 0x10ea <ldexp+0x44>
    10fa:	bb 0f       	add	r27, r27
    10fc:	58 f7       	brcc	.-42     	; 0x10d4 <ldexp+0x2e>
    10fe:	11 f4       	brne	.+4      	; 0x1104 <ldexp+0x5e>
    1100:	60 ff       	sbrs	r22, 0
    1102:	e8 cf       	rjmp	.-48     	; 0x10d4 <ldexp+0x2e>
    1104:	6f 5f       	subi	r22, 0xFF	; 255
    1106:	7f 4f       	sbci	r23, 0xFF	; 255
    1108:	8f 4f       	sbci	r24, 0xFF	; 255
    110a:	9f 4f       	sbci	r25, 0xFF	; 255
    110c:	e3 cf       	rjmp	.-58     	; 0x10d4 <ldexp+0x2e>
    110e:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_szero>
    1112:	16 f0       	brts	.+4      	; 0x1118 <ldexp+0x72>
    1114:	0c 94 0d 09 	jmp	0x121a	; 0x121a <__fp_mpack>
    1118:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__fp_nan>
    111c:	68 94       	set
    111e:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_inf>

00001122 <log>:
    1122:	0e 94 08 07 	call	0xe10	; 0xe10 <__fp_splitA>
    1126:	a8 f3       	brcs	.-22     	; 0x1112 <ldexp+0x6c>
    1128:	99 23       	and	r25, r25
    112a:	c1 f3       	breq	.-16     	; 0x111c <ldexp+0x76>
    112c:	ae f3       	brts	.-22     	; 0x1118 <ldexp+0x72>
    112e:	df 93       	push	r29
    1130:	cf 93       	push	r28
    1132:	1f 93       	push	r17
    1134:	0f 93       	push	r16
    1136:	ff 92       	push	r15
    1138:	c9 2f       	mov	r28, r25
    113a:	dd 27       	eor	r29, r29
    113c:	88 23       	and	r24, r24
    113e:	2a f0       	brmi	.+10     	; 0x114a <log+0x28>
    1140:	21 97       	sbiw	r28, 0x01	; 1
    1142:	66 0f       	add	r22, r22
    1144:	77 1f       	adc	r23, r23
    1146:	88 1f       	adc	r24, r24
    1148:	da f7       	brpl	.-10     	; 0x1140 <log+0x1e>
    114a:	20 e0       	ldi	r18, 0x00	; 0
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	40 e8       	ldi	r20, 0x80	; 128
    1150:	5f eb       	ldi	r21, 0xBF	; 191
    1152:	9f e3       	ldi	r25, 0x3F	; 63
    1154:	88 39       	cpi	r24, 0x98	; 152
    1156:	20 f0       	brcs	.+8      	; 0x1160 <log+0x3e>
    1158:	80 3e       	cpi	r24, 0xE0	; 224
    115a:	38 f0       	brcs	.+14     	; 0x116a <log+0x48>
    115c:	21 96       	adiw	r28, 0x01	; 1
    115e:	8f 77       	andi	r24, 0x7F	; 127
    1160:	0e 94 87 05 	call	0xb0e	; 0xb0e <__addsf3>
    1164:	e6 ea       	ldi	r30, 0xA6	; 166
    1166:	f0 e0       	ldi	r31, 0x00	; 0
    1168:	04 c0       	rjmp	.+8      	; 0x1172 <log+0x50>
    116a:	0e 94 87 05 	call	0xb0e	; 0xb0e <__addsf3>
    116e:	e3 ed       	ldi	r30, 0xD3	; 211
    1170:	f0 e0       	ldi	r31, 0x00	; 0
    1172:	0e 94 20 08 	call	0x1040	; 0x1040 <__fp_powser>
    1176:	8b 01       	movw	r16, r22
    1178:	be 01       	movw	r22, r28
    117a:	ec 01       	movw	r28, r24
    117c:	fb 2e       	mov	r15, r27
    117e:	6f 57       	subi	r22, 0x7F	; 127
    1180:	71 09       	sbc	r23, r1
    1182:	75 95       	asr	r23
    1184:	77 1f       	adc	r23, r23
    1186:	88 0b       	sbc	r24, r24
    1188:	99 0b       	sbc	r25, r25
    118a:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatsisf>
    118e:	28 e1       	ldi	r18, 0x18	; 24
    1190:	32 e7       	ldi	r19, 0x72	; 114
    1192:	41 e3       	ldi	r20, 0x31	; 49
    1194:	5f e3       	ldi	r21, 0x3F	; 63
    1196:	0e 94 3c 07 	call	0xe78	; 0xe78 <__mulsf3x>
    119a:	af 2d       	mov	r26, r15
    119c:	98 01       	movw	r18, r16
    119e:	ae 01       	movw	r20, r28
    11a0:	ff 90       	pop	r15
    11a2:	0f 91       	pop	r16
    11a4:	1f 91       	pop	r17
    11a6:	cf 91       	pop	r28
    11a8:	df 91       	pop	r29
    11aa:	0e 94 9e 05 	call	0xb3c	; 0xb3c <__addsf3x>
    11ae:	0c 94 ef 06 	jmp	0xdde	; 0xdde <__fp_round>

000011b2 <modf>:
    11b2:	fa 01       	movw	r30, r20
    11b4:	dc 01       	movw	r26, r24
    11b6:	aa 0f       	add	r26, r26
    11b8:	bb 1f       	adc	r27, r27
    11ba:	9b 01       	movw	r18, r22
    11bc:	ac 01       	movw	r20, r24
    11be:	bf 57       	subi	r27, 0x7F	; 127
    11c0:	28 f4       	brcc	.+10     	; 0x11cc <modf+0x1a>
    11c2:	22 27       	eor	r18, r18
    11c4:	33 27       	eor	r19, r19
    11c6:	44 27       	eor	r20, r20
    11c8:	50 78       	andi	r21, 0x80	; 128
    11ca:	20 c0       	rjmp	.+64     	; 0x120c <modf+0x5a>
    11cc:	b7 51       	subi	r27, 0x17	; 23
    11ce:	90 f4       	brcc	.+36     	; 0x11f4 <modf+0x42>
    11d0:	ab 2f       	mov	r26, r27
    11d2:	00 24       	eor	r0, r0
    11d4:	46 95       	lsr	r20
    11d6:	37 95       	ror	r19
    11d8:	27 95       	ror	r18
    11da:	01 1c       	adc	r0, r1
    11dc:	a3 95       	inc	r26
    11de:	d2 f3       	brmi	.-12     	; 0x11d4 <modf+0x22>
    11e0:	00 20       	and	r0, r0
    11e2:	71 f0       	breq	.+28     	; 0x1200 <modf+0x4e>
    11e4:	22 0f       	add	r18, r18
    11e6:	33 1f       	adc	r19, r19
    11e8:	44 1f       	adc	r20, r20
    11ea:	b3 95       	inc	r27
    11ec:	da f3       	brmi	.-10     	; 0x11e4 <modf+0x32>
    11ee:	0e d0       	rcall	.+28     	; 0x120c <modf+0x5a>
    11f0:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <__subsf3>
    11f4:	61 30       	cpi	r22, 0x01	; 1
    11f6:	71 05       	cpc	r23, r1
    11f8:	a0 e8       	ldi	r26, 0x80	; 128
    11fa:	8a 07       	cpc	r24, r26
    11fc:	b9 46       	sbci	r27, 0x69	; 105
    11fe:	30 f4       	brcc	.+12     	; 0x120c <modf+0x5a>
    1200:	9b 01       	movw	r18, r22
    1202:	ac 01       	movw	r20, r24
    1204:	66 27       	eor	r22, r22
    1206:	77 27       	eor	r23, r23
    1208:	88 27       	eor	r24, r24
    120a:	90 78       	andi	r25, 0x80	; 128
    120c:	30 96       	adiw	r30, 0x00	; 0
    120e:	21 f0       	breq	.+8      	; 0x1218 <modf+0x66>
    1210:	20 83       	st	Z, r18
    1212:	31 83       	std	Z+1, r19	; 0x01
    1214:	42 83       	std	Z+2, r20	; 0x02
    1216:	53 83       	std	Z+3, r21	; 0x03
    1218:	08 95       	ret

0000121a <__fp_mpack>:
    121a:	9f 3f       	cpi	r25, 0xFF	; 255
    121c:	31 f0       	breq	.+12     	; 0x122a <__fp_mpack_finite+0xc>

0000121e <__fp_mpack_finite>:
    121e:	91 50       	subi	r25, 0x01	; 1
    1220:	20 f4       	brcc	.+8      	; 0x122a <__fp_mpack_finite+0xc>
    1222:	87 95       	ror	r24
    1224:	77 95       	ror	r23
    1226:	67 95       	ror	r22
    1228:	b7 95       	ror	r27
    122a:	88 0f       	add	r24, r24
    122c:	91 1d       	adc	r25, r1
    122e:	96 95       	lsr	r25
    1230:	87 95       	ror	r24
    1232:	97 f9       	bld	r25, 7
    1234:	08 95       	ret

00001236 <vfprintf>:
    1236:	a0 e1       	ldi	r26, 0x10	; 16
    1238:	b0 e0       	ldi	r27, 0x00	; 0
    123a:	e1 e2       	ldi	r30, 0x21	; 33
    123c:	f9 e0       	ldi	r31, 0x09	; 9
    123e:	0c 94 e3 0c 	jmp	0x19c6	; 0x19c6 <__prologue_saves__>
    1242:	7c 01       	movw	r14, r24
    1244:	1b 01       	movw	r2, r22
    1246:	6a 01       	movw	r12, r20
    1248:	fc 01       	movw	r30, r24
    124a:	17 82       	std	Z+7, r1	; 0x07
    124c:	16 82       	std	Z+6, r1	; 0x06
    124e:	83 81       	ldd	r24, Z+3	; 0x03
    1250:	81 ff       	sbrs	r24, 1
    1252:	44 c3       	rjmp	.+1672   	; 0x18dc <vfprintf+0x6a6>
    1254:	9e 01       	movw	r18, r28
    1256:	2f 5f       	subi	r18, 0xFF	; 255
    1258:	3f 4f       	sbci	r19, 0xFF	; 255
    125a:	39 01       	movw	r6, r18
    125c:	f7 01       	movw	r30, r14
    125e:	93 81       	ldd	r25, Z+3	; 0x03
    1260:	f1 01       	movw	r30, r2
    1262:	93 fd       	sbrc	r25, 3
    1264:	85 91       	lpm	r24, Z+
    1266:	93 ff       	sbrs	r25, 3
    1268:	81 91       	ld	r24, Z+
    126a:	1f 01       	movw	r2, r30
    126c:	88 23       	and	r24, r24
    126e:	09 f4       	brne	.+2      	; 0x1272 <vfprintf+0x3c>
    1270:	31 c3       	rjmp	.+1634   	; 0x18d4 <vfprintf+0x69e>
    1272:	85 32       	cpi	r24, 0x25	; 37
    1274:	39 f4       	brne	.+14     	; 0x1284 <vfprintf+0x4e>
    1276:	93 fd       	sbrc	r25, 3
    1278:	85 91       	lpm	r24, Z+
    127a:	93 ff       	sbrs	r25, 3
    127c:	81 91       	ld	r24, Z+
    127e:	1f 01       	movw	r2, r30
    1280:	85 32       	cpi	r24, 0x25	; 37
    1282:	39 f4       	brne	.+14     	; 0x1292 <vfprintf+0x5c>
    1284:	b7 01       	movw	r22, r14
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    128c:	56 01       	movw	r10, r12
    128e:	65 01       	movw	r12, r10
    1290:	e5 cf       	rjmp	.-54     	; 0x125c <vfprintf+0x26>
    1292:	10 e0       	ldi	r17, 0x00	; 0
    1294:	51 2c       	mov	r5, r1
    1296:	91 2c       	mov	r9, r1
    1298:	ff e1       	ldi	r31, 0x1F	; 31
    129a:	f9 15       	cp	r31, r9
    129c:	d8 f0       	brcs	.+54     	; 0x12d4 <vfprintf+0x9e>
    129e:	8b 32       	cpi	r24, 0x2B	; 43
    12a0:	79 f0       	breq	.+30     	; 0x12c0 <vfprintf+0x8a>
    12a2:	38 f4       	brcc	.+14     	; 0x12b2 <vfprintf+0x7c>
    12a4:	80 32       	cpi	r24, 0x20	; 32
    12a6:	79 f0       	breq	.+30     	; 0x12c6 <vfprintf+0x90>
    12a8:	83 32       	cpi	r24, 0x23	; 35
    12aa:	a1 f4       	brne	.+40     	; 0x12d4 <vfprintf+0x9e>
    12ac:	f9 2d       	mov	r31, r9
    12ae:	f0 61       	ori	r31, 0x10	; 16
    12b0:	2e c0       	rjmp	.+92     	; 0x130e <vfprintf+0xd8>
    12b2:	8d 32       	cpi	r24, 0x2D	; 45
    12b4:	61 f0       	breq	.+24     	; 0x12ce <vfprintf+0x98>
    12b6:	80 33       	cpi	r24, 0x30	; 48
    12b8:	69 f4       	brne	.+26     	; 0x12d4 <vfprintf+0x9e>
    12ba:	29 2d       	mov	r18, r9
    12bc:	21 60       	ori	r18, 0x01	; 1
    12be:	2d c0       	rjmp	.+90     	; 0x131a <vfprintf+0xe4>
    12c0:	39 2d       	mov	r19, r9
    12c2:	32 60       	ori	r19, 0x02	; 2
    12c4:	93 2e       	mov	r9, r19
    12c6:	89 2d       	mov	r24, r9
    12c8:	84 60       	ori	r24, 0x04	; 4
    12ca:	98 2e       	mov	r9, r24
    12cc:	2a c0       	rjmp	.+84     	; 0x1322 <vfprintf+0xec>
    12ce:	e9 2d       	mov	r30, r9
    12d0:	e8 60       	ori	r30, 0x08	; 8
    12d2:	15 c0       	rjmp	.+42     	; 0x12fe <vfprintf+0xc8>
    12d4:	97 fc       	sbrc	r9, 7
    12d6:	2d c0       	rjmp	.+90     	; 0x1332 <vfprintf+0xfc>
    12d8:	20 ed       	ldi	r18, 0xD0	; 208
    12da:	28 0f       	add	r18, r24
    12dc:	2a 30       	cpi	r18, 0x0A	; 10
    12de:	88 f4       	brcc	.+34     	; 0x1302 <vfprintf+0xcc>
    12e0:	96 fe       	sbrs	r9, 6
    12e2:	06 c0       	rjmp	.+12     	; 0x12f0 <vfprintf+0xba>
    12e4:	3a e0       	ldi	r19, 0x0A	; 10
    12e6:	13 9f       	mul	r17, r19
    12e8:	20 0d       	add	r18, r0
    12ea:	11 24       	eor	r1, r1
    12ec:	12 2f       	mov	r17, r18
    12ee:	19 c0       	rjmp	.+50     	; 0x1322 <vfprintf+0xec>
    12f0:	8a e0       	ldi	r24, 0x0A	; 10
    12f2:	58 9e       	mul	r5, r24
    12f4:	20 0d       	add	r18, r0
    12f6:	11 24       	eor	r1, r1
    12f8:	52 2e       	mov	r5, r18
    12fa:	e9 2d       	mov	r30, r9
    12fc:	e0 62       	ori	r30, 0x20	; 32
    12fe:	9e 2e       	mov	r9, r30
    1300:	10 c0       	rjmp	.+32     	; 0x1322 <vfprintf+0xec>
    1302:	8e 32       	cpi	r24, 0x2E	; 46
    1304:	31 f4       	brne	.+12     	; 0x1312 <vfprintf+0xdc>
    1306:	96 fc       	sbrc	r9, 6
    1308:	e5 c2       	rjmp	.+1482   	; 0x18d4 <vfprintf+0x69e>
    130a:	f9 2d       	mov	r31, r9
    130c:	f0 64       	ori	r31, 0x40	; 64
    130e:	9f 2e       	mov	r9, r31
    1310:	08 c0       	rjmp	.+16     	; 0x1322 <vfprintf+0xec>
    1312:	8c 36       	cpi	r24, 0x6C	; 108
    1314:	21 f4       	brne	.+8      	; 0x131e <vfprintf+0xe8>
    1316:	29 2d       	mov	r18, r9
    1318:	20 68       	ori	r18, 0x80	; 128
    131a:	92 2e       	mov	r9, r18
    131c:	02 c0       	rjmp	.+4      	; 0x1322 <vfprintf+0xec>
    131e:	88 36       	cpi	r24, 0x68	; 104
    1320:	41 f4       	brne	.+16     	; 0x1332 <vfprintf+0xfc>
    1322:	f1 01       	movw	r30, r2
    1324:	93 fd       	sbrc	r25, 3
    1326:	85 91       	lpm	r24, Z+
    1328:	93 ff       	sbrs	r25, 3
    132a:	81 91       	ld	r24, Z+
    132c:	1f 01       	movw	r2, r30
    132e:	81 11       	cpse	r24, r1
    1330:	b3 cf       	rjmp	.-154    	; 0x1298 <vfprintf+0x62>
    1332:	9b eb       	ldi	r25, 0xBB	; 187
    1334:	98 0f       	add	r25, r24
    1336:	93 30       	cpi	r25, 0x03	; 3
    1338:	20 f4       	brcc	.+8      	; 0x1342 <vfprintf+0x10c>
    133a:	99 2d       	mov	r25, r9
    133c:	90 61       	ori	r25, 0x10	; 16
    133e:	80 5e       	subi	r24, 0xE0	; 224
    1340:	07 c0       	rjmp	.+14     	; 0x1350 <vfprintf+0x11a>
    1342:	9b e9       	ldi	r25, 0x9B	; 155
    1344:	98 0f       	add	r25, r24
    1346:	93 30       	cpi	r25, 0x03	; 3
    1348:	08 f0       	brcs	.+2      	; 0x134c <vfprintf+0x116>
    134a:	66 c1       	rjmp	.+716    	; 0x1618 <vfprintf+0x3e2>
    134c:	99 2d       	mov	r25, r9
    134e:	9f 7e       	andi	r25, 0xEF	; 239
    1350:	96 ff       	sbrs	r25, 6
    1352:	16 e0       	ldi	r17, 0x06	; 6
    1354:	9f 73       	andi	r25, 0x3F	; 63
    1356:	99 2e       	mov	r9, r25
    1358:	85 36       	cpi	r24, 0x65	; 101
    135a:	19 f4       	brne	.+6      	; 0x1362 <vfprintf+0x12c>
    135c:	90 64       	ori	r25, 0x40	; 64
    135e:	99 2e       	mov	r9, r25
    1360:	08 c0       	rjmp	.+16     	; 0x1372 <vfprintf+0x13c>
    1362:	86 36       	cpi	r24, 0x66	; 102
    1364:	21 f4       	brne	.+8      	; 0x136e <vfprintf+0x138>
    1366:	39 2f       	mov	r19, r25
    1368:	30 68       	ori	r19, 0x80	; 128
    136a:	93 2e       	mov	r9, r19
    136c:	02 c0       	rjmp	.+4      	; 0x1372 <vfprintf+0x13c>
    136e:	11 11       	cpse	r17, r1
    1370:	11 50       	subi	r17, 0x01	; 1
    1372:	97 fe       	sbrs	r9, 7
    1374:	07 c0       	rjmp	.+14     	; 0x1384 <vfprintf+0x14e>
    1376:	1c 33       	cpi	r17, 0x3C	; 60
    1378:	50 f4       	brcc	.+20     	; 0x138e <vfprintf+0x158>
    137a:	44 24       	eor	r4, r4
    137c:	43 94       	inc	r4
    137e:	41 0e       	add	r4, r17
    1380:	27 e0       	ldi	r18, 0x07	; 7
    1382:	0b c0       	rjmp	.+22     	; 0x139a <vfprintf+0x164>
    1384:	18 30       	cpi	r17, 0x08	; 8
    1386:	38 f0       	brcs	.+14     	; 0x1396 <vfprintf+0x160>
    1388:	27 e0       	ldi	r18, 0x07	; 7
    138a:	17 e0       	ldi	r17, 0x07	; 7
    138c:	05 c0       	rjmp	.+10     	; 0x1398 <vfprintf+0x162>
    138e:	27 e0       	ldi	r18, 0x07	; 7
    1390:	9c e3       	ldi	r25, 0x3C	; 60
    1392:	49 2e       	mov	r4, r25
    1394:	02 c0       	rjmp	.+4      	; 0x139a <vfprintf+0x164>
    1396:	21 2f       	mov	r18, r17
    1398:	41 2c       	mov	r4, r1
    139a:	56 01       	movw	r10, r12
    139c:	84 e0       	ldi	r24, 0x04	; 4
    139e:	a8 0e       	add	r10, r24
    13a0:	b1 1c       	adc	r11, r1
    13a2:	f6 01       	movw	r30, r12
    13a4:	60 81       	ld	r22, Z
    13a6:	71 81       	ldd	r23, Z+1	; 0x01
    13a8:	82 81       	ldd	r24, Z+2	; 0x02
    13aa:	93 81       	ldd	r25, Z+3	; 0x03
    13ac:	04 2d       	mov	r16, r4
    13ae:	a3 01       	movw	r20, r6
    13b0:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <__ftoa_engine>
    13b4:	6c 01       	movw	r12, r24
    13b6:	f9 81       	ldd	r31, Y+1	; 0x01
    13b8:	fc 87       	std	Y+12, r31	; 0x0c
    13ba:	f0 ff       	sbrs	r31, 0
    13bc:	02 c0       	rjmp	.+4      	; 0x13c2 <vfprintf+0x18c>
    13be:	f3 ff       	sbrs	r31, 3
    13c0:	06 c0       	rjmp	.+12     	; 0x13ce <vfprintf+0x198>
    13c2:	91 fc       	sbrc	r9, 1
    13c4:	06 c0       	rjmp	.+12     	; 0x13d2 <vfprintf+0x19c>
    13c6:	92 fe       	sbrs	r9, 2
    13c8:	06 c0       	rjmp	.+12     	; 0x13d6 <vfprintf+0x1a0>
    13ca:	00 e2       	ldi	r16, 0x20	; 32
    13cc:	05 c0       	rjmp	.+10     	; 0x13d8 <vfprintf+0x1a2>
    13ce:	0d e2       	ldi	r16, 0x2D	; 45
    13d0:	03 c0       	rjmp	.+6      	; 0x13d8 <vfprintf+0x1a2>
    13d2:	0b e2       	ldi	r16, 0x2B	; 43
    13d4:	01 c0       	rjmp	.+2      	; 0x13d8 <vfprintf+0x1a2>
    13d6:	00 e0       	ldi	r16, 0x00	; 0
    13d8:	8c 85       	ldd	r24, Y+12	; 0x0c
    13da:	8c 70       	andi	r24, 0x0C	; 12
    13dc:	19 f0       	breq	.+6      	; 0x13e4 <vfprintf+0x1ae>
    13de:	01 11       	cpse	r16, r1
    13e0:	5a c2       	rjmp	.+1204   	; 0x1896 <vfprintf+0x660>
    13e2:	9b c2       	rjmp	.+1334   	; 0x191a <vfprintf+0x6e4>
    13e4:	97 fe       	sbrs	r9, 7
    13e6:	10 c0       	rjmp	.+32     	; 0x1408 <vfprintf+0x1d2>
    13e8:	4c 0c       	add	r4, r12
    13ea:	fc 85       	ldd	r31, Y+12	; 0x0c
    13ec:	f4 ff       	sbrs	r31, 4
    13ee:	04 c0       	rjmp	.+8      	; 0x13f8 <vfprintf+0x1c2>
    13f0:	8a 81       	ldd	r24, Y+2	; 0x02
    13f2:	81 33       	cpi	r24, 0x31	; 49
    13f4:	09 f4       	brne	.+2      	; 0x13f8 <vfprintf+0x1c2>
    13f6:	4a 94       	dec	r4
    13f8:	14 14       	cp	r1, r4
    13fa:	74 f5       	brge	.+92     	; 0x1458 <vfprintf+0x222>
    13fc:	28 e0       	ldi	r18, 0x08	; 8
    13fe:	24 15       	cp	r18, r4
    1400:	78 f5       	brcc	.+94     	; 0x1460 <vfprintf+0x22a>
    1402:	88 e0       	ldi	r24, 0x08	; 8
    1404:	48 2e       	mov	r4, r24
    1406:	2c c0       	rjmp	.+88     	; 0x1460 <vfprintf+0x22a>
    1408:	96 fc       	sbrc	r9, 6
    140a:	2a c0       	rjmp	.+84     	; 0x1460 <vfprintf+0x22a>
    140c:	81 2f       	mov	r24, r17
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	8c 15       	cp	r24, r12
    1412:	9d 05       	cpc	r25, r13
    1414:	9c f0       	brlt	.+38     	; 0x143c <vfprintf+0x206>
    1416:	3c ef       	ldi	r19, 0xFC	; 252
    1418:	c3 16       	cp	r12, r19
    141a:	3f ef       	ldi	r19, 0xFF	; 255
    141c:	d3 06       	cpc	r13, r19
    141e:	74 f0       	brlt	.+28     	; 0x143c <vfprintf+0x206>
    1420:	89 2d       	mov	r24, r9
    1422:	80 68       	ori	r24, 0x80	; 128
    1424:	98 2e       	mov	r9, r24
    1426:	0a c0       	rjmp	.+20     	; 0x143c <vfprintf+0x206>
    1428:	e2 e0       	ldi	r30, 0x02	; 2
    142a:	f0 e0       	ldi	r31, 0x00	; 0
    142c:	ec 0f       	add	r30, r28
    142e:	fd 1f       	adc	r31, r29
    1430:	e1 0f       	add	r30, r17
    1432:	f1 1d       	adc	r31, r1
    1434:	80 81       	ld	r24, Z
    1436:	80 33       	cpi	r24, 0x30	; 48
    1438:	19 f4       	brne	.+6      	; 0x1440 <vfprintf+0x20a>
    143a:	11 50       	subi	r17, 0x01	; 1
    143c:	11 11       	cpse	r17, r1
    143e:	f4 cf       	rjmp	.-24     	; 0x1428 <vfprintf+0x1f2>
    1440:	97 fe       	sbrs	r9, 7
    1442:	0e c0       	rjmp	.+28     	; 0x1460 <vfprintf+0x22a>
    1444:	44 24       	eor	r4, r4
    1446:	43 94       	inc	r4
    1448:	41 0e       	add	r4, r17
    144a:	81 2f       	mov	r24, r17
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	c8 16       	cp	r12, r24
    1450:	d9 06       	cpc	r13, r25
    1452:	2c f4       	brge	.+10     	; 0x145e <vfprintf+0x228>
    1454:	1c 19       	sub	r17, r12
    1456:	04 c0       	rjmp	.+8      	; 0x1460 <vfprintf+0x22a>
    1458:	44 24       	eor	r4, r4
    145a:	43 94       	inc	r4
    145c:	01 c0       	rjmp	.+2      	; 0x1460 <vfprintf+0x22a>
    145e:	10 e0       	ldi	r17, 0x00	; 0
    1460:	97 fe       	sbrs	r9, 7
    1462:	06 c0       	rjmp	.+12     	; 0x1470 <vfprintf+0x23a>
    1464:	1c 14       	cp	r1, r12
    1466:	1d 04       	cpc	r1, r13
    1468:	34 f4       	brge	.+12     	; 0x1476 <vfprintf+0x240>
    146a:	c6 01       	movw	r24, r12
    146c:	01 96       	adiw	r24, 0x01	; 1
    146e:	05 c0       	rjmp	.+10     	; 0x147a <vfprintf+0x244>
    1470:	85 e0       	ldi	r24, 0x05	; 5
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	02 c0       	rjmp	.+4      	; 0x147a <vfprintf+0x244>
    1476:	81 e0       	ldi	r24, 0x01	; 1
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	01 11       	cpse	r16, r1
    147c:	01 96       	adiw	r24, 0x01	; 1
    147e:	11 23       	and	r17, r17
    1480:	31 f0       	breq	.+12     	; 0x148e <vfprintf+0x258>
    1482:	21 2f       	mov	r18, r17
    1484:	30 e0       	ldi	r19, 0x00	; 0
    1486:	2f 5f       	subi	r18, 0xFF	; 255
    1488:	3f 4f       	sbci	r19, 0xFF	; 255
    148a:	82 0f       	add	r24, r18
    148c:	93 1f       	adc	r25, r19
    148e:	25 2d       	mov	r18, r5
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	82 17       	cp	r24, r18
    1494:	93 07       	cpc	r25, r19
    1496:	14 f4       	brge	.+4      	; 0x149c <vfprintf+0x266>
    1498:	58 1a       	sub	r5, r24
    149a:	01 c0       	rjmp	.+2      	; 0x149e <vfprintf+0x268>
    149c:	51 2c       	mov	r5, r1
    149e:	89 2d       	mov	r24, r9
    14a0:	89 70       	andi	r24, 0x09	; 9
    14a2:	49 f4       	brne	.+18     	; 0x14b6 <vfprintf+0x280>
    14a4:	55 20       	and	r5, r5
    14a6:	39 f0       	breq	.+14     	; 0x14b6 <vfprintf+0x280>
    14a8:	b7 01       	movw	r22, r14
    14aa:	80 e2       	ldi	r24, 0x20	; 32
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    14b2:	5a 94       	dec	r5
    14b4:	f7 cf       	rjmp	.-18     	; 0x14a4 <vfprintf+0x26e>
    14b6:	00 23       	and	r16, r16
    14b8:	29 f0       	breq	.+10     	; 0x14c4 <vfprintf+0x28e>
    14ba:	b7 01       	movw	r22, r14
    14bc:	80 2f       	mov	r24, r16
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    14c4:	93 fc       	sbrc	r9, 3
    14c6:	09 c0       	rjmp	.+18     	; 0x14da <vfprintf+0x2a4>
    14c8:	55 20       	and	r5, r5
    14ca:	39 f0       	breq	.+14     	; 0x14da <vfprintf+0x2a4>
    14cc:	b7 01       	movw	r22, r14
    14ce:	80 e3       	ldi	r24, 0x30	; 48
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    14d6:	5a 94       	dec	r5
    14d8:	f7 cf       	rjmp	.-18     	; 0x14c8 <vfprintf+0x292>
    14da:	97 fe       	sbrs	r9, 7
    14dc:	4c c0       	rjmp	.+152    	; 0x1576 <vfprintf+0x340>
    14de:	46 01       	movw	r8, r12
    14e0:	d7 fe       	sbrs	r13, 7
    14e2:	02 c0       	rjmp	.+4      	; 0x14e8 <vfprintf+0x2b2>
    14e4:	81 2c       	mov	r8, r1
    14e6:	91 2c       	mov	r9, r1
    14e8:	c6 01       	movw	r24, r12
    14ea:	88 19       	sub	r24, r8
    14ec:	99 09       	sbc	r25, r9
    14ee:	f3 01       	movw	r30, r6
    14f0:	e8 0f       	add	r30, r24
    14f2:	f9 1f       	adc	r31, r25
    14f4:	fe 87       	std	Y+14, r31	; 0x0e
    14f6:	ed 87       	std	Y+13, r30	; 0x0d
    14f8:	96 01       	movw	r18, r12
    14fa:	24 19       	sub	r18, r4
    14fc:	31 09       	sbc	r19, r1
    14fe:	38 8b       	std	Y+16, r19	; 0x10
    1500:	2f 87       	std	Y+15, r18	; 0x0f
    1502:	01 2f       	mov	r16, r17
    1504:	10 e0       	ldi	r17, 0x00	; 0
    1506:	11 95       	neg	r17
    1508:	01 95       	neg	r16
    150a:	11 09       	sbc	r17, r1
    150c:	3f ef       	ldi	r19, 0xFF	; 255
    150e:	83 16       	cp	r8, r19
    1510:	93 06       	cpc	r9, r19
    1512:	29 f4       	brne	.+10     	; 0x151e <vfprintf+0x2e8>
    1514:	b7 01       	movw	r22, r14
    1516:	8e e2       	ldi	r24, 0x2E	; 46
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    151e:	c8 14       	cp	r12, r8
    1520:	d9 04       	cpc	r13, r9
    1522:	4c f0       	brlt	.+18     	; 0x1536 <vfprintf+0x300>
    1524:	8f 85       	ldd	r24, Y+15	; 0x0f
    1526:	98 89       	ldd	r25, Y+16	; 0x10
    1528:	88 15       	cp	r24, r8
    152a:	99 05       	cpc	r25, r9
    152c:	24 f4       	brge	.+8      	; 0x1536 <vfprintf+0x300>
    152e:	ed 85       	ldd	r30, Y+13	; 0x0d
    1530:	fe 85       	ldd	r31, Y+14	; 0x0e
    1532:	81 81       	ldd	r24, Z+1	; 0x01
    1534:	01 c0       	rjmp	.+2      	; 0x1538 <vfprintf+0x302>
    1536:	80 e3       	ldi	r24, 0x30	; 48
    1538:	f1 e0       	ldi	r31, 0x01	; 1
    153a:	8f 1a       	sub	r8, r31
    153c:	91 08       	sbc	r9, r1
    153e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1540:	3e 85       	ldd	r19, Y+14	; 0x0e
    1542:	2f 5f       	subi	r18, 0xFF	; 255
    1544:	3f 4f       	sbci	r19, 0xFF	; 255
    1546:	3e 87       	std	Y+14, r19	; 0x0e
    1548:	2d 87       	std	Y+13, r18	; 0x0d
    154a:	80 16       	cp	r8, r16
    154c:	91 06       	cpc	r9, r17
    154e:	2c f0       	brlt	.+10     	; 0x155a <vfprintf+0x324>
    1550:	b7 01       	movw	r22, r14
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    1558:	d9 cf       	rjmp	.-78     	; 0x150c <vfprintf+0x2d6>
    155a:	c8 14       	cp	r12, r8
    155c:	d9 04       	cpc	r13, r9
    155e:	41 f4       	brne	.+16     	; 0x1570 <vfprintf+0x33a>
    1560:	9a 81       	ldd	r25, Y+2	; 0x02
    1562:	96 33       	cpi	r25, 0x36	; 54
    1564:	20 f4       	brcc	.+8      	; 0x156e <vfprintf+0x338>
    1566:	95 33       	cpi	r25, 0x35	; 53
    1568:	19 f4       	brne	.+6      	; 0x1570 <vfprintf+0x33a>
    156a:	3c 85       	ldd	r19, Y+12	; 0x0c
    156c:	34 ff       	sbrs	r19, 4
    156e:	81 e3       	ldi	r24, 0x31	; 49
    1570:	b7 01       	movw	r22, r14
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	4e c0       	rjmp	.+156    	; 0x1612 <vfprintf+0x3dc>
    1576:	8a 81       	ldd	r24, Y+2	; 0x02
    1578:	81 33       	cpi	r24, 0x31	; 49
    157a:	19 f0       	breq	.+6      	; 0x1582 <vfprintf+0x34c>
    157c:	9c 85       	ldd	r25, Y+12	; 0x0c
    157e:	9f 7e       	andi	r25, 0xEF	; 239
    1580:	9c 87       	std	Y+12, r25	; 0x0c
    1582:	b7 01       	movw	r22, r14
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    158a:	11 11       	cpse	r17, r1
    158c:	05 c0       	rjmp	.+10     	; 0x1598 <vfprintf+0x362>
    158e:	94 fc       	sbrc	r9, 4
    1590:	18 c0       	rjmp	.+48     	; 0x15c2 <vfprintf+0x38c>
    1592:	85 e6       	ldi	r24, 0x65	; 101
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	17 c0       	rjmp	.+46     	; 0x15c6 <vfprintf+0x390>
    1598:	b7 01       	movw	r22, r14
    159a:	8e e2       	ldi	r24, 0x2E	; 46
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    15a2:	1e 5f       	subi	r17, 0xFE	; 254
    15a4:	82 e0       	ldi	r24, 0x02	; 2
    15a6:	01 e0       	ldi	r16, 0x01	; 1
    15a8:	08 0f       	add	r16, r24
    15aa:	f3 01       	movw	r30, r6
    15ac:	e8 0f       	add	r30, r24
    15ae:	f1 1d       	adc	r31, r1
    15b0:	80 81       	ld	r24, Z
    15b2:	b7 01       	movw	r22, r14
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    15ba:	80 2f       	mov	r24, r16
    15bc:	01 13       	cpse	r16, r17
    15be:	f3 cf       	rjmp	.-26     	; 0x15a6 <vfprintf+0x370>
    15c0:	e6 cf       	rjmp	.-52     	; 0x158e <vfprintf+0x358>
    15c2:	85 e4       	ldi	r24, 0x45	; 69
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	b7 01       	movw	r22, r14
    15c8:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    15cc:	d7 fc       	sbrc	r13, 7
    15ce:	06 c0       	rjmp	.+12     	; 0x15dc <vfprintf+0x3a6>
    15d0:	c1 14       	cp	r12, r1
    15d2:	d1 04       	cpc	r13, r1
    15d4:	41 f4       	brne	.+16     	; 0x15e6 <vfprintf+0x3b0>
    15d6:	ec 85       	ldd	r30, Y+12	; 0x0c
    15d8:	e4 ff       	sbrs	r30, 4
    15da:	05 c0       	rjmp	.+10     	; 0x15e6 <vfprintf+0x3b0>
    15dc:	d1 94       	neg	r13
    15de:	c1 94       	neg	r12
    15e0:	d1 08       	sbc	r13, r1
    15e2:	8d e2       	ldi	r24, 0x2D	; 45
    15e4:	01 c0       	rjmp	.+2      	; 0x15e8 <vfprintf+0x3b2>
    15e6:	8b e2       	ldi	r24, 0x2B	; 43
    15e8:	b7 01       	movw	r22, r14
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    15f0:	80 e3       	ldi	r24, 0x30	; 48
    15f2:	2a e0       	ldi	r18, 0x0A	; 10
    15f4:	c2 16       	cp	r12, r18
    15f6:	d1 04       	cpc	r13, r1
    15f8:	2c f0       	brlt	.+10     	; 0x1604 <vfprintf+0x3ce>
    15fa:	8f 5f       	subi	r24, 0xFF	; 255
    15fc:	fa e0       	ldi	r31, 0x0A	; 10
    15fe:	cf 1a       	sub	r12, r31
    1600:	d1 08       	sbc	r13, r1
    1602:	f7 cf       	rjmp	.-18     	; 0x15f2 <vfprintf+0x3bc>
    1604:	b7 01       	movw	r22, r14
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    160c:	b7 01       	movw	r22, r14
    160e:	c6 01       	movw	r24, r12
    1610:	c0 96       	adiw	r24, 0x30	; 48
    1612:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    1616:	54 c1       	rjmp	.+680    	; 0x18c0 <vfprintf+0x68a>
    1618:	83 36       	cpi	r24, 0x63	; 99
    161a:	31 f0       	breq	.+12     	; 0x1628 <vfprintf+0x3f2>
    161c:	83 37       	cpi	r24, 0x73	; 115
    161e:	79 f0       	breq	.+30     	; 0x163e <vfprintf+0x408>
    1620:	83 35       	cpi	r24, 0x53	; 83
    1622:	09 f0       	breq	.+2      	; 0x1626 <vfprintf+0x3f0>
    1624:	56 c0       	rjmp	.+172    	; 0x16d2 <vfprintf+0x49c>
    1626:	20 c0       	rjmp	.+64     	; 0x1668 <vfprintf+0x432>
    1628:	56 01       	movw	r10, r12
    162a:	32 e0       	ldi	r19, 0x02	; 2
    162c:	a3 0e       	add	r10, r19
    162e:	b1 1c       	adc	r11, r1
    1630:	f6 01       	movw	r30, r12
    1632:	80 81       	ld	r24, Z
    1634:	89 83       	std	Y+1, r24	; 0x01
    1636:	01 e0       	ldi	r16, 0x01	; 1
    1638:	10 e0       	ldi	r17, 0x00	; 0
    163a:	63 01       	movw	r12, r6
    163c:	12 c0       	rjmp	.+36     	; 0x1662 <vfprintf+0x42c>
    163e:	56 01       	movw	r10, r12
    1640:	f2 e0       	ldi	r31, 0x02	; 2
    1642:	af 0e       	add	r10, r31
    1644:	b1 1c       	adc	r11, r1
    1646:	f6 01       	movw	r30, r12
    1648:	c0 80       	ld	r12, Z
    164a:	d1 80       	ldd	r13, Z+1	; 0x01
    164c:	96 fe       	sbrs	r9, 6
    164e:	03 c0       	rjmp	.+6      	; 0x1656 <vfprintf+0x420>
    1650:	61 2f       	mov	r22, r17
    1652:	70 e0       	ldi	r23, 0x00	; 0
    1654:	02 c0       	rjmp	.+4      	; 0x165a <vfprintf+0x424>
    1656:	6f ef       	ldi	r22, 0xFF	; 255
    1658:	7f ef       	ldi	r23, 0xFF	; 255
    165a:	c6 01       	movw	r24, r12
    165c:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <strnlen>
    1660:	8c 01       	movw	r16, r24
    1662:	f9 2d       	mov	r31, r9
    1664:	ff 77       	andi	r31, 0x7F	; 127
    1666:	14 c0       	rjmp	.+40     	; 0x1690 <vfprintf+0x45a>
    1668:	56 01       	movw	r10, r12
    166a:	22 e0       	ldi	r18, 0x02	; 2
    166c:	a2 0e       	add	r10, r18
    166e:	b1 1c       	adc	r11, r1
    1670:	f6 01       	movw	r30, r12
    1672:	c0 80       	ld	r12, Z
    1674:	d1 80       	ldd	r13, Z+1	; 0x01
    1676:	96 fe       	sbrs	r9, 6
    1678:	03 c0       	rjmp	.+6      	; 0x1680 <vfprintf+0x44a>
    167a:	61 2f       	mov	r22, r17
    167c:	70 e0       	ldi	r23, 0x00	; 0
    167e:	02 c0       	rjmp	.+4      	; 0x1684 <vfprintf+0x44e>
    1680:	6f ef       	ldi	r22, 0xFF	; 255
    1682:	7f ef       	ldi	r23, 0xFF	; 255
    1684:	c6 01       	movw	r24, r12
    1686:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <strnlen_P>
    168a:	8c 01       	movw	r16, r24
    168c:	f9 2d       	mov	r31, r9
    168e:	f0 68       	ori	r31, 0x80	; 128
    1690:	9f 2e       	mov	r9, r31
    1692:	f3 fd       	sbrc	r31, 3
    1694:	1a c0       	rjmp	.+52     	; 0x16ca <vfprintf+0x494>
    1696:	85 2d       	mov	r24, r5
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	08 17       	cp	r16, r24
    169c:	19 07       	cpc	r17, r25
    169e:	a8 f4       	brcc	.+42     	; 0x16ca <vfprintf+0x494>
    16a0:	b7 01       	movw	r22, r14
    16a2:	80 e2       	ldi	r24, 0x20	; 32
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    16aa:	5a 94       	dec	r5
    16ac:	f4 cf       	rjmp	.-24     	; 0x1696 <vfprintf+0x460>
    16ae:	f6 01       	movw	r30, r12
    16b0:	97 fc       	sbrc	r9, 7
    16b2:	85 91       	lpm	r24, Z+
    16b4:	97 fe       	sbrs	r9, 7
    16b6:	81 91       	ld	r24, Z+
    16b8:	6f 01       	movw	r12, r30
    16ba:	b7 01       	movw	r22, r14
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    16c2:	51 10       	cpse	r5, r1
    16c4:	5a 94       	dec	r5
    16c6:	01 50       	subi	r16, 0x01	; 1
    16c8:	11 09       	sbc	r17, r1
    16ca:	01 15       	cp	r16, r1
    16cc:	11 05       	cpc	r17, r1
    16ce:	79 f7       	brne	.-34     	; 0x16ae <vfprintf+0x478>
    16d0:	f7 c0       	rjmp	.+494    	; 0x18c0 <vfprintf+0x68a>
    16d2:	84 36       	cpi	r24, 0x64	; 100
    16d4:	11 f0       	breq	.+4      	; 0x16da <vfprintf+0x4a4>
    16d6:	89 36       	cpi	r24, 0x69	; 105
    16d8:	61 f5       	brne	.+88     	; 0x1732 <vfprintf+0x4fc>
    16da:	56 01       	movw	r10, r12
    16dc:	97 fe       	sbrs	r9, 7
    16de:	09 c0       	rjmp	.+18     	; 0x16f2 <vfprintf+0x4bc>
    16e0:	24 e0       	ldi	r18, 0x04	; 4
    16e2:	a2 0e       	add	r10, r18
    16e4:	b1 1c       	adc	r11, r1
    16e6:	f6 01       	movw	r30, r12
    16e8:	60 81       	ld	r22, Z
    16ea:	71 81       	ldd	r23, Z+1	; 0x01
    16ec:	82 81       	ldd	r24, Z+2	; 0x02
    16ee:	93 81       	ldd	r25, Z+3	; 0x03
    16f0:	0a c0       	rjmp	.+20     	; 0x1706 <vfprintf+0x4d0>
    16f2:	f2 e0       	ldi	r31, 0x02	; 2
    16f4:	af 0e       	add	r10, r31
    16f6:	b1 1c       	adc	r11, r1
    16f8:	f6 01       	movw	r30, r12
    16fa:	60 81       	ld	r22, Z
    16fc:	71 81       	ldd	r23, Z+1	; 0x01
    16fe:	07 2e       	mov	r0, r23
    1700:	00 0c       	add	r0, r0
    1702:	88 0b       	sbc	r24, r24
    1704:	99 0b       	sbc	r25, r25
    1706:	f9 2d       	mov	r31, r9
    1708:	ff 76       	andi	r31, 0x6F	; 111
    170a:	9f 2e       	mov	r9, r31
    170c:	97 ff       	sbrs	r25, 7
    170e:	09 c0       	rjmp	.+18     	; 0x1722 <vfprintf+0x4ec>
    1710:	90 95       	com	r25
    1712:	80 95       	com	r24
    1714:	70 95       	com	r23
    1716:	61 95       	neg	r22
    1718:	7f 4f       	sbci	r23, 0xFF	; 255
    171a:	8f 4f       	sbci	r24, 0xFF	; 255
    171c:	9f 4f       	sbci	r25, 0xFF	; 255
    171e:	f0 68       	ori	r31, 0x80	; 128
    1720:	9f 2e       	mov	r9, r31
    1722:	2a e0       	ldi	r18, 0x0A	; 10
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	a3 01       	movw	r20, r6
    1728:	0e 94 75 0e 	call	0x1cea	; 0x1cea <__ultoa_invert>
    172c:	c8 2e       	mov	r12, r24
    172e:	c6 18       	sub	r12, r6
    1730:	3f c0       	rjmp	.+126    	; 0x17b0 <vfprintf+0x57a>
    1732:	09 2d       	mov	r16, r9
    1734:	85 37       	cpi	r24, 0x75	; 117
    1736:	21 f4       	brne	.+8      	; 0x1740 <vfprintf+0x50a>
    1738:	0f 7e       	andi	r16, 0xEF	; 239
    173a:	2a e0       	ldi	r18, 0x0A	; 10
    173c:	30 e0       	ldi	r19, 0x00	; 0
    173e:	1d c0       	rjmp	.+58     	; 0x177a <vfprintf+0x544>
    1740:	09 7f       	andi	r16, 0xF9	; 249
    1742:	8f 36       	cpi	r24, 0x6F	; 111
    1744:	91 f0       	breq	.+36     	; 0x176a <vfprintf+0x534>
    1746:	18 f4       	brcc	.+6      	; 0x174e <vfprintf+0x518>
    1748:	88 35       	cpi	r24, 0x58	; 88
    174a:	59 f0       	breq	.+22     	; 0x1762 <vfprintf+0x52c>
    174c:	c3 c0       	rjmp	.+390    	; 0x18d4 <vfprintf+0x69e>
    174e:	80 37       	cpi	r24, 0x70	; 112
    1750:	19 f0       	breq	.+6      	; 0x1758 <vfprintf+0x522>
    1752:	88 37       	cpi	r24, 0x78	; 120
    1754:	11 f0       	breq	.+4      	; 0x175a <vfprintf+0x524>
    1756:	be c0       	rjmp	.+380    	; 0x18d4 <vfprintf+0x69e>
    1758:	00 61       	ori	r16, 0x10	; 16
    175a:	04 ff       	sbrs	r16, 4
    175c:	09 c0       	rjmp	.+18     	; 0x1770 <vfprintf+0x53a>
    175e:	04 60       	ori	r16, 0x04	; 4
    1760:	07 c0       	rjmp	.+14     	; 0x1770 <vfprintf+0x53a>
    1762:	94 fe       	sbrs	r9, 4
    1764:	08 c0       	rjmp	.+16     	; 0x1776 <vfprintf+0x540>
    1766:	06 60       	ori	r16, 0x06	; 6
    1768:	06 c0       	rjmp	.+12     	; 0x1776 <vfprintf+0x540>
    176a:	28 e0       	ldi	r18, 0x08	; 8
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	05 c0       	rjmp	.+10     	; 0x177a <vfprintf+0x544>
    1770:	20 e1       	ldi	r18, 0x10	; 16
    1772:	30 e0       	ldi	r19, 0x00	; 0
    1774:	02 c0       	rjmp	.+4      	; 0x177a <vfprintf+0x544>
    1776:	20 e1       	ldi	r18, 0x10	; 16
    1778:	32 e0       	ldi	r19, 0x02	; 2
    177a:	56 01       	movw	r10, r12
    177c:	07 ff       	sbrs	r16, 7
    177e:	09 c0       	rjmp	.+18     	; 0x1792 <vfprintf+0x55c>
    1780:	84 e0       	ldi	r24, 0x04	; 4
    1782:	a8 0e       	add	r10, r24
    1784:	b1 1c       	adc	r11, r1
    1786:	f6 01       	movw	r30, r12
    1788:	60 81       	ld	r22, Z
    178a:	71 81       	ldd	r23, Z+1	; 0x01
    178c:	82 81       	ldd	r24, Z+2	; 0x02
    178e:	93 81       	ldd	r25, Z+3	; 0x03
    1790:	08 c0       	rjmp	.+16     	; 0x17a2 <vfprintf+0x56c>
    1792:	f2 e0       	ldi	r31, 0x02	; 2
    1794:	af 0e       	add	r10, r31
    1796:	b1 1c       	adc	r11, r1
    1798:	f6 01       	movw	r30, r12
    179a:	60 81       	ld	r22, Z
    179c:	71 81       	ldd	r23, Z+1	; 0x01
    179e:	80 e0       	ldi	r24, 0x00	; 0
    17a0:	90 e0       	ldi	r25, 0x00	; 0
    17a2:	a3 01       	movw	r20, r6
    17a4:	0e 94 75 0e 	call	0x1cea	; 0x1cea <__ultoa_invert>
    17a8:	c8 2e       	mov	r12, r24
    17aa:	c6 18       	sub	r12, r6
    17ac:	0f 77       	andi	r16, 0x7F	; 127
    17ae:	90 2e       	mov	r9, r16
    17b0:	96 fe       	sbrs	r9, 6
    17b2:	0b c0       	rjmp	.+22     	; 0x17ca <vfprintf+0x594>
    17b4:	09 2d       	mov	r16, r9
    17b6:	0e 7f       	andi	r16, 0xFE	; 254
    17b8:	c1 16       	cp	r12, r17
    17ba:	50 f4       	brcc	.+20     	; 0x17d0 <vfprintf+0x59a>
    17bc:	94 fe       	sbrs	r9, 4
    17be:	0a c0       	rjmp	.+20     	; 0x17d4 <vfprintf+0x59e>
    17c0:	92 fc       	sbrc	r9, 2
    17c2:	08 c0       	rjmp	.+16     	; 0x17d4 <vfprintf+0x59e>
    17c4:	09 2d       	mov	r16, r9
    17c6:	0e 7e       	andi	r16, 0xEE	; 238
    17c8:	05 c0       	rjmp	.+10     	; 0x17d4 <vfprintf+0x59e>
    17ca:	dc 2c       	mov	r13, r12
    17cc:	09 2d       	mov	r16, r9
    17ce:	03 c0       	rjmp	.+6      	; 0x17d6 <vfprintf+0x5a0>
    17d0:	dc 2c       	mov	r13, r12
    17d2:	01 c0       	rjmp	.+2      	; 0x17d6 <vfprintf+0x5a0>
    17d4:	d1 2e       	mov	r13, r17
    17d6:	04 ff       	sbrs	r16, 4
    17d8:	0d c0       	rjmp	.+26     	; 0x17f4 <vfprintf+0x5be>
    17da:	fe 01       	movw	r30, r28
    17dc:	ec 0d       	add	r30, r12
    17de:	f1 1d       	adc	r31, r1
    17e0:	80 81       	ld	r24, Z
    17e2:	80 33       	cpi	r24, 0x30	; 48
    17e4:	11 f4       	brne	.+4      	; 0x17ea <vfprintf+0x5b4>
    17e6:	09 7e       	andi	r16, 0xE9	; 233
    17e8:	09 c0       	rjmp	.+18     	; 0x17fc <vfprintf+0x5c6>
    17ea:	02 ff       	sbrs	r16, 2
    17ec:	06 c0       	rjmp	.+12     	; 0x17fa <vfprintf+0x5c4>
    17ee:	d3 94       	inc	r13
    17f0:	d3 94       	inc	r13
    17f2:	04 c0       	rjmp	.+8      	; 0x17fc <vfprintf+0x5c6>
    17f4:	80 2f       	mov	r24, r16
    17f6:	86 78       	andi	r24, 0x86	; 134
    17f8:	09 f0       	breq	.+2      	; 0x17fc <vfprintf+0x5c6>
    17fa:	d3 94       	inc	r13
    17fc:	03 fd       	sbrc	r16, 3
    17fe:	11 c0       	rjmp	.+34     	; 0x1822 <vfprintf+0x5ec>
    1800:	00 ff       	sbrs	r16, 0
    1802:	06 c0       	rjmp	.+12     	; 0x1810 <vfprintf+0x5da>
    1804:	1c 2d       	mov	r17, r12
    1806:	d5 14       	cp	r13, r5
    1808:	80 f4       	brcc	.+32     	; 0x182a <vfprintf+0x5f4>
    180a:	15 0d       	add	r17, r5
    180c:	1d 19       	sub	r17, r13
    180e:	0d c0       	rjmp	.+26     	; 0x182a <vfprintf+0x5f4>
    1810:	d5 14       	cp	r13, r5
    1812:	58 f4       	brcc	.+22     	; 0x182a <vfprintf+0x5f4>
    1814:	b7 01       	movw	r22, r14
    1816:	80 e2       	ldi	r24, 0x20	; 32
    1818:	90 e0       	ldi	r25, 0x00	; 0
    181a:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    181e:	d3 94       	inc	r13
    1820:	f7 cf       	rjmp	.-18     	; 0x1810 <vfprintf+0x5da>
    1822:	d5 14       	cp	r13, r5
    1824:	10 f4       	brcc	.+4      	; 0x182a <vfprintf+0x5f4>
    1826:	5d 18       	sub	r5, r13
    1828:	01 c0       	rjmp	.+2      	; 0x182c <vfprintf+0x5f6>
    182a:	51 2c       	mov	r5, r1
    182c:	04 ff       	sbrs	r16, 4
    182e:	10 c0       	rjmp	.+32     	; 0x1850 <vfprintf+0x61a>
    1830:	b7 01       	movw	r22, r14
    1832:	80 e3       	ldi	r24, 0x30	; 48
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    183a:	02 ff       	sbrs	r16, 2
    183c:	17 c0       	rjmp	.+46     	; 0x186c <vfprintf+0x636>
    183e:	01 fd       	sbrc	r16, 1
    1840:	03 c0       	rjmp	.+6      	; 0x1848 <vfprintf+0x612>
    1842:	88 e7       	ldi	r24, 0x78	; 120
    1844:	90 e0       	ldi	r25, 0x00	; 0
    1846:	02 c0       	rjmp	.+4      	; 0x184c <vfprintf+0x616>
    1848:	88 e5       	ldi	r24, 0x58	; 88
    184a:	90 e0       	ldi	r25, 0x00	; 0
    184c:	b7 01       	movw	r22, r14
    184e:	0c c0       	rjmp	.+24     	; 0x1868 <vfprintf+0x632>
    1850:	80 2f       	mov	r24, r16
    1852:	86 78       	andi	r24, 0x86	; 134
    1854:	59 f0       	breq	.+22     	; 0x186c <vfprintf+0x636>
    1856:	01 ff       	sbrs	r16, 1
    1858:	02 c0       	rjmp	.+4      	; 0x185e <vfprintf+0x628>
    185a:	8b e2       	ldi	r24, 0x2B	; 43
    185c:	01 c0       	rjmp	.+2      	; 0x1860 <vfprintf+0x62a>
    185e:	80 e2       	ldi	r24, 0x20	; 32
    1860:	07 fd       	sbrc	r16, 7
    1862:	8d e2       	ldi	r24, 0x2D	; 45
    1864:	b7 01       	movw	r22, r14
    1866:	90 e0       	ldi	r25, 0x00	; 0
    1868:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    186c:	c1 16       	cp	r12, r17
    186e:	38 f4       	brcc	.+14     	; 0x187e <vfprintf+0x648>
    1870:	b7 01       	movw	r22, r14
    1872:	80 e3       	ldi	r24, 0x30	; 48
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    187a:	11 50       	subi	r17, 0x01	; 1
    187c:	f7 cf       	rjmp	.-18     	; 0x186c <vfprintf+0x636>
    187e:	ca 94       	dec	r12
    1880:	f3 01       	movw	r30, r6
    1882:	ec 0d       	add	r30, r12
    1884:	f1 1d       	adc	r31, r1
    1886:	80 81       	ld	r24, Z
    1888:	b7 01       	movw	r22, r14
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    1890:	c1 10       	cpse	r12, r1
    1892:	f5 cf       	rjmp	.-22     	; 0x187e <vfprintf+0x648>
    1894:	15 c0       	rjmp	.+42     	; 0x18c0 <vfprintf+0x68a>
    1896:	f4 e0       	ldi	r31, 0x04	; 4
    1898:	f5 15       	cp	r31, r5
    189a:	60 f5       	brcc	.+88     	; 0x18f4 <vfprintf+0x6be>
    189c:	84 e0       	ldi	r24, 0x04	; 4
    189e:	58 1a       	sub	r5, r24
    18a0:	93 fe       	sbrs	r9, 3
    18a2:	1f c0       	rjmp	.+62     	; 0x18e2 <vfprintf+0x6ac>
    18a4:	01 11       	cpse	r16, r1
    18a6:	27 c0       	rjmp	.+78     	; 0x18f6 <vfprintf+0x6c0>
    18a8:	2c 85       	ldd	r18, Y+12	; 0x0c
    18aa:	23 ff       	sbrs	r18, 3
    18ac:	2a c0       	rjmp	.+84     	; 0x1902 <vfprintf+0x6cc>
    18ae:	00 e0       	ldi	r16, 0x00	; 0
    18b0:	11 e0       	ldi	r17, 0x01	; 1
    18b2:	39 2d       	mov	r19, r9
    18b4:	30 71       	andi	r19, 0x10	; 16
    18b6:	93 2e       	mov	r9, r19
    18b8:	f8 01       	movw	r30, r16
    18ba:	84 91       	lpm	r24, Z
    18bc:	81 11       	cpse	r24, r1
    18be:	24 c0       	rjmp	.+72     	; 0x1908 <vfprintf+0x6d2>
    18c0:	55 20       	and	r5, r5
    18c2:	09 f4       	brne	.+2      	; 0x18c6 <vfprintf+0x690>
    18c4:	e4 cc       	rjmp	.-1592   	; 0x128e <vfprintf+0x58>
    18c6:	b7 01       	movw	r22, r14
    18c8:	80 e2       	ldi	r24, 0x20	; 32
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    18d0:	5a 94       	dec	r5
    18d2:	f6 cf       	rjmp	.-20     	; 0x18c0 <vfprintf+0x68a>
    18d4:	f7 01       	movw	r30, r14
    18d6:	86 81       	ldd	r24, Z+6	; 0x06
    18d8:	97 81       	ldd	r25, Z+7	; 0x07
    18da:	26 c0       	rjmp	.+76     	; 0x1928 <vfprintf+0x6f2>
    18dc:	8f ef       	ldi	r24, 0xFF	; 255
    18de:	9f ef       	ldi	r25, 0xFF	; 255
    18e0:	23 c0       	rjmp	.+70     	; 0x1928 <vfprintf+0x6f2>
    18e2:	b7 01       	movw	r22, r14
    18e4:	80 e2       	ldi	r24, 0x20	; 32
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    18ec:	5a 94       	dec	r5
    18ee:	51 10       	cpse	r5, r1
    18f0:	f8 cf       	rjmp	.-16     	; 0x18e2 <vfprintf+0x6ac>
    18f2:	d8 cf       	rjmp	.-80     	; 0x18a4 <vfprintf+0x66e>
    18f4:	51 2c       	mov	r5, r1
    18f6:	b7 01       	movw	r22, r14
    18f8:	80 2f       	mov	r24, r16
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    1900:	d3 cf       	rjmp	.-90     	; 0x18a8 <vfprintf+0x672>
    1902:	04 e0       	ldi	r16, 0x04	; 4
    1904:	11 e0       	ldi	r17, 0x01	; 1
    1906:	d5 cf       	rjmp	.-86     	; 0x18b2 <vfprintf+0x67c>
    1908:	91 10       	cpse	r9, r1
    190a:	80 52       	subi	r24, 0x20	; 32
    190c:	b7 01       	movw	r22, r14
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <fputc>
    1914:	0f 5f       	subi	r16, 0xFF	; 255
    1916:	1f 4f       	sbci	r17, 0xFF	; 255
    1918:	cf cf       	rjmp	.-98     	; 0x18b8 <vfprintf+0x682>
    191a:	23 e0       	ldi	r18, 0x03	; 3
    191c:	25 15       	cp	r18, r5
    191e:	10 f4       	brcc	.+4      	; 0x1924 <vfprintf+0x6ee>
    1920:	83 e0       	ldi	r24, 0x03	; 3
    1922:	bd cf       	rjmp	.-134    	; 0x189e <vfprintf+0x668>
    1924:	51 2c       	mov	r5, r1
    1926:	c0 cf       	rjmp	.-128    	; 0x18a8 <vfprintf+0x672>
    1928:	60 96       	adiw	r28, 0x10	; 16
    192a:	e2 e1       	ldi	r30, 0x12	; 18
    192c:	0c 94 ff 0c 	jmp	0x19fe	; 0x19fe <__epilogue_restores__>

00001930 <__mulsi3>:
    1930:	db 01       	movw	r26, r22
    1932:	8f 93       	push	r24
    1934:	9f 93       	push	r25
    1936:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__muluhisi3>
    193a:	bf 91       	pop	r27
    193c:	af 91       	pop	r26
    193e:	a2 9f       	mul	r26, r18
    1940:	80 0d       	add	r24, r0
    1942:	91 1d       	adc	r25, r1
    1944:	a3 9f       	mul	r26, r19
    1946:	90 0d       	add	r25, r0
    1948:	b2 9f       	mul	r27, r18
    194a:	90 0d       	add	r25, r0
    194c:	11 24       	eor	r1, r1
    194e:	08 95       	ret

00001950 <__udivmodsi4>:
    1950:	a1 e2       	ldi	r26, 0x21	; 33
    1952:	1a 2e       	mov	r1, r26
    1954:	aa 1b       	sub	r26, r26
    1956:	bb 1b       	sub	r27, r27
    1958:	fd 01       	movw	r30, r26
    195a:	0d c0       	rjmp	.+26     	; 0x1976 <__udivmodsi4_ep>

0000195c <__udivmodsi4_loop>:
    195c:	aa 1f       	adc	r26, r26
    195e:	bb 1f       	adc	r27, r27
    1960:	ee 1f       	adc	r30, r30
    1962:	ff 1f       	adc	r31, r31
    1964:	a2 17       	cp	r26, r18
    1966:	b3 07       	cpc	r27, r19
    1968:	e4 07       	cpc	r30, r20
    196a:	f5 07       	cpc	r31, r21
    196c:	20 f0       	brcs	.+8      	; 0x1976 <__udivmodsi4_ep>
    196e:	a2 1b       	sub	r26, r18
    1970:	b3 0b       	sbc	r27, r19
    1972:	e4 0b       	sbc	r30, r20
    1974:	f5 0b       	sbc	r31, r21

00001976 <__udivmodsi4_ep>:
    1976:	66 1f       	adc	r22, r22
    1978:	77 1f       	adc	r23, r23
    197a:	88 1f       	adc	r24, r24
    197c:	99 1f       	adc	r25, r25
    197e:	1a 94       	dec	r1
    1980:	69 f7       	brne	.-38     	; 0x195c <__udivmodsi4_loop>
    1982:	60 95       	com	r22
    1984:	70 95       	com	r23
    1986:	80 95       	com	r24
    1988:	90 95       	com	r25
    198a:	9b 01       	movw	r18, r22
    198c:	ac 01       	movw	r20, r24
    198e:	bd 01       	movw	r22, r26
    1990:	cf 01       	movw	r24, r30
    1992:	08 95       	ret

00001994 <__tablejump2__>:
    1994:	ee 0f       	add	r30, r30
    1996:	ff 1f       	adc	r31, r31
    1998:	05 90       	lpm	r0, Z+
    199a:	f4 91       	lpm	r31, Z
    199c:	e0 2d       	mov	r30, r0
    199e:	09 94       	ijmp

000019a0 <__muluhisi3>:
    19a0:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <__umulhisi3>
    19a4:	a5 9f       	mul	r26, r21
    19a6:	90 0d       	add	r25, r0
    19a8:	b4 9f       	mul	r27, r20
    19aa:	90 0d       	add	r25, r0
    19ac:	a4 9f       	mul	r26, r20
    19ae:	80 0d       	add	r24, r0
    19b0:	91 1d       	adc	r25, r1
    19b2:	11 24       	eor	r1, r1
    19b4:	08 95       	ret

000019b6 <__mulshisi3>:
    19b6:	b7 ff       	sbrs	r27, 7
    19b8:	0c 94 d0 0c 	jmp	0x19a0	; 0x19a0 <__muluhisi3>

000019bc <__mulohisi3>:
    19bc:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__muluhisi3>
    19c0:	82 1b       	sub	r24, r18
    19c2:	93 0b       	sbc	r25, r19
    19c4:	08 95       	ret

000019c6 <__prologue_saves__>:
    19c6:	2f 92       	push	r2
    19c8:	3f 92       	push	r3
    19ca:	4f 92       	push	r4
    19cc:	5f 92       	push	r5
    19ce:	6f 92       	push	r6
    19d0:	7f 92       	push	r7
    19d2:	8f 92       	push	r8
    19d4:	9f 92       	push	r9
    19d6:	af 92       	push	r10
    19d8:	bf 92       	push	r11
    19da:	cf 92       	push	r12
    19dc:	df 92       	push	r13
    19de:	ef 92       	push	r14
    19e0:	ff 92       	push	r15
    19e2:	0f 93       	push	r16
    19e4:	1f 93       	push	r17
    19e6:	cf 93       	push	r28
    19e8:	df 93       	push	r29
    19ea:	cd b7       	in	r28, 0x3d	; 61
    19ec:	de b7       	in	r29, 0x3e	; 62
    19ee:	ca 1b       	sub	r28, r26
    19f0:	db 0b       	sbc	r29, r27
    19f2:	0f b6       	in	r0, 0x3f	; 63
    19f4:	f8 94       	cli
    19f6:	de bf       	out	0x3e, r29	; 62
    19f8:	0f be       	out	0x3f, r0	; 63
    19fa:	cd bf       	out	0x3d, r28	; 61
    19fc:	09 94       	ijmp

000019fe <__epilogue_restores__>:
    19fe:	2a 88       	ldd	r2, Y+18	; 0x12
    1a00:	39 88       	ldd	r3, Y+17	; 0x11
    1a02:	48 88       	ldd	r4, Y+16	; 0x10
    1a04:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a06:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a08:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a0a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a0c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a0e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a10:	b9 84       	ldd	r11, Y+9	; 0x09
    1a12:	c8 84       	ldd	r12, Y+8	; 0x08
    1a14:	df 80       	ldd	r13, Y+7	; 0x07
    1a16:	ee 80       	ldd	r14, Y+6	; 0x06
    1a18:	fd 80       	ldd	r15, Y+5	; 0x05
    1a1a:	0c 81       	ldd	r16, Y+4	; 0x04
    1a1c:	1b 81       	ldd	r17, Y+3	; 0x03
    1a1e:	aa 81       	ldd	r26, Y+2	; 0x02
    1a20:	b9 81       	ldd	r27, Y+1	; 0x01
    1a22:	ce 0f       	add	r28, r30
    1a24:	d1 1d       	adc	r29, r1
    1a26:	0f b6       	in	r0, 0x3f	; 63
    1a28:	f8 94       	cli
    1a2a:	de bf       	out	0x3e, r29	; 62
    1a2c:	0f be       	out	0x3f, r0	; 63
    1a2e:	cd bf       	out	0x3d, r28	; 61
    1a30:	ed 01       	movw	r28, r26
    1a32:	08 95       	ret

00001a34 <__umulhisi3>:
    1a34:	a2 9f       	mul	r26, r18
    1a36:	b0 01       	movw	r22, r0
    1a38:	b3 9f       	mul	r27, r19
    1a3a:	c0 01       	movw	r24, r0
    1a3c:	a3 9f       	mul	r26, r19
    1a3e:	70 0d       	add	r23, r0
    1a40:	81 1d       	adc	r24, r1
    1a42:	11 24       	eor	r1, r1
    1a44:	91 1d       	adc	r25, r1
    1a46:	b2 9f       	mul	r27, r18
    1a48:	70 0d       	add	r23, r0
    1a4a:	81 1d       	adc	r24, r1
    1a4c:	11 24       	eor	r1, r1
    1a4e:	91 1d       	adc	r25, r1
    1a50:	08 95       	ret

00001a52 <__ftoa_engine>:
    1a52:	28 30       	cpi	r18, 0x08	; 8
    1a54:	08 f0       	brcs	.+2      	; 0x1a58 <__ftoa_engine+0x6>
    1a56:	27 e0       	ldi	r18, 0x07	; 7
    1a58:	33 27       	eor	r19, r19
    1a5a:	da 01       	movw	r26, r20
    1a5c:	99 0f       	add	r25, r25
    1a5e:	31 1d       	adc	r19, r1
    1a60:	87 fd       	sbrc	r24, 7
    1a62:	91 60       	ori	r25, 0x01	; 1
    1a64:	00 96       	adiw	r24, 0x00	; 0
    1a66:	61 05       	cpc	r22, r1
    1a68:	71 05       	cpc	r23, r1
    1a6a:	39 f4       	brne	.+14     	; 0x1a7a <__ftoa_engine+0x28>
    1a6c:	32 60       	ori	r19, 0x02	; 2
    1a6e:	2e 5f       	subi	r18, 0xFE	; 254
    1a70:	3d 93       	st	X+, r19
    1a72:	30 e3       	ldi	r19, 0x30	; 48
    1a74:	2a 95       	dec	r18
    1a76:	e1 f7       	brne	.-8      	; 0x1a70 <__ftoa_engine+0x1e>
    1a78:	08 95       	ret
    1a7a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a7c:	30 f0       	brcs	.+12     	; 0x1a8a <__ftoa_engine+0x38>
    1a7e:	80 38       	cpi	r24, 0x80	; 128
    1a80:	71 05       	cpc	r23, r1
    1a82:	61 05       	cpc	r22, r1
    1a84:	09 f0       	breq	.+2      	; 0x1a88 <__ftoa_engine+0x36>
    1a86:	3c 5f       	subi	r19, 0xFC	; 252
    1a88:	3c 5f       	subi	r19, 0xFC	; 252
    1a8a:	3d 93       	st	X+, r19
    1a8c:	91 30       	cpi	r25, 0x01	; 1
    1a8e:	08 f0       	brcs	.+2      	; 0x1a92 <__ftoa_engine+0x40>
    1a90:	80 68       	ori	r24, 0x80	; 128
    1a92:	91 1d       	adc	r25, r1
    1a94:	df 93       	push	r29
    1a96:	cf 93       	push	r28
    1a98:	1f 93       	push	r17
    1a9a:	0f 93       	push	r16
    1a9c:	ff 92       	push	r15
    1a9e:	ef 92       	push	r14
    1aa0:	19 2f       	mov	r17, r25
    1aa2:	98 7f       	andi	r25, 0xF8	; 248
    1aa4:	96 95       	lsr	r25
    1aa6:	e9 2f       	mov	r30, r25
    1aa8:	96 95       	lsr	r25
    1aaa:	96 95       	lsr	r25
    1aac:	e9 0f       	add	r30, r25
    1aae:	ff 27       	eor	r31, r31
    1ab0:	ee 59       	subi	r30, 0x9E	; 158
    1ab2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ab4:	99 27       	eor	r25, r25
    1ab6:	33 27       	eor	r19, r19
    1ab8:	ee 24       	eor	r14, r14
    1aba:	ff 24       	eor	r15, r15
    1abc:	a7 01       	movw	r20, r14
    1abe:	e7 01       	movw	r28, r14
    1ac0:	05 90       	lpm	r0, Z+
    1ac2:	08 94       	sec
    1ac4:	07 94       	ror	r0
    1ac6:	28 f4       	brcc	.+10     	; 0x1ad2 <__ftoa_engine+0x80>
    1ac8:	36 0f       	add	r19, r22
    1aca:	e7 1e       	adc	r14, r23
    1acc:	f8 1e       	adc	r15, r24
    1ace:	49 1f       	adc	r20, r25
    1ad0:	51 1d       	adc	r21, r1
    1ad2:	66 0f       	add	r22, r22
    1ad4:	77 1f       	adc	r23, r23
    1ad6:	88 1f       	adc	r24, r24
    1ad8:	99 1f       	adc	r25, r25
    1ada:	06 94       	lsr	r0
    1adc:	a1 f7       	brne	.-24     	; 0x1ac6 <__ftoa_engine+0x74>
    1ade:	05 90       	lpm	r0, Z+
    1ae0:	07 94       	ror	r0
    1ae2:	28 f4       	brcc	.+10     	; 0x1aee <__ftoa_engine+0x9c>
    1ae4:	e7 0e       	add	r14, r23
    1ae6:	f8 1e       	adc	r15, r24
    1ae8:	49 1f       	adc	r20, r25
    1aea:	56 1f       	adc	r21, r22
    1aec:	c1 1d       	adc	r28, r1
    1aee:	77 0f       	add	r23, r23
    1af0:	88 1f       	adc	r24, r24
    1af2:	99 1f       	adc	r25, r25
    1af4:	66 1f       	adc	r22, r22
    1af6:	06 94       	lsr	r0
    1af8:	a1 f7       	brne	.-24     	; 0x1ae2 <__ftoa_engine+0x90>
    1afa:	05 90       	lpm	r0, Z+
    1afc:	07 94       	ror	r0
    1afe:	28 f4       	brcc	.+10     	; 0x1b0a <__ftoa_engine+0xb8>
    1b00:	f8 0e       	add	r15, r24
    1b02:	49 1f       	adc	r20, r25
    1b04:	56 1f       	adc	r21, r22
    1b06:	c7 1f       	adc	r28, r23
    1b08:	d1 1d       	adc	r29, r1
    1b0a:	88 0f       	add	r24, r24
    1b0c:	99 1f       	adc	r25, r25
    1b0e:	66 1f       	adc	r22, r22
    1b10:	77 1f       	adc	r23, r23
    1b12:	06 94       	lsr	r0
    1b14:	a1 f7       	brne	.-24     	; 0x1afe <__ftoa_engine+0xac>
    1b16:	05 90       	lpm	r0, Z+
    1b18:	07 94       	ror	r0
    1b1a:	20 f4       	brcc	.+8      	; 0x1b24 <__ftoa_engine+0xd2>
    1b1c:	49 0f       	add	r20, r25
    1b1e:	56 1f       	adc	r21, r22
    1b20:	c7 1f       	adc	r28, r23
    1b22:	d8 1f       	adc	r29, r24
    1b24:	99 0f       	add	r25, r25
    1b26:	66 1f       	adc	r22, r22
    1b28:	77 1f       	adc	r23, r23
    1b2a:	88 1f       	adc	r24, r24
    1b2c:	06 94       	lsr	r0
    1b2e:	a9 f7       	brne	.-22     	; 0x1b1a <__ftoa_engine+0xc8>
    1b30:	84 91       	lpm	r24, Z
    1b32:	10 95       	com	r17
    1b34:	17 70       	andi	r17, 0x07	; 7
    1b36:	41 f0       	breq	.+16     	; 0x1b48 <__ftoa_engine+0xf6>
    1b38:	d6 95       	lsr	r29
    1b3a:	c7 95       	ror	r28
    1b3c:	57 95       	ror	r21
    1b3e:	47 95       	ror	r20
    1b40:	f7 94       	ror	r15
    1b42:	e7 94       	ror	r14
    1b44:	1a 95       	dec	r17
    1b46:	c1 f7       	brne	.-16     	; 0x1b38 <__ftoa_engine+0xe6>
    1b48:	e8 e0       	ldi	r30, 0x08	; 8
    1b4a:	f1 e0       	ldi	r31, 0x01	; 1
    1b4c:	68 94       	set
    1b4e:	15 90       	lpm	r1, Z+
    1b50:	15 91       	lpm	r17, Z+
    1b52:	35 91       	lpm	r19, Z+
    1b54:	65 91       	lpm	r22, Z+
    1b56:	95 91       	lpm	r25, Z+
    1b58:	05 90       	lpm	r0, Z+
    1b5a:	7f e2       	ldi	r23, 0x2F	; 47
    1b5c:	73 95       	inc	r23
    1b5e:	e1 18       	sub	r14, r1
    1b60:	f1 0a       	sbc	r15, r17
    1b62:	43 0b       	sbc	r20, r19
    1b64:	56 0b       	sbc	r21, r22
    1b66:	c9 0b       	sbc	r28, r25
    1b68:	d0 09       	sbc	r29, r0
    1b6a:	c0 f7       	brcc	.-16     	; 0x1b5c <__ftoa_engine+0x10a>
    1b6c:	e1 0c       	add	r14, r1
    1b6e:	f1 1e       	adc	r15, r17
    1b70:	43 1f       	adc	r20, r19
    1b72:	56 1f       	adc	r21, r22
    1b74:	c9 1f       	adc	r28, r25
    1b76:	d0 1d       	adc	r29, r0
    1b78:	7e f4       	brtc	.+30     	; 0x1b98 <__ftoa_engine+0x146>
    1b7a:	70 33       	cpi	r23, 0x30	; 48
    1b7c:	11 f4       	brne	.+4      	; 0x1b82 <__ftoa_engine+0x130>
    1b7e:	8a 95       	dec	r24
    1b80:	e6 cf       	rjmp	.-52     	; 0x1b4e <__ftoa_engine+0xfc>
    1b82:	e8 94       	clt
    1b84:	01 50       	subi	r16, 0x01	; 1
    1b86:	30 f0       	brcs	.+12     	; 0x1b94 <__ftoa_engine+0x142>
    1b88:	08 0f       	add	r16, r24
    1b8a:	0a f4       	brpl	.+2      	; 0x1b8e <__ftoa_engine+0x13c>
    1b8c:	00 27       	eor	r16, r16
    1b8e:	02 17       	cp	r16, r18
    1b90:	08 f4       	brcc	.+2      	; 0x1b94 <__ftoa_engine+0x142>
    1b92:	20 2f       	mov	r18, r16
    1b94:	23 95       	inc	r18
    1b96:	02 2f       	mov	r16, r18
    1b98:	7a 33       	cpi	r23, 0x3A	; 58
    1b9a:	28 f0       	brcs	.+10     	; 0x1ba6 <__ftoa_engine+0x154>
    1b9c:	79 e3       	ldi	r23, 0x39	; 57
    1b9e:	7d 93       	st	X+, r23
    1ba0:	2a 95       	dec	r18
    1ba2:	e9 f7       	brne	.-6      	; 0x1b9e <__ftoa_engine+0x14c>
    1ba4:	10 c0       	rjmp	.+32     	; 0x1bc6 <__ftoa_engine+0x174>
    1ba6:	7d 93       	st	X+, r23
    1ba8:	2a 95       	dec	r18
    1baa:	89 f6       	brne	.-94     	; 0x1b4e <__ftoa_engine+0xfc>
    1bac:	06 94       	lsr	r0
    1bae:	97 95       	ror	r25
    1bb0:	67 95       	ror	r22
    1bb2:	37 95       	ror	r19
    1bb4:	17 95       	ror	r17
    1bb6:	17 94       	ror	r1
    1bb8:	e1 18       	sub	r14, r1
    1bba:	f1 0a       	sbc	r15, r17
    1bbc:	43 0b       	sbc	r20, r19
    1bbe:	56 0b       	sbc	r21, r22
    1bc0:	c9 0b       	sbc	r28, r25
    1bc2:	d0 09       	sbc	r29, r0
    1bc4:	98 f0       	brcs	.+38     	; 0x1bec <__ftoa_engine+0x19a>
    1bc6:	23 95       	inc	r18
    1bc8:	7e 91       	ld	r23, -X
    1bca:	73 95       	inc	r23
    1bcc:	7a 33       	cpi	r23, 0x3A	; 58
    1bce:	08 f0       	brcs	.+2      	; 0x1bd2 <__ftoa_engine+0x180>
    1bd0:	70 e3       	ldi	r23, 0x30	; 48
    1bd2:	7c 93       	st	X, r23
    1bd4:	20 13       	cpse	r18, r16
    1bd6:	b8 f7       	brcc	.-18     	; 0x1bc6 <__ftoa_engine+0x174>
    1bd8:	7e 91       	ld	r23, -X
    1bda:	70 61       	ori	r23, 0x10	; 16
    1bdc:	7d 93       	st	X+, r23
    1bde:	30 f0       	brcs	.+12     	; 0x1bec <__ftoa_engine+0x19a>
    1be0:	83 95       	inc	r24
    1be2:	71 e3       	ldi	r23, 0x31	; 49
    1be4:	7d 93       	st	X+, r23
    1be6:	70 e3       	ldi	r23, 0x30	; 48
    1be8:	2a 95       	dec	r18
    1bea:	e1 f7       	brne	.-8      	; 0x1be4 <__ftoa_engine+0x192>
    1bec:	11 24       	eor	r1, r1
    1bee:	ef 90       	pop	r14
    1bf0:	ff 90       	pop	r15
    1bf2:	0f 91       	pop	r16
    1bf4:	1f 91       	pop	r17
    1bf6:	cf 91       	pop	r28
    1bf8:	df 91       	pop	r29
    1bfa:	99 27       	eor	r25, r25
    1bfc:	87 fd       	sbrc	r24, 7
    1bfe:	90 95       	com	r25
    1c00:	08 95       	ret

00001c02 <strnlen_P>:
    1c02:	fc 01       	movw	r30, r24
    1c04:	05 90       	lpm	r0, Z+
    1c06:	61 50       	subi	r22, 0x01	; 1
    1c08:	70 40       	sbci	r23, 0x00	; 0
    1c0a:	01 10       	cpse	r0, r1
    1c0c:	d8 f7       	brcc	.-10     	; 0x1c04 <strnlen_P+0x2>
    1c0e:	80 95       	com	r24
    1c10:	90 95       	com	r25
    1c12:	8e 0f       	add	r24, r30
    1c14:	9f 1f       	adc	r25, r31
    1c16:	08 95       	ret

00001c18 <strnlen>:
    1c18:	fc 01       	movw	r30, r24
    1c1a:	61 50       	subi	r22, 0x01	; 1
    1c1c:	70 40       	sbci	r23, 0x00	; 0
    1c1e:	01 90       	ld	r0, Z+
    1c20:	01 10       	cpse	r0, r1
    1c22:	d8 f7       	brcc	.-10     	; 0x1c1a <strnlen+0x2>
    1c24:	80 95       	com	r24
    1c26:	90 95       	com	r25
    1c28:	8e 0f       	add	r24, r30
    1c2a:	9f 1f       	adc	r25, r31
    1c2c:	08 95       	ret

00001c2e <fputc>:
    1c2e:	0f 93       	push	r16
    1c30:	1f 93       	push	r17
    1c32:	cf 93       	push	r28
    1c34:	df 93       	push	r29
    1c36:	fb 01       	movw	r30, r22
    1c38:	23 81       	ldd	r18, Z+3	; 0x03
    1c3a:	21 fd       	sbrc	r18, 1
    1c3c:	03 c0       	rjmp	.+6      	; 0x1c44 <fputc+0x16>
    1c3e:	8f ef       	ldi	r24, 0xFF	; 255
    1c40:	9f ef       	ldi	r25, 0xFF	; 255
    1c42:	2c c0       	rjmp	.+88     	; 0x1c9c <fputc+0x6e>
    1c44:	22 ff       	sbrs	r18, 2
    1c46:	16 c0       	rjmp	.+44     	; 0x1c74 <fputc+0x46>
    1c48:	46 81       	ldd	r20, Z+6	; 0x06
    1c4a:	57 81       	ldd	r21, Z+7	; 0x07
    1c4c:	24 81       	ldd	r18, Z+4	; 0x04
    1c4e:	35 81       	ldd	r19, Z+5	; 0x05
    1c50:	42 17       	cp	r20, r18
    1c52:	53 07       	cpc	r21, r19
    1c54:	44 f4       	brge	.+16     	; 0x1c66 <fputc+0x38>
    1c56:	a0 81       	ld	r26, Z
    1c58:	b1 81       	ldd	r27, Z+1	; 0x01
    1c5a:	9d 01       	movw	r18, r26
    1c5c:	2f 5f       	subi	r18, 0xFF	; 255
    1c5e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c60:	31 83       	std	Z+1, r19	; 0x01
    1c62:	20 83       	st	Z, r18
    1c64:	8c 93       	st	X, r24
    1c66:	26 81       	ldd	r18, Z+6	; 0x06
    1c68:	37 81       	ldd	r19, Z+7	; 0x07
    1c6a:	2f 5f       	subi	r18, 0xFF	; 255
    1c6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c6e:	37 83       	std	Z+7, r19	; 0x07
    1c70:	26 83       	std	Z+6, r18	; 0x06
    1c72:	14 c0       	rjmp	.+40     	; 0x1c9c <fputc+0x6e>
    1c74:	8b 01       	movw	r16, r22
    1c76:	ec 01       	movw	r28, r24
    1c78:	fb 01       	movw	r30, r22
    1c7a:	00 84       	ldd	r0, Z+8	; 0x08
    1c7c:	f1 85       	ldd	r31, Z+9	; 0x09
    1c7e:	e0 2d       	mov	r30, r0
    1c80:	09 95       	icall
    1c82:	89 2b       	or	r24, r25
    1c84:	e1 f6       	brne	.-72     	; 0x1c3e <fputc+0x10>
    1c86:	d8 01       	movw	r26, r16
    1c88:	16 96       	adiw	r26, 0x06	; 6
    1c8a:	8d 91       	ld	r24, X+
    1c8c:	9c 91       	ld	r25, X
    1c8e:	17 97       	sbiw	r26, 0x07	; 7
    1c90:	01 96       	adiw	r24, 0x01	; 1
    1c92:	17 96       	adiw	r26, 0x07	; 7
    1c94:	9c 93       	st	X, r25
    1c96:	8e 93       	st	-X, r24
    1c98:	16 97       	sbiw	r26, 0x06	; 6
    1c9a:	ce 01       	movw	r24, r28
    1c9c:	df 91       	pop	r29
    1c9e:	cf 91       	pop	r28
    1ca0:	1f 91       	pop	r17
    1ca2:	0f 91       	pop	r16
    1ca4:	08 95       	ret

00001ca6 <sprintf>:
    1ca6:	ae e0       	ldi	r26, 0x0E	; 14
    1ca8:	b0 e0       	ldi	r27, 0x00	; 0
    1caa:	e9 e5       	ldi	r30, 0x59	; 89
    1cac:	fe e0       	ldi	r31, 0x0E	; 14
    1cae:	0c 94 f1 0c 	jmp	0x19e2	; 0x19e2 <__prologue_saves__+0x1c>
    1cb2:	0d 89       	ldd	r16, Y+21	; 0x15
    1cb4:	1e 89       	ldd	r17, Y+22	; 0x16
    1cb6:	86 e0       	ldi	r24, 0x06	; 6
    1cb8:	8c 83       	std	Y+4, r24	; 0x04
    1cba:	1a 83       	std	Y+2, r17	; 0x02
    1cbc:	09 83       	std	Y+1, r16	; 0x01
    1cbe:	8f ef       	ldi	r24, 0xFF	; 255
    1cc0:	9f e7       	ldi	r25, 0x7F	; 127
    1cc2:	9e 83       	std	Y+6, r25	; 0x06
    1cc4:	8d 83       	std	Y+5, r24	; 0x05
    1cc6:	ae 01       	movw	r20, r28
    1cc8:	47 5e       	subi	r20, 0xE7	; 231
    1cca:	5f 4f       	sbci	r21, 0xFF	; 255
    1ccc:	6f 89       	ldd	r22, Y+23	; 0x17
    1cce:	78 8d       	ldd	r23, Y+24	; 0x18
    1cd0:	ce 01       	movw	r24, r28
    1cd2:	01 96       	adiw	r24, 0x01	; 1
    1cd4:	0e 94 1b 09 	call	0x1236	; 0x1236 <vfprintf>
    1cd8:	ef 81       	ldd	r30, Y+7	; 0x07
    1cda:	f8 85       	ldd	r31, Y+8	; 0x08
    1cdc:	e0 0f       	add	r30, r16
    1cde:	f1 1f       	adc	r31, r17
    1ce0:	10 82       	st	Z, r1
    1ce2:	2e 96       	adiw	r28, 0x0e	; 14
    1ce4:	e4 e0       	ldi	r30, 0x04	; 4
    1ce6:	0c 94 0d 0d 	jmp	0x1a1a	; 0x1a1a <__epilogue_restores__+0x1c>

00001cea <__ultoa_invert>:
    1cea:	fa 01       	movw	r30, r20
    1cec:	aa 27       	eor	r26, r26
    1cee:	28 30       	cpi	r18, 0x08	; 8
    1cf0:	51 f1       	breq	.+84     	; 0x1d46 <__ultoa_invert+0x5c>
    1cf2:	20 31       	cpi	r18, 0x10	; 16
    1cf4:	81 f1       	breq	.+96     	; 0x1d56 <__ultoa_invert+0x6c>
    1cf6:	e8 94       	clt
    1cf8:	6f 93       	push	r22
    1cfa:	6e 7f       	andi	r22, 0xFE	; 254
    1cfc:	6e 5f       	subi	r22, 0xFE	; 254
    1cfe:	7f 4f       	sbci	r23, 0xFF	; 255
    1d00:	8f 4f       	sbci	r24, 0xFF	; 255
    1d02:	9f 4f       	sbci	r25, 0xFF	; 255
    1d04:	af 4f       	sbci	r26, 0xFF	; 255
    1d06:	b1 e0       	ldi	r27, 0x01	; 1
    1d08:	3e d0       	rcall	.+124    	; 0x1d86 <__ultoa_invert+0x9c>
    1d0a:	b4 e0       	ldi	r27, 0x04	; 4
    1d0c:	3c d0       	rcall	.+120    	; 0x1d86 <__ultoa_invert+0x9c>
    1d0e:	67 0f       	add	r22, r23
    1d10:	78 1f       	adc	r23, r24
    1d12:	89 1f       	adc	r24, r25
    1d14:	9a 1f       	adc	r25, r26
    1d16:	a1 1d       	adc	r26, r1
    1d18:	68 0f       	add	r22, r24
    1d1a:	79 1f       	adc	r23, r25
    1d1c:	8a 1f       	adc	r24, r26
    1d1e:	91 1d       	adc	r25, r1
    1d20:	a1 1d       	adc	r26, r1
    1d22:	6a 0f       	add	r22, r26
    1d24:	71 1d       	adc	r23, r1
    1d26:	81 1d       	adc	r24, r1
    1d28:	91 1d       	adc	r25, r1
    1d2a:	a1 1d       	adc	r26, r1
    1d2c:	20 d0       	rcall	.+64     	; 0x1d6e <__ultoa_invert+0x84>
    1d2e:	09 f4       	brne	.+2      	; 0x1d32 <__ultoa_invert+0x48>
    1d30:	68 94       	set
    1d32:	3f 91       	pop	r19
    1d34:	2a e0       	ldi	r18, 0x0A	; 10
    1d36:	26 9f       	mul	r18, r22
    1d38:	11 24       	eor	r1, r1
    1d3a:	30 19       	sub	r19, r0
    1d3c:	30 5d       	subi	r19, 0xD0	; 208
    1d3e:	31 93       	st	Z+, r19
    1d40:	de f6       	brtc	.-74     	; 0x1cf8 <__ultoa_invert+0xe>
    1d42:	cf 01       	movw	r24, r30
    1d44:	08 95       	ret
    1d46:	46 2f       	mov	r20, r22
    1d48:	47 70       	andi	r20, 0x07	; 7
    1d4a:	40 5d       	subi	r20, 0xD0	; 208
    1d4c:	41 93       	st	Z+, r20
    1d4e:	b3 e0       	ldi	r27, 0x03	; 3
    1d50:	0f d0       	rcall	.+30     	; 0x1d70 <__ultoa_invert+0x86>
    1d52:	c9 f7       	brne	.-14     	; 0x1d46 <__ultoa_invert+0x5c>
    1d54:	f6 cf       	rjmp	.-20     	; 0x1d42 <__ultoa_invert+0x58>
    1d56:	46 2f       	mov	r20, r22
    1d58:	4f 70       	andi	r20, 0x0F	; 15
    1d5a:	40 5d       	subi	r20, 0xD0	; 208
    1d5c:	4a 33       	cpi	r20, 0x3A	; 58
    1d5e:	18 f0       	brcs	.+6      	; 0x1d66 <__ultoa_invert+0x7c>
    1d60:	49 5d       	subi	r20, 0xD9	; 217
    1d62:	31 fd       	sbrc	r19, 1
    1d64:	40 52       	subi	r20, 0x20	; 32
    1d66:	41 93       	st	Z+, r20
    1d68:	02 d0       	rcall	.+4      	; 0x1d6e <__ultoa_invert+0x84>
    1d6a:	a9 f7       	brne	.-22     	; 0x1d56 <__ultoa_invert+0x6c>
    1d6c:	ea cf       	rjmp	.-44     	; 0x1d42 <__ultoa_invert+0x58>
    1d6e:	b4 e0       	ldi	r27, 0x04	; 4
    1d70:	a6 95       	lsr	r26
    1d72:	97 95       	ror	r25
    1d74:	87 95       	ror	r24
    1d76:	77 95       	ror	r23
    1d78:	67 95       	ror	r22
    1d7a:	ba 95       	dec	r27
    1d7c:	c9 f7       	brne	.-14     	; 0x1d70 <__ultoa_invert+0x86>
    1d7e:	00 97       	sbiw	r24, 0x00	; 0
    1d80:	61 05       	cpc	r22, r1
    1d82:	71 05       	cpc	r23, r1
    1d84:	08 95       	ret
    1d86:	9b 01       	movw	r18, r22
    1d88:	ac 01       	movw	r20, r24
    1d8a:	0a 2e       	mov	r0, r26
    1d8c:	06 94       	lsr	r0
    1d8e:	57 95       	ror	r21
    1d90:	47 95       	ror	r20
    1d92:	37 95       	ror	r19
    1d94:	27 95       	ror	r18
    1d96:	ba 95       	dec	r27
    1d98:	c9 f7       	brne	.-14     	; 0x1d8c <__ultoa_invert+0xa2>
    1d9a:	62 0f       	add	r22, r18
    1d9c:	73 1f       	adc	r23, r19
    1d9e:	84 1f       	adc	r24, r20
    1da0:	95 1f       	adc	r25, r21
    1da2:	a0 1d       	adc	r26, r0
    1da4:	08 95       	ret

00001da6 <_exit>:
    1da6:	f8 94       	cli

00001da8 <__stop_program>:
    1da8:	ff cf       	rjmp	.-2      	; 0x1da8 <__stop_program>
